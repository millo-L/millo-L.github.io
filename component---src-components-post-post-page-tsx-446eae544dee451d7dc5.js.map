{"version":3,"sources":["webpack:///./src/components/main/MainPageRowTemplate.tsx","webpack:///./src/components/base/Footer.tsx","webpack:///./node_modules/react-adsense-google/dist/GoogleAdsense.js","webpack:///./src/components/post/PostTemplate.tsx","webpack:///./src/components/post/ScrollSpy.tsx","webpack:///./src/components/post/PostToC.tsx","webpack:///./src/components/post/PostSeriesList.tsx","webpack:///./src/components/post/PrevNextPostItem.tsx","webpack:///./src/components/post/PrevNextPost.tsx","webpack:///./src/components/post/TagList.tsx","webpack:///./src/components/post/PostViewer.tsx","webpack:///./src/components/post/Utterances.tsx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","webpack:///./src/components/post/PostPage.tsx","webpack:///./node_modules/react-adsense-google/dist/index.js"],"names":["Wrapper","Styled","div","MainPageRowTemplate","children","style","memo","FooterWrapper","palette","gray","Footer","className","Object","defineProperty","exports","value","default","_react","obj","__esModule","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","WeakMap","GoogleAdsense","props","useEffect","window","adsbygoogle","push","createElement","concat","adClient","adSlot","adLayout","adLayoutKey","adFormat","fullWidthResponsive","defaultProps","display","_default","BackgroundStyle","createGlobalStyle","PostTemplateWrapper","PostTemplate","ScrollSpy","target","refs","sensitivity","this","targets","Array","from","querySelectorAll","addEventListener","onScroll","isOnTopOfDoc","deactiveateTarget","forEach","ref","t","findTarget","id","activate","document","documentElement","scrollTop","offsetTop","a","deactivate","filter","decodeURIComponent","attributes","replace","el","classList","add","remove","ToCWrapper","media","custom","indigo","PostToC","tableOfContents","post","querySelector","headings","h","toc","dangerouslySetInnerHTML","__html","PostSeriesList","series","seriesList","nowPostTitle","lang","useToggle","seriesListVisible","onToggle","to","map","index","title","slug","onClick","bounceLeft","keyframes","bounceRight","Circle","styled","Link","right","css","Text","small","ellipsis","PrevNextPostItem","seriesPost","mediaQuery","ItemWrapper","PrevNextPost","len","length","useCallback","i","nowPageIndex","TagItemWrapper","TagItem","tag","TagListWrapper","TagList","tags","PostViewerWrapper","PostContentWrapper","PostViewer","html","released_at","updated_at","category","onClickTag","categoryMap","src","formatDate","Utterances","React","TypeError","containerRef","createRef","useLayoutEffect","utterances","repo","label","theme","crossOrigin","async","entries","setAttribute","current","appendChild","displayName","PostPage","data","markdownRemark","site","allMarkdownRemark","reshapeSeries","edges","edge","node","frontmatter","fields","SEO","description","date","url","siteMetadata","siteUrl","image","childImageSharp","fluid","Header","ko_to","translation","en_to","MainResponsive","marginTop","marginBottom","SimpleProfile","type","categoryVisible","filterByLanguage"],"mappings":"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","file":"component---src-components-post-post-page-tsx-446eae544dee451d7dc5.js","sourcesContent":["import React, { memo } from \"react\"\r\nimport Styled from \"styled-components\"\r\n\r\nconst Wrapper = Styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: row;\r\n    \r\n`\r\n\r\ninterface MainPageRowTemplateProps {\r\n    children: React.ReactNode\r\n    style?: React.CSSProperties;\r\n}\r\n\r\nconst MainPageRowTemplate = ({ children, style }: MainPageRowTemplateProps) => {\r\n    return <Wrapper style={style}>{children}</Wrapper>\r\n}\r\n\r\nexport default memo(MainPageRowTemplate)\r\n","import React from 'react';\r\nimport Styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport ProfileIcons from '../common/ProfileIcons';\r\n\r\nconst FooterWrapper = Styled.div`\r\n    display: flex;\r\n    border-top: 1px solid ${palette.gray[5]};\r\n    margin-top: 5rem;\r\n    width: 100%;\r\n    height: 8rem;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n\r\n    span {\r\n        font-size: 1.5rem;\r\n    }\r\n\r\n    .icon-wrapper {\r\n        width: 9rem;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        flex-direction: row;\r\n        margin-top: 1rem;\r\n        svg {\r\n            width: 30%;\r\n            height: 1.5rem;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <FooterWrapper>\r\n            <span>millo's tech blog</span>\r\n            <ProfileIcons className=\"icon-wrapper\" />\r\n        </FooterWrapper>\r\n    );\r\n}\r\n\r\nexport default Footer;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar GoogleAdsense = function GoogleAdsense(props) {\n  (0, _react.useEffect)(function () {\n    if (window) (window.adsbygoogle = window.adsbygoogle || []).push({});\n  });\n  return /*#__PURE__*/_react.default.createElement(\"ins\", {\n    className: \"adsbygoogle \".concat(props.className),\n    style: props.style,\n    \"data-ad-client\": props.adClient,\n    \"data-ad-slot\": props.adSlot,\n    \"data-ad-layout\": props.adLayout,\n    \"data-ad-layout-key\": props.adLayoutKey,\n    \"data-ad-format\": props.adFormat,\n    \"data-full-width-responsive\": props.fullWidthResponsive\n  });\n};\n\nGoogleAdsense.defaultProps = {\n  className: '',\n  style: {\n    display: 'block'\n  },\n  adLayout: '',\n  adLayoutKey: '',\n  adFormat: 'auto',\n  fullWidthResponsive: 'false'\n};\nvar _default = GoogleAdsense;\nexports.default = _default;","import React from 'react';\r\nimport Styled, { createGlobalStyle } from 'styled-components';\r\nimport '../css/typography.css';\r\n\r\nconst BackgroundStyle = createGlobalStyle`\r\n    body {\r\n        background-color: white;\r\n        font-family: \"ELAND\", serif;\r\n    }\r\n`;\r\n\r\nconst PostTemplateWrapper = Styled.div`\r\n    font-family: \"ELAND\", serif;\r\n`;\r\n\r\ninterface PostTemplateProps {\r\n    children: React.ReactNode;\r\n}\r\n\r\n\r\nconst PostTemplate = ({ children }: PostTemplateProps) => {\r\n    return (\r\n        <>\r\n            <BackgroundStyle />\r\n            <PostTemplateWrapper>\r\n                {children}\r\n            </PostTemplateWrapper>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PostTemplate;","export default class ScrollSpy {\r\n    public targets: HTMLElement[]\r\n    public refs: HTMLElement[]\r\n    public sensitivity: number\r\n\r\n    constructor(target: HTMLElement, refs: HTMLElement[], sensitivity?: number) {\r\n        this.targets = Array.from(target.querySelectorAll(\"a\"))\r\n        this.refs = refs\r\n        this.sensitivity = sensitivity || -10\r\n\r\n        window.addEventListener(\"scroll\", () => this.onScroll())\r\n    }\r\n\r\n    onScroll() {\r\n        if (!this.isOnTopOfDoc(this.refs[0])) {\r\n            this.deactiveateTarget()\r\n        }\r\n\r\n        this.refs.forEach(ref => {\r\n            if (this.isOnTopOfDoc(ref)) {\r\n                this.deactiveateTarget()\r\n                const t = this.findTarget(ref.id)\r\n                if (t) {\r\n                    this.activate(t)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    isOnTopOfDoc(ref: HTMLElement): boolean {\r\n        return (\r\n            document.documentElement.scrollTop - ref.offsetTop >= this.sensitivity\r\n        )\r\n    }\r\n\r\n    deactiveateTarget() {\r\n        this.targets.forEach(a => this.deactivate(a))\r\n    }\r\n\r\n    findTarget(id: string): HTMLElement | undefined {\r\n        return this.targets.filter(\r\n            a =>\r\n                decodeURIComponent(a.attributes[\"href\"].value.replace(/^#/, \"\")) === id\r\n        )[0]\r\n    }\r\n\r\n    activate(el: HTMLElement) {\r\n        el.classList.add(\"active\")\r\n    }\r\n\r\n    deactivate(el: HTMLElement) {\r\n        el.classList.remove(\"active\")\r\n    }\r\n}","import React, { memo, useEffect } from \"react\"\r\nimport Styled from 'styled-components';\r\nimport media from \"../../lib/styles/media\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport ScrollSpy from \"./ScrollSpy\"\r\n\r\nconst ToCWrapper = Styled.div`\r\n    transition: 0.125s all ease-in;\r\n    width: 20%;\r\n    padding: 0.5rem;\r\n    padding-right: 1rem;\r\n    padding-left: 0;\r\n    order: 1;\r\n    top: 10rem;\r\n    margin-left: 4rem;\r\n    position: sticky;\r\n    height: 40rem;\r\n    overflow-y: auto;\r\n    word-break: break-all;\r\n\r\n    ${media.custom(1440)} {\r\n        display: none;\r\n    }\r\n    ul:first-child {\r\n        padding-left: 1rem;\r\n        border-left: 2px solid ${palette.indigo[4]};\r\n    }\r\n    ul {\r\n        list-style: none;\r\n        margin: 0;\r\n        li {\r\n            \r\n            border: none;\r\n            margin-bottom: 4px;\r\n            p {\r\n                margin: 0;\r\n            }\r\n        }\r\n    }\r\n    a {\r\n        text-decoration: none;\r\n        color: ${palette.gray[4]};\r\n        font-size: 0.9rem;\r\n        &:hover,\r\n        &:focus {\r\n            color: ${palette.indigo[4]};\r\n        }\r\n        &.active {\r\n            color: ${palette.indigo[9]};\r\n            transform: scale(1.1);\r\n        }\r\n    }\r\n    & + & {\r\n        margin-top: 4px;\r\n    }\r\n\r\n`;\r\n\r\ninterface PostToCProps {\r\n    tableOfContents: string\r\n}\r\n\r\nconst PostToC = ({ tableOfContents }: PostToCProps) => {\r\n    useEffect(() => {\r\n        const post = document.querySelector(\"#content-container\")\r\n        const headings = Array.from(\r\n            post.querySelectorAll(\"h1, h2\")\r\n        ).filter((h: any) => h.id)\r\n        const toc = document.querySelector(\"#toc-container\")\r\n\r\n        new ScrollSpy(toc as HTMLElement, headings as HTMLElement[]);\r\n    }, [])\r\n\r\n    return (\r\n        <ToCWrapper\r\n            id=\"toc-container\"\r\n            dangerouslySetInnerHTML={{ __html: tableOfContents }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default memo(PostToC);","import { Link } from 'gatsby';\r\nimport React from 'react';\r\nimport { AiFillCaretDown, AiFillCaretUp, AiOutlineLeft, AiOutlineRight } from 'react-icons/ai';\r\nimport { IoBookmarkSharp } from \"react-icons/io5\";\r\nimport Styled from 'styled-components';\r\nimport useToggle from '../../lib/hooks/useToggle';\r\nimport media from '../../lib/styles/media';\r\nimport palette from '../../lib/styles/palette';\r\n\r\nconst Wrapper = Styled.div`\r\n    position: relative;\r\n    width: 80%;\r\n    background-color: ${palette.gray[0]};\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    padding-top: 1rem;\r\n    padding-bottom: 1rem;\r\n    border-radius: 10px;\r\n    word-break: break-all;\r\n\r\n    ${media.custom(767)} {\r\n        width: 100%;\r\n    }\r\n\r\n    h2 {\r\n        margin-left: 1.5rem;\r\n        margin-right: 1.5rem;\r\n\r\n        ${media.custom(767)} {\r\n            font-size: 1.2rem;\r\n        }\r\n    }\r\n\r\n    a {\r\n        text-decoration: none;\r\n        color: ${palette.gray[8]};\r\n\r\n        &:hover {\r\n            text-decoration: underline;\r\n        }\r\n    }\r\n\r\n    ol {\r\n        padding-left: 3rem;\r\n        padding-right: 1.5rem;\r\n\r\n        ${media.custom(767)} {\r\n            font-size: 0.9rem;\r\n        }\r\n\r\n        .now-post {\r\n            color: ${palette.indigo[5]};\r\n            font-weight: bold;\r\n        }\r\n\r\n        li {\r\n            margin: 0.5rem;\r\n            color: ${palette.gray[6]};\r\n\r\n\r\n        }\r\n    }\r\n\r\n    .bookmark-img {\r\n        position : absolute;\r\n        right: 1.5rem;\r\n        top: -2px;\r\n        width: 2.8rem;\r\n        height: 2.8rem;\r\n        color: ${palette.indigo[5]};\r\n\r\n        ${media.custom(767)} {\r\n            right: 1rem;\r\n            width: 2.2rem;\r\n            height: 2.2rem;\r\n        }\r\n    }\r\n\r\n    .footer {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        margin-top: 3rem;\r\n        margin-right: 1.5rem;\r\n        margin-left: 1.5rem;\r\n\r\n        .visible-btn {\r\n            display: flex;\r\n            cursor: pointer;\r\n            align-items: center;\r\n            color: ${palette.gray[7]};\r\n            span {\r\n                margin-left: 0.3rem;\r\n                font-size: 0.9rem;\r\n            }\r\n        }\r\n\r\n    }\r\n`;\r\n\r\nexport type PartialSeriesType = {\r\n    slug: string;\r\n    title: string;\r\n    lang: string;\r\n}\r\n\r\ninterface PostSeriesListProps {\r\n    series: string;\r\n    seriesList: Array<PartialSeriesType>;\r\n    nowPostTitle: string;\r\n    lang: string;\r\n}\r\n\r\nconst PostSeriesList = ({ series, seriesList, nowPostTitle, lang }: PostSeriesListProps) => {\r\n    const [seriesListVisible, onToggle] = useToggle(true);\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Link to={`/series/${series.replace(/ /gi, '-')}`}><h2>{series}</h2></Link>\r\n            <IoBookmarkSharp className=\"bookmark-img\" />\r\n            {seriesListVisible\r\n                ?\r\n                <ol>\r\n                    {seriesList.map((series, index) => {\r\n                        return nowPostTitle === series.title ? <li key={index}><span className=\"now-post\" >{series.title}</span></li> : <li key={index}><Link to={`${series.slug}`} >{series.title}</Link></li>\r\n                    })}\r\n                </ol>\r\n                :\r\n                <div></div>}\r\n            <div className=\"footer\">\r\n                {seriesListVisible\r\n                    ?\r\n                    <div className=\"visible-btn\" onClick={onToggle}>\r\n                        <AiFillCaretUp /><span>{lang === 'ko' ? '숨기기' : 'Hide'}</span>\r\n                    </div>\r\n                    :\r\n                    <div className=\"visible-btn\" onClick={onToggle}>\r\n                        <AiFillCaretDown /><span>{lang === 'ko' ? '목록 보기' : 'Show list'}</span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default PostSeriesList;","import React from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport { MdArrowBack, MdArrowForward } from 'react-icons/md';\r\nimport { ellipsis } from '../../lib/styles/utils';\r\nimport media from '../../lib/styles/media';\r\nimport { Link } from 'gatsby';\r\nimport { PartialSeriesType } from './PostSeriesList';\r\n\r\nconst bounceLeft = keyframes`\r\n    0% {\r\n        transform: translateX(0px)\r\n    }\r\n    50% {\r\n        transform: translateX(-8px)\r\n    }\r\n    100% {\r\n        transform: translateX(0px)\r\n    }\r\n`;\r\n\r\nconst bounceRight = keyframes`\r\n    0% {\r\n        transform: translateX(0px)\r\n    }\r\n    50% {\r\n        transform: translateX(8px)\r\n    }\r\n    100% {\r\n        transform: translateX(0px)\r\n    }\r\n`;\r\n\r\nconst Circle = styled.div`\r\n    width: 32px;\r\n    height: 32px;\r\n    border-radius: 16px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border: 1px solid ${palette.indigo[5]};\r\n    font-size: 1.5rem;\r\n    color: ${palette.indigo[5]};\r\n    margin-left: 1rem;\r\n    margin-right: 1rem;\r\n`;\r\n\r\nconst Wrapper = styled(Link) <{ right: boolean }>`\r\n    cursor: pointer;\r\n    background: ${palette.gray[0]};\r\n    box-shadow: 0 0 4px 0 rgba(0, 0, 0, 0.06);\r\n    width: 100%;\r\n    height: 4rem;\r\n    display: flex;\r\n    align-items: center;\r\n    text-decoration: none;\r\n    ${props =>\r\n        props.right &&\r\n        css`\r\n        flex-direction: row-reverse;\r\n        `}\r\n    &:hover {\r\n        ${Circle} {\r\n        animation-duration: 0.35s;\r\n        animation-name: ${props => (props.right ? bounceRight : bounceLeft)};\r\n        animation-fill-mode: forwards;\r\n        animation-timing-function: ease-out;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Text = styled.div<{ right: boolean }>`\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: ${props => (props.right ? 'flex-end' : 'flex-start')};\r\n    line-height: 1;\r\n    min-width: 0;\r\n    \r\n    ${props =>\r\n        props.right ?\r\n            css`\r\n                margin-left: 1rem;\r\n            ` :\r\n            css`\r\n                margin-right: 1rem;\r\n            `\r\n    };\r\n    .description {\r\n        font-size: 0.75rem;\r\n        font-weight: bold;\r\n        color: ${palette.gray[7]};\r\n    }\r\n    h3 {\r\n        ${props =>\r\n        props.right ?\r\n            css`\r\n                margin-left: 1rem;\r\n                text-align: right;\r\n            ` :\r\n            css`\r\n                margin-right: 1rem;\r\n            `\r\n    };\r\n        width: 100%;\r\n        font-size: 1.125rem;\r\n        color: ${palette.gray[7]};\r\n        line-height: 1.15;\r\n        margin: 0;\r\n        margin-top: 0.5rem;\r\n        ${media.small} {\r\n            font-size: 1rem;\r\n        }\r\n        ${ellipsis};\r\n    }\r\n`;\r\n\r\ninterface PrevNextPostItemProps {\r\n    right: boolean;\r\n    seriesPost: PartialSeriesType | null;\r\n    lang: string;\r\n}\r\n\r\nconst PrevNextPostItem = ({\r\n    right,\r\n    seriesPost,\r\n    lang\r\n}: PrevNextPostItemProps) => {\r\n    if (!seriesPost) {\r\n        return null;\r\n    }\r\n    const to = `${seriesPost.slug}`;\r\n\r\n    return (\r\n        <Wrapper right={right} to={to}>\r\n            <Circle>\r\n                {right ? <MdArrowForward /> : <MdArrowBack />}\r\n            </Circle>\r\n            <Text right={right}>\r\n                <div className=\"description\">\r\n                    {right ? (lang === 'ko' ? '다음' : 'Next') : (lang === 'ko' ? '이전' : 'Previous')} {lang === 'ko' ? '포스트' : 'Post'}\r\n                </div>\r\n                <h3>{seriesPost.title}</h3>\r\n            </Text>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default PrevNextPostItem;\r\n","import React, { useCallback } from 'react';\r\nimport Styled from 'styled-components';\r\nimport { mediaQuery } from '../../lib/styles/media';\r\nimport { PartialSeriesType } from './PostSeriesList';\r\nimport PrevNextPostItem from './PrevNextPostItem';\r\n\r\nconst Wrapper = Styled.div`\r\n    width: 100%;\r\n    margin-top: 5rem;\r\n    display: flex;\r\n    align-items: space-between;\r\n    justify-content: space-between;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    ${mediaQuery(767)} {\r\n        flex-direction: column-reverse;\r\n    }\r\n`;\r\n\r\nconst ItemWrapper = Styled.div`\r\n    width: 300px;\r\n\r\n    ${mediaQuery(767)} {\r\n        width: 100%;\r\n        & + & {\r\n            margin-bottom: 1.5rem;\r\n        }\r\n    }\r\n`;\r\n\r\n\r\ninterface PrevNextPostProps {\r\n    nowPostTitle: string;\r\n    seriesList: Array<PartialSeriesType>;\r\n    lang: string;\r\n}\r\n\r\nconst PrevNextPost = ({ nowPostTitle, seriesList, lang }: PrevNextPostProps) => {\r\n    const len = seriesList.length;\r\n\r\n    const nowPageIndex = useCallback(() => {\r\n        let len = seriesList.length;\r\n        for (let i = 0; i < len; i++) {\r\n            if (seriesList[i].title === nowPostTitle) return i;\r\n        }\r\n        return 0;\r\n    }, [nowPostTitle, seriesList, len]);\r\n    const index = nowPageIndex();\r\n\r\n    return (\r\n        <Wrapper>\r\n            <ItemWrapper>\r\n                <PrevNextPostItem seriesPost={index > 0 ? seriesList[index - 1] : null} right={false} lang={lang} />\r\n            </ItemWrapper>\r\n            <ItemWrapper>\r\n                <PrevNextPostItem seriesPost={index < len - 1 ? seriesList[index + 1] : null} right={true} lang={lang} />\r\n            </ItemWrapper>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default PrevNextPost;","import React, { memo } from 'react';\r\nimport Styled from 'styled-components';\r\nimport media from '../../lib/styles/media';\r\nimport palette from '../../lib/styles/palette';\r\n\r\nconst TagItemWrapper = Styled.div`\r\n    padding: 0.5rem 1rem;\r\n    background-color: ${palette.gray[1]};\r\n    color: ${palette.indigo[8]};\r\n    border-radius: 0.5rem;\r\n    margin-right: 1rem;\r\n    margin-bottom: 0.5rem;\r\n    // cursor: pointer;\r\n    &:hover {\r\n        // background-color: ${palette.gray[2]};\r\n    }\r\n    \r\n    ${media.custom(1056)} {\r\n        font-size: 0.8rem;\r\n    }\r\n`;\r\n\r\ninterface TagItemProps {\r\n    tag: string;\r\n    onClick: (tag: string) => void;\r\n}\r\n\r\nconst TagItem = memo(({ tag, onClick }: TagItemProps) => <TagItemWrapper onClick={() => onClick(tag)}>{tag}</TagItemWrapper>);\r\n\r\nconst TagListWrapper = Styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin-bottom: 2rem;\r\n`;\r\n\r\ninterface TagListWrapper {\r\n    tags: Array<string>;\r\n    onClick: (tag: string) => void;\r\n}\r\n\r\nconst TagList = ({ tags, onClick }: TagListWrapper) => {\r\n    return (\r\n        <TagListWrapper>\r\n            {tags.map((tag, index) => {\r\n                return <TagItem tag={tag} key={index} onClick={onClick} />\r\n            })}\r\n        </TagListWrapper>\r\n    );\r\n};\r\n\r\nexport default memo(TagList);","import { Link } from \"gatsby\"\r\nimport React, { useCallback } from \"react\"\r\nimport GoogleAdsense from \"react-adsense-google\"\r\nimport Styled from \"styled-components\"\r\nimport { categoryMap } from \"../../lib/styles/category\"\r\nimport media from \"../../lib/styles/media\"\r\nimport palette from \"../../lib/styles/palette\"\r\nimport { formatDate } from \"../../lib/styles/utils\"\r\nimport PostSeriesList, { PartialSeriesType } from \"./PostSeriesList\"\r\nimport PrevNextPost from \"./PrevNextPost\"\r\nimport TagList from \"./TagList\"\r\n\r\ntype PostType = {\r\n    author: string\r\n    category: string\r\n    title: string\r\n    tags: Array<string>\r\n    released_at: string\r\n    updated_at: string\r\n    html: string\r\n}\r\nconst PostViewerWrapper = Styled.div`\r\n    width: 60%;\r\n    margin-left: 0;\r\n    max-width: 972px;\r\n\r\n    ${media.custom(1440)} {\r\n        width: 80%;\r\n    }\r\n    ${media.custom(1056)} {\r\n        width: 100%;\r\n    }\r\n\r\n    .category {\r\n        text-decoration: none;\r\n        font-size: 1.5rem;\r\n        color: gray;\r\n        margin-bottom: 0;\r\n        &:hover {\r\n            text-decoration: underline;\r\n        }\r\n\r\n        \r\n        ${media.custom(1056)} {\r\n            font-size: 1rem;\r\n        }\r\n    }\r\n\r\n    .title {\r\n        margin-top: 0.5rem;\r\n        font-size: 3rem;\r\n        ${media.custom(1056)} {\r\n            font-size: 2.2rem;\r\n        }\r\n    }\r\n\r\n    .date {\r\n        line-height: 0.8;\r\n        color: gray;\r\n        ${media.custom(1056)} {\r\n            font-size: 0.8rem;\r\n        }\r\n    }\r\n`\r\n\r\nconst PostContentWrapper = Styled.div`\r\n    width: 100%;\r\n    margin: 0;\r\n    word-break: break-all;\r\n\r\n    a {\r\n        color: ${palette.indigo[6]};\r\n        text-decoration: none;\r\n        &:hover {\r\n            text-decoration: underline;\r\n        }\r\n    }\r\n\r\n    h1 {\r\n        margin-top: 3rem;\r\n        ${media.custom(767)} {\r\n            margin-top: 2rem;\r\n            font-size: 1.8rem;\r\n        }\r\n    }\r\n\r\n    h2 {\r\n        margin-top: 3rem;\r\n        ${media.custom(767)} {\r\n            margin-top: 2rem;\r\n        }\r\n    }\r\n\r\n    h3 {\r\n        margin-top: 2rem;\r\n        ${media.custom(767)} {\r\n            margin-top: 1rem;\r\n        }\r\n    }\r\n\r\n    p {\r\n        font-size: 1.1rem;\r\n        line-height: 1.8;\r\n        ${media.custom(767)} {\r\n            font-size: 0.9rem;\r\n            line-height: 1.7;\r\n        }\r\n    }\r\n\r\n    li {\r\n        font-size: 1.1rem;\r\n        line-height: 2;\r\n\r\n        ${media.custom(767)} {\r\n            font-size: 0.9rem;\r\n            line-height: 1.7;\r\n        }\r\n\r\n        h4, p {\r\n            margin: 0;\r\n            font-size: 1.1rem;\r\n            ${media.custom(767)} {\r\n                font-size: 0.9rem;\r\n                line-height: 1.7;\r\n            }\r\n        }\r\n    }\r\n\r\n    pre, code {\r\n        font-size: 1rem;\r\n        margin-bottom: 2rem;\r\n        ${media.custom(767)} {\r\n            font-size: 0.9rem;\r\n            margin-bottom: 1.5rem;\r\n        }\r\n    }\r\n\r\n    pre {\r\n        border-radius: 3px;\r\n    }\r\n\r\n    img {\r\n        width: 100%;\r\n    }\r\n\r\n    table {\r\n        white-space: normal;\r\n        max-width: 100%;\r\n        border-collapse: collapse;\r\n        text-align: left;\r\n        line-height: 1.5;\r\n        border-top: 1px solid #ccc;\r\n        border-bottom: 1px solid #ccc;\r\n        margin: 20px 0;\r\n    }\r\n    table thead th {\r\n        min-width: 60px;\r\n        max-width: 150px;\r\n        padding: 10px;\r\n        font-weight: bold;\r\n        vertical-align: top;\r\n        color: #fff;\r\n        background: ${palette.indigo[6]};\r\n        margin: 20px 10px;\r\n    }\r\n    table tbody th {\r\n        max-width: 150px;\r\n        padding: 10px;\r\n    }\r\n    table td {\r\n        max-width: 350px;\r\n        padding: 10px;\r\n        vertical-align: top;\r\n    }\r\n    table tr:nth-child(even) {\r\n        background: ${palette.indigo[0]};\r\n    }\r\n    th {\r\n        font-size: 0.9rem;\r\n        ${media.custom(767)} {\r\n            font-size: 0.8rem;\r\n        }\r\n    }\r\n    td {\r\n        font-size: 0.9rem;\r\n        ${media.custom(767)} {\r\n            font-size: 0.8rem;\r\n        }\r\n    }\r\n\r\n    hr {\r\n        margin-top: 3rem;\r\n        margin-bottom: 3rem;\r\n        ${media.custom(767)} {\r\n            margin-top: 2rem;\r\n            margin-bottom: 2rem;\r\n        }\r\n    }\r\n\r\n    blockquote {\r\n        background-color: ${palette.gray[0]};\r\n        width: 100%;\r\n        margin: 0;\r\n        padding-top: 0.5rem;\r\n        padding-bottom: 0.5rem;\r\n        border-left: 4px solid ${palette.indigo[5]};\r\n\r\n        p {\r\n            margin-left: 2rem;\r\n            margin-right: 2rem;\r\n        }\r\n    }\r\n`\r\n\r\ninterface PostViewerProps {\r\n    post: PostType\r\n    series: string\r\n    seriesList: Array<PartialSeriesType>\r\n    lang: string\r\n}\r\n\r\nconst PostViewer = ({ post, series, seriesList, lang }: PostViewerProps) => {\r\n    const { html, title, released_at, updated_at, category, tags } = post\r\n\r\n    const onClickTag = useCallback((tag: string) => {}, [tags])\r\n\r\n    return (\r\n        <PostViewerWrapper>\r\n            {category && (\r\n                <Link\r\n                    className=\"category\"\r\n                    to={\r\n                        lang === \"ko\"\r\n                            ? `/?category=${category}`\r\n                            : `/en?category=${category}`\r\n                    }\r\n                >\r\n                    {categoryMap[category] ? (\r\n                        <img src={categoryMap[category].src} />\r\n                    ) : (\r\n                        `[${category}]`\r\n                    )}\r\n                </Link>\r\n            )}\r\n            <h1 className=\"title\">{title}</h1>\r\n            <p className=\"date\">\r\n                {lang === \"ko\" ? \"게시: \" : \"\"}\r\n                {formatDate(released_at, lang)}\r\n            </p>\r\n            {updated_at && (\r\n                <p className=\"date\">\r\n                    {lang === \"ko\" ? \"수정: \" : \"Last edited at \"}\r\n                    {formatDate(updated_at, lang)}\r\n                </p>\r\n            )}\r\n            {tags && <TagList tags={tags} onClick={onClickTag} />}\r\n            <GoogleAdsense\r\n                style={{ display: \"block\" }}\r\n                adClient=\"ca-pub-3926462216067158\"\r\n                adSlot=\"6763105273\"\r\n                adFormat=\"auto\"\r\n                fullWidthResponsive=\"true\"\r\n            />\r\n            {series !== \"none\" && (\r\n                <PostSeriesList\r\n                    series={series}\r\n                    seriesList={seriesList}\r\n                    nowPostTitle={title}\r\n                    lang={lang}\r\n                />\r\n            )}\r\n            <PostContentWrapper\r\n                id=\"content-container\"\r\n                dangerouslySetInnerHTML={{ __html: html }}\r\n            />\r\n            <GoogleAdsense\r\n                style={{ display: \"block\" }}\r\n                adClient=\"ca-pub-3926462216067158\"\r\n                adSlot=\"6407882052\"\r\n                adFormat=\"auto\"\r\n                fullWidthResponsive=\"true\"\r\n            />\r\n            <PrevNextPost\r\n                nowPostTitle={title}\r\n                seriesList={seriesList}\r\n                lang={lang}\r\n            />\r\n        </PostViewerWrapper>\r\n    )\r\n}\r\n\r\nexport default PostViewer\r\n","import React, { createRef, useLayoutEffect } from 'react';\r\nimport Styled from 'styled-components';\r\nimport { mediaQuery } from '../../lib/styles/media';\r\n\r\nconst src = 'https://utteranc.es/client.js';\r\n\r\nconst Wrapper = Styled.div`\r\n    width: 60%;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n\r\n    \r\n    ${mediaQuery(1056)} {\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\ninterface IUtterancesProps {\r\n}\r\n\r\nconst Utterances = React.memo(({ }: IUtterancesProps) => {\r\n    const containerRef = createRef<HTMLDivElement>();\r\n\r\n    useLayoutEffect(() => {\r\n        const utterances = document.createElement('script');\r\n\r\n        const attributes = {\r\n            src,\r\n            repo: 'millo-L/millo-L.github.io',\r\n            'issue-term': 'pathname',\r\n            label: 'comment',\r\n            theme: 'github-light',\r\n            crossOrigin: 'anonymous',\r\n            async: 'true',\r\n        };\r\n\r\n        Object.entries(attributes).forEach(([key, value]) => {\r\n            utterances.setAttribute(key, value);\r\n        });\r\n\r\n        containerRef.current.appendChild(utterances);\r\n    }, []);\r\n\r\n    return <Wrapper ref={containerRef} />;\r\n});\r\n\r\nUtterances.displayName = 'Utterances';\r\n\r\nexport default Utterances;","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import { graphql } from \"gatsby\"\r\nimport React, { useCallback } from \"react\"\r\nimport Footer from \"../base/Footer\"\r\nimport Header from \"../base/Header\"\r\nimport SimpleProfile from \"../common/SimpleProfile\"\r\nimport MainPageRowTemplate from \"../main/MainPageRowTemplate\"\r\nimport MainResponsive from \"../main/MainResponsive\"\r\nimport PostTemplate from \"../post/PostTemplate\"\r\nimport PostToC from \"../post/PostToC\"\r\nimport PostViewer from \"../post/PostViewer\"\r\nimport SEO from \"../SEO\"\r\nimport Utterances from \"./Utterances\"\r\nimport \"../css/typography.css\"\r\nimport { createGlobalStyle } from \"styled-components\"\r\nimport { PartialSeriesType } from \"./PostSeriesList\"\r\nimport { filterByLanguage } from \"../../lib/list/reshape\"\r\n\r\ncreateGlobalStyle`\r\n    body {\r\n        font-family: \"ELAND\", serif;\r\n    }\r\n`\r\n\r\ninterface PostPageProps {\r\n    data: any\r\n}\r\n\r\nconst PostPage = ({ data }: PostPageProps) => {\r\n    const { markdownRemark, site, allMarkdownRemark } = data\r\n    if (!(markdownRemark && site && allMarkdownRemark)) return <div></div>\r\n\r\n    const reshapeSeries = useCallback(() => {\r\n        const { edges } = allMarkdownRemark\r\n        let seriesList: Array<PartialSeriesType> = []\r\n\r\n        edges.map(edge => {\r\n            const { node } = edge\r\n            let series: PartialSeriesType = {\r\n                title: node.frontmatter.title,\r\n                lang: node.frontmatter.lang,\r\n                slug: node.fields.slug,\r\n            }\r\n\r\n            seriesList.push(series)\r\n        })\r\n\r\n        return seriesList\r\n    }, [allMarkdownRemark])\r\n\r\n    return (\r\n        <PostTemplate>\r\n            <SEO\r\n                title={markdownRemark.frontmatter.title}\r\n                description={markdownRemark.frontmatter.description}\r\n                date={markdownRemark.frontmatter.released_at}\r\n                url={site.siteMetadata.siteUrl + markdownRemark.fields.slug}\r\n                image={\r\n                    markdownRemark.frontmatter.image.childImageSharp.fluid.src\r\n                }\r\n                lang={markdownRemark.frontmatter.lang}\r\n            />\r\n            <Header\r\n                lang={markdownRemark.frontmatter.lang}\r\n                ko_to={\r\n                    markdownRemark.frontmatter.lang === \"ko\"\r\n                        ? \"#\"\r\n                        : markdownRemark.frontmatter.translation\r\n                }\r\n                en_to={\r\n                    markdownRemark.frontmatter.lang === \"en\"\r\n                        ? \"#\"\r\n                        : markdownRemark.frontmatter.translation\r\n                }\r\n            />\r\n            <MainResponsive style={{ marginTop: \"2rem\" }}>\r\n                <MainPageRowTemplate style={{ marginBottom: \"2rem\" }}>\r\n                    <SimpleProfile\r\n                        style={{ marginTop: \"0.5rem\" }}\r\n                        type=\"body\"\r\n                        categoryVisible={true}\r\n                        lang={markdownRemark.frontmatter.lang}\r\n                    />\r\n                    <PostViewer\r\n                        post={{\r\n                            ...markdownRemark.frontmatter,\r\n                            html: markdownRemark.html,\r\n                        }}\r\n                        series={markdownRemark.frontmatter.series}\r\n                        seriesList={filterByLanguage(\r\n                            reshapeSeries(),\r\n                            markdownRemark.frontmatter.lang\r\n                        )}\r\n                        lang={markdownRemark.frontmatter.lang}\r\n                    />\r\n                    <PostToC tableOfContents={markdownRemark.tableOfContents} />\r\n                </MainPageRowTemplate>\r\n                {/*<PostComment\r\n          title={markdownRemark.frontmatter.title}\r\n          id={markdownRemark.id}\r\n          path={markdownRemark.frontmatter.path}\r\n        />*/}\r\n                <Utterances />\r\n                <Footer />\r\n            </MainResponsive>\r\n        </PostTemplate>\r\n    )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n    query($slug: String!, $series: String!) {\r\n        markdownRemark(fields: { slug: { eq: $slug } }) {\r\n            html\r\n            id\r\n            tableOfContents(absolute: false, maxDepth: 2, heading: null)\r\n            frontmatter {\r\n                author\r\n                description\r\n                category\r\n                released_at(formatString: \"YYYY-MM-DD\")\r\n                updated_at(formatString: \"YYYY-MM-DD\")\r\n                tags\r\n                title\r\n                lang\r\n                series\r\n                translation\r\n                image {\r\n                    childImageSharp {\r\n                        fluid {\r\n                            ...GatsbyImageSharpFluid\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            fields {\r\n                slug\r\n            }\r\n        }\r\n        site {\r\n            siteMetadata {\r\n                siteUrl\r\n            }\r\n        }\r\n        allMarkdownRemark(\r\n            filter: { frontmatter: { series: { eq: $series } } }\r\n            sort: { order: ASC, fields: frontmatter___released_at }\r\n        ) {\r\n            edges {\r\n                node {\r\n                    frontmatter {\r\n                        title\r\n                        lang\r\n                    }\r\n                    fields {\r\n                        slug\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport default PostPage\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _GoogleAdsense = _interopRequireDefault(require(\"./GoogleAdsense\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar _default = _GoogleAdsense.default;\nexports.default = _default;"],"sourceRoot":""}