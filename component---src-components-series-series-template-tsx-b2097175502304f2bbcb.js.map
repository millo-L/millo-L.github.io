{"version":3,"file":"component---src-components-series-series-template-tsx-b2097175502304f2bbcb.js","mappings":"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","sources":["webpack://millo-s-tech-blog/./src/components/SEO.tsx","webpack://millo-s-tech-blog/./src/components/base/Footer.tsx","webpack://millo-s-tech-blog/./src/components/series/SeriesPost.tsx","webpack://millo-s-tech-blog/./src/components/series/SeriesPostList.tsx","webpack://millo-s-tech-blog/./src/components/series/SeriesTemplate.tsx","webpack://millo-s-tech-blog/./src/libs/list/reshape.ts"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\ninterface Props {\n\ttitle?: string;\n\tdescription?: string;\n\tpathname?: string;\n\tcreated_at?: string;\n\tupdated_at?: string;\n\timage?: string;\n\tchildren?: any;\n}\n\ntype QueryType = {\n\tsite: {\n\t\tsiteMetadata: {\n\t\t\tauthor: string;\n\t\t\tdescription: string;\n\t\t\tsiteUrl: string;\n\t\t\ttitle: string;\n\t\t};\n\t};\n};\n\nexport default function SEO({\n\ttitle,\n\tdescription,\n\tpathname,\n\tcreated_at,\n\tupdated_at,\n\timage,\n\tchildren,\n}: Props) {\n\tconst { site } = useStaticQuery<QueryType>(graphql`\n\t\t{\n\t\t\tsite {\n\t\t\t\tsiteMetadata {\n\t\t\t\t\tauthor\n\t\t\t\t\tdescription\n\t\t\t\t\tsiteUrl\n\t\t\t\t\ttitle\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`);\n\n\tconst seo = {\n\t\tauthor: site.siteMetadata.author,\n\t\ttitle: title ? `${title} | ${site.siteMetadata.title}` : site.siteMetadata.title,\n\t\tdescription: description || site.siteMetadata.description,\n\t\timage: `${site.siteMetadata.siteUrl}${image || \"/icon.png\"}`,\n\t\turl: `${site.siteMetadata.siteUrl}${pathname || \"\"}`,\n\t};\n\n\tuseEffect(() => {\n\t\tconsole.log(`siteUrl: ${site.siteMetadata.siteUrl}`);\n\t}, [site.siteMetadata.siteUrl]);\n\n\treturn (\n\t\t<>\n\t\t\t<title>{seo.title}</title>\n\t\t\t<meta name=\"description\" content={seo.description} />\n\t\t\t<meta name=\"twitter:url\" content={seo.url} />\n\t\t\t<meta name=\"twitter:title\" content={seo.title} />\n\t\t\t<meta name=\"twitter:url\" content={seo.url} />\n\t\t\t<meta name=\"twitter:description\" content={seo.description} />\n\t\t\t<meta name=\"twitter:card\" content=\"summary\" />\n\t\t\t<meta property=\"twitter:image\" content={seo.image} />\n\t\t\t<meta property=\"og:type\" content=\"website\" />\n\t\t\t<meta property=\"og:title\" content={seo.title} />\n\t\t\t<meta property=\"og:description\" content={seo.description} />\n\t\t\t<meta property=\"og:site_name\" content={seo.title} />\n\t\t\t<meta property=\"og:image\" content={seo.image} />\n\t\t\t<meta name=\"robots\" content=\"index,follow\" />\n\t\t\t<link rel=\"apple-touch-icon\" href=\"/favicon.ico\" />\n\t\t\t{created_at !== undefined && (\n\t\t\t\t<script type=\"application/ld+json\">\n\t\t\t\t\t{JSON.stringify({\n\t\t\t\t\t\t\"@context\": \"http://schema.org\",\n\t\t\t\t\t\t\"@type\": \"BlogPosting\",\n\t\t\t\t\t\tauthor: {\n\t\t\t\t\t\t\t\"@type\": \"Person\",\n\t\t\t\t\t\t\tname: seo.author,\n\t\t\t\t\t\t\tlogo: null,\n\t\t\t\t\t\t},\n\t\t\t\t\t\turl: seo.url,\n\t\t\t\t\t\theadline: seo.title,\n\t\t\t\t\t\tdescription: seo.description,\n\t\t\t\t\t\tdatePublished: created_at,\n\t\t\t\t\t\tdateModified: updated_at || created_at,\n\t\t\t\t\t\timage: seo.image,\n\t\t\t\t\t})}\n\t\t\t\t</script>\n\t\t\t)}\n\t\t\t<meta\n\t\t\t\tname=\"google-site-verification\"\n\t\t\t\tcontent=\"3RV-iVIsB1icAg20Pkdf-2uSR7XMnOYS2FxfhQ3YCD8\"\n\t\t\t/>\n\t\t\t<meta\n\t\t\t\tname=\"naver-site-verification\"\n\t\t\t\tcontent=\"3be60e4cdc653a5f4c68e0da86c7f8414891c370\"\n\t\t\t/>\n\t\t\t<script\n\t\t\t\tasync\n\t\t\t\tsrc=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3926462216067158\"\n\t\t\t\tcrossOrigin=\"anonymous\"\n\t\t\t/>\n\t\t\t{children}\n\t\t</>\n\t);\n}\n","import React from \"react\";\nimport Styled from \"styled-components\";\nimport palette from \"../../libs/styles/palette\";\nimport ProfileIcons from \"../common/ProfileIcons\";\n\nconst FooterWrapper = Styled.div`\n    display: flex;\n    border-top: 1px solid ${palette.gray[5]};\n    margin-top: 5rem;\n    width: 100%;\n    height: 8rem;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n\n    span {\n        font-size: 1.5rem;\n    }\n\n    .icon-wrapper {\n        width: 9rem;\n        display: flex;\n        justify-content: space-between;\n        flex-direction: row;\n        margin-top: 1rem;\n        svg {\n            width: 30%;\n            height: 1.5rem;\n            cursor: pointer;\n        }\n    }\n`;\n\nconst TEXT = \"millo's tech blog\";\n\nexport default function Footer() {\n\treturn (\n\t\t<FooterWrapper>\n\t\t\t<span>{TEXT}</span>\n\t\t\t<ProfileIcons className=\"icon-wrapper\" />\n\t\t</FooterWrapper>\n\t);\n}\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport styled from \"styled-components\";\nimport media, { mediaQuery } from \"../../libs/styles/media\";\nimport palette from \"../../libs/styles/palette\";\nimport { ellipsis, formatDate } from \"../../libs/styles/utils\";\nimport { PostType } from \"../../types/Common\";\n\nconst Container = styled(Link)`\n\twidth: 100%;\n\tbackground: white;\n\tborder-radius: 4px;\n\tbox-shadow: 0 4px 16px 0 rgba(0, 0, 0, 0.04);\n\ttransition:\n\t\t0.25s box-shadow ease-in,\n\t\t0.25s transform ease-in;\n\tmargin-top: 2rem;\n\toverflow: hidden;\n\tdisplay: flex;\n\tflex-direction: column;\n\t&:hover {\n\t\ttransform: translateY(-8px);\n\t\tbox-shadow: 0 12px 20px 0 rgba(0, 0, 0, 0.08);\n\t\t${mediaQuery(1024)} {\n\t\t\ttransform: none;\n\t\t}\n\t}\n\n\th2 {\n\t\tmargin: 1rem;\n\t\t${media.custom(1056)} {\n\t\t\tfont-size: 1.3rem;\n\t\t}\n\t}\n\n\timg {\n\t\tborder-top: 1px solid ${palette.gray[2]};\n\t\twidth: 100%;\n\t}\n`;\n\nconst Content = styled.div`\n\tpadding: 1rem;\n\tdisplay: flex;\n\tflex: 1;\n\tflex-direction: column;\n\th4 {\n\t\tfont-size: 1rem;\n\t\tmargin: 0;\n\t\tmargin-bottom: 0.25rem;\n\t\tline-height: 1.5;\n\t\tword-break: break-word;\n\t\t${ellipsis}\n\t\tcolor: ${palette.gray[9]};\n\t\t${mediaQuery(767)} {\n\t\t\twhite-space: initial;\n\t\t}\n\t}\n\t.description-wrapper {\n\t\tflex: 1;\n\t}\n\tp {\n\t\tmargin: 0;\n\t\tword-break: break-word;\n\t\toverflow-wrap: break-word;\n\t\tfont-size: 0.875rem;\n\t\tline-height: 1.5;\n\t\tcolor: ${palette.gray[7]};\n\t\tmargin-bottom: 1.5rem;\n\t}\n\t.sub-info {\n\t\tfont-size: 0.75rem;\n\t\tline-height: 1.5;\n\t\tcolor: ${palette.gray[6]};\n\t}\n`;\n\ninterface Props {\n\tpost: PostType;\n\tindex: number;\n}\n\nexport default function SeriesPost({ post, index }: Props) {\n\treturn (\n\t\t<Container to={post.path}>\n\t\t\t<h2>\n\t\t\t\t{index + 1}. {post.title}\n\t\t\t</h2>\n\t\t\t{post.image && (\n\t\t\t\t<GatsbyImage className=\"thumbnail\" image={post.image} alt={post.title} />\n\t\t\t)}\n\t\t\t<Content>\n\t\t\t\t<div className=\"description-wrapper\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{post.description.replace(/&#x3A;/g, \":\")}\n\t\t\t\t\t\t{post.description.length === 150 && \"...\"}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"sub-info\">\n\t\t\t\t\t<span>{formatDate(post.released_at, post.lang)}</span>\n\t\t\t\t\t{post.updated_at && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{post.lang === \"ko\" ? \"수정: \" : \"Last edited at \"}\n\t\t\t\t\t\t\t\t{formatDate(post.updated_at, post.lang)}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</Content>\n\t\t</Container>\n\t);\n}\n","import React from \"react\";\nimport Styled from \"styled-components\";\nimport media, { mediaQuery } from \"../../libs/styles/media\";\nimport palette from \"../../libs/styles/palette\";\nimport { PostType } from \"../../types/Common\";\nimport SeriesPost from \"./SeriesPost\";\n\nconst Wrapper = Styled.div`\n    display: flex;\n    margin: -1rem;\n    width: 40%;\n    flex-wrap: wrap;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 3rem;\n    ${mediaQuery(1440)} {\n        width: 50%;\n    }\n    ${mediaQuery(1056)} {\n        width: 100%;\n    }\n    ${mediaQuery(767)} {\n        margin: 0;\n    }\n\n    .series-header {\n        width: 100%;\n        border-bottom: 1px solid ${palette.gray[3]};\n        h1 {\n            ${media.custom(1056)} {\n                font-size: 1.4rem;\n            }\n        }\n    }\n`;\ninterface Props {\n\tposts: PostType[];\n\tseries: string;\n}\n\nexport default function SeriesPostList({ posts, series }: Props) {\n\treturn (\n\t\t<Wrapper>\n\t\t\t<div className=\"series-header\">\n\t\t\t\t<h1>{series}</h1>\n\t\t\t</div>\n\t\t\t{posts.map((post, index) => (\n\t\t\t\t<SeriesPost post={post} index={index} key={post.title} />\n\t\t\t))}\n\t\t</Wrapper>\n\t);\n}\n","import React, { useMemo } from \"react\";\nimport { HeadProps, PageProps, graphql } from \"gatsby\";\nimport { IGatsbyImageData } from \"gatsby-plugin-image\";\nimport { reshapePost } from \"../../libs/list/reshape\";\nimport { LanguageType } from \"../../types/Common\";\nimport SEO from \"../SEO\";\nimport Footer from \"../base/Footer\";\nimport SeriesPostList from \"./SeriesPostList\";\n\ntype QueryType = {\n\tallMarkdownRemark: {\n\t\tnodes: {\n\t\t\tfrontmatter: {\n\t\t\t\ttitle: string;\n\t\t\t\treleased_at: string;\n\t\t\t\tupdated_at?: string;\n\t\t\t\tdescription: string;\n\t\t\t\timage: {\n\t\t\t\t\tchildImageSharp: {\n\t\t\t\t\t\tgatsbyImageData: IGatsbyImageData;\n\t\t\t\t\t\tfixed: {\n\t\t\t\t\t\t\tsrc: string;\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t\tlang: LanguageType;\n\t\t\t\ttranslation_series: string;\n\t\t\t\tseries: string;\n\t\t\t\tcategory: string;\n\t\t\t};\n\t\t\tfields: {\n\t\t\t\tslug: string;\n\t\t\t};\n\t\t}[];\n\t};\n};\n\nexport default function SeriesTemplate({ data }: PageProps<QueryType>) {\n\tconst { allMarkdownRemark } = data;\n\tconst posts = useMemo(() => reshapePost(allMarkdownRemark), [allMarkdownRemark]);\n\n\tif (!allMarkdownRemark) return null;\n\treturn (\n\t\t<div>\n\t\t\t<SeriesPostList posts={posts} series={allMarkdownRemark.nodes[0].frontmatter.series} />\n\t\t\t<Footer />\n\t\t</div>\n\t);\n}\n\nexport function Head({ data }: HeadProps<QueryType>) {\n\tif (!data.allMarkdownRemark) return null;\n\tconst { series, image, released_at, updated_at } = data.allMarkdownRemark.nodes[0].frontmatter;\n\treturn (\n\t\t<SEO\n\t\t\ttitle={series}\n\t\t\tdescription={series}\n\t\t\timage={image.childImageSharp.fixed.src}\n\t\t\tcreated_at={released_at}\n\t\t\tupdated_at={updated_at || undefined}\n\t\t\tpathname={`/series/${series.replace(/ /gi, \"-\")}`}\n\t\t/>\n\t);\n}\n\nexport const pageQuery = graphql`\n\tquery ($series: String!) {\n\t\tallMarkdownRemark(\n\t\t\tfilter: { frontmatter: { series: { eq: $series } } }\n\t\t\tsort: { frontmatter: { released_at: ASC } }\n\t\t) {\n\t\t\tnodes {\n\t\t\t\tfrontmatter {\n\t\t\t\t\ttitle\n\t\t\t\t\treleased_at\n\t\t\t\t\tupdated_at\n\t\t\t\t\tdescription\n\t\t\t\t\tlang\n\t\t\t\t\timage {\n\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\tgatsbyImageData(width: 1000, quality: 100)\n\t\t\t\t\t\t\tfixed {\n\t\t\t\t\t\t\t\tsrc\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttranslation_series\n\t\t\t\t\tseries\n\t\t\t\t\tcategory\n\t\t\t\t}\n\t\t\t\tfields {\n\t\t\t\t\tslug\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n","import {\n\tPostListAllMarkdownRemark,\n\tPostType,\n\tSeriesListAllMarkdownRemark,\n\tSeriesType,\n} from \"../../types/Common\";\n\nexport const reshapePost = (allMarkdownRemark: PostListAllMarkdownRemark): PostType[] => {\n\tif (!allMarkdownRemark) return [];\n\n\treturn allMarkdownRemark.nodes.map((node) => ({\n\t\tpath: node.fields.slug,\n\t\ttitle: node.frontmatter.title,\n\t\tdescription: node.frontmatter.description,\n\t\treleased_at: node.frontmatter.released_at,\n\t\tupdated_at: node.frontmatter.updated_at || undefined,\n\t\timage: node.frontmatter.image\n\t\t\t? node.frontmatter.image.childImageSharp.gatsbyImageData\n\t\t\t: null,\n\t\tlang: node.frontmatter.lang,\n\t\tcategory: node.frontmatter.category,\n\t}));\n};\n\nexport const reshapeSeries = (allMarkdownRemark: SeriesListAllMarkdownRemark): SeriesType[] => {\n\tif (!allMarkdownRemark) return [];\n\n\treturn allMarkdownRemark.group.map((each) => ({\n\t\tpath: `/series/${each.fieldValue.replace(/ /gi, \"-\")}`,\n\t\ttitle: each.fieldValue,\n\t\timage: each.nodes[0].frontmatter.image\n\t\t\t? each.nodes[0].frontmatter.image.childImageSharp.gatsbyImageData\n\t\t\t: null,\n\t\treleased_at: each.nodes[0].frontmatter.released_at,\n\t\tupdated_at: each.nodes[0].frontmatter.updated_at || undefined,\n\t\tlang: each.nodes[0].frontmatter.lang,\n\t\ttotalCount: each.totalCount,\n\t}));\n};\n"],"names":["SEO","_ref","title","description","pathname","created_at","updated_at","image","children","site","useStaticQuery","seo","author","siteMetadata","siteUrl","url","useEffect","console","log","React","name","content","property","rel","href","undefined","type","JSON","stringify","logo","headline","datePublished","dateModified","async","src","crossOrigin","FooterWrapper","Styled","div","withConfig","displayName","componentId","palette","gray","TEXT","Footer","ProfileIcons","className","Container","styled","Link","mediaQuery","media","custom","Content","ellipsis","SeriesPost","post","index","to","path","GatsbyImage","alt","replace","length","formatDate","released_at","lang","Wrapper","SeriesPostList","posts","series","map","key","SeriesTemplate","data","allMarkdownRemark","useMemo","reshapePost","nodes","frontmatter","Head","_ref2","childImageSharp","fixed","node","fields","slug","gatsbyImageData","category","reshapeSeries","group","each","fieldValue","totalCount"],"sourceRoot":""}