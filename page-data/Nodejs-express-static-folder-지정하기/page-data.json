{"componentChunkName":"component---src-components-post-post-template-tsx","path":"/Nodejs-express-static-folder-지정하기/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"1-서론\" style=\"position:relative;\"><a href=\"#1-%EC%84%9C%EB%A1%A0\" aria-label=\"1 서론 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 서론</h2>\n<p>처음 내가 Node.js로 웹사이트를 개발할 때 로컬에서 html 파일을 브라우저로 켰을 때는 css, js, image 파일들이 모두 제대로 적용됐는 데, node.js로 html 파일을 구동하면 아무것도 적용되지 않는 것이 너무 당황스러웠다. 뭔가 잘못된 것인가 하다가 로컬에서 html 파일을 구동할 때의 static files(css, js, image 등)와의 상대 경로와 node.js 서버를 사용하여 구동할 때의 상대 경로가 전혀 다르다는 것을 인지했다. 이 것을 해결하기 위해 static folder를 지정할 수 있고, 서버에서는 해당 static folder에 접근해서 static files를 가져온다. 따라서, html 파일을 작성할 때도 해당 url로 static files(css, js, image 등)의 상대 경로를 작성해야 한다.</p>\n<h2 id=\"2-환경설정\" style=\"position:relative;\"><a href=\"#2-%ED%99%98%EA%B2%BD%EC%84%A4%EC%A0%95\" aria-label=\"2 환경설정 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 환경설정</h2>\n<p>간단한 html, css 프로젝트를 만들만한 폴더를 하나 추가하고 개발환경을 생성해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token comment\">## 코드를 작성할 폴더 생성 및 열기</span>\n<span class=\"token function\">mkdir</span> public_practice\n<span class=\"token builtin class-name\">cd</span> public_practice\n\n<span class=\"token comment\">## package.json 초기화</span>\n<span class=\"token function\">npm</span> init <span class=\"token parameter variable\">-y</span>\n\n<span class=\"token comment\">## 필요한 모듈 설치</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> http express</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"3-폴더-구조\" style=\"position:relative;\"><a href=\"#3-%ED%8F%B4%EB%8D%94-%EA%B5%AC%EC%A1%B0\" aria-label=\"3 폴더 구조 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 폴더 구조</h2>\n<p>폴더 구조는 아래와 같이 지정했다. static files(css, js, image 등)은 public이라는 폴더 내부에 나눠서 저장된다. 우리는 public이라는 폴더 자체를 static folder로 지정해서 그 내부의 static files를 사용할 예정이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">📦public_practice\n ┣ 📂node_modules\n ┣ 📂public\n ┃ ┣ 📂js\n ┃ ┣ 📂images\n ┃ ┗ 📂styles\n ┃ ┃ ┗ 📜block_style.css\n ┣ 📂webpage\n ┃ ┗ 📜block.html\n ┣ 📜index.js\n ┣ 📜package-lock.json\n ┗ 📜package.json</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"4-html-파일-생성하기\" style=\"position:relative;\"><a href=\"#4-html-%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"4 html 파일 생성하기 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. html 파일 생성하기</h2>\n<p>static files에 대한 접근 확인만을 위해 테스트만을 진행하기 위해 html을 생성하는 것이므로 색깔을 가진 div 정사각형 블록 하나만 생성해보도록 하자. 여기서 주의할 점은 <link /> 태그에서 href 부분의 경로이다. 우리는 서버를 이용해서 static files를 public 폴더에 저장해놨으므로 public 폴더 내부의 경로를 지정하면 /styles/block_style.css가 된다. 이는 html 파일이 서비스되고 있는 서버의 url을 기본으로 적용하게 되므로 전체적인 url은 <a href=\"http://localhost:8080/styles/block_style.css%EC%9D%B4%EB%8B%A4\">http://localhost:8080/styles/block_style.css이다</a>. 하지만, 동일한 서버에서 제공하는 static files는 아래와 같이 <a href=\"http://localhost:8080\">http://localhost:8080</a> 부분이 생략 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-html line-numbers\"><code class=\"language-html\"><span class=\"token comment\">&lt;!--block.html--></span>\n\n<span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>test_public<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/styles/block_style.css<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test_block<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"5-block_stylecss-작성\" style=\"position:relative;\"><a href=\"#5-block_stylecss-%EC%9E%91%EC%84%B1\" aria-label=\"5 block_stylecss 작성 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. block_style.css 작성</h2>\n<p>block_style.css가 html 파일에 적용된다면 서버 구동 후에 <a href=\"http://localhost:8080%EC%97%90\">http://localhost:8080에</a> 접속했을 때 검은색 블록 하나가 화면에 출력돼야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-css line-numbers\"><code class=\"language-css\"><span class=\"token comment\">/* block_style.css */</span>\n\n<span class=\"token selector\">#test_block</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> black<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"6-nodejs-서버-작성\" style=\"position:relative;\"><a href=\"#6-nodejs-%EC%84%9C%EB%B2%84-%EC%9E%91%EC%84%B1\" aria-label=\"6 nodejs 서버 작성 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. node.js 서버 작성</h2>\n<p>static folder를 지정하는 것은 매우 간단하다. express에 내장되어있는 static 함수를 사용해서 path를 지정하면 된다. Get 요청이 들어오면 fs 모듈을 사용해서 파일을 읽어와서 html 데이터를 전송한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token comment\">// index.js</span>\n\n<span class=\"token keyword\">const</span> http <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"express\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> server <span class=\"token operator\">=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">createServer</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">PORT</span> <span class=\"token operator\">=</span> <span class=\"token number\">8080</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">WEBPATH</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"./webpage\"</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">.</span><span class=\"token function\">static</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"public\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">WEBPATH</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/block.html</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;h1>500 Error&lt;/h1>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">writeHead</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">\"Content-Type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"text/html\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nserver<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PORT</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Server running on </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">PORT</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[참고]</h2>\n<ul>\n<li><a href=\"https://expressjs.com/en/starter/static-files.html\">https://expressjs.com/en/starter/static-files.html</a></li>\n</ul>","tableOfContents":"<ul>\n<li><a href=\"#1-%EC%84%9C%EB%A1%A0\">1. 서론</a></li>\n<li><a href=\"#2-%ED%99%98%EA%B2%BD%EC%84%A4%EC%A0%95\">2. 환경설정</a></li>\n<li><a href=\"#3-%ED%8F%B4%EB%8D%94-%EA%B5%AC%EC%A1%B0\">3. 폴더 구조</a></li>\n<li><a href=\"#4-html-%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\">4. html 파일 생성하기</a></li>\n<li><a href=\"#5-block_stylecss-%EC%9E%91%EC%84%B1\">5. block_style.css 작성</a></li>\n<li><a href=\"#6-nodejs-%EC%84%9C%EB%B2%84-%EC%9E%91%EC%84%B1\">6. node.js 서버 작성</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">[참고]</a></li>\n</ul>","frontmatter":{"author":"millo","category":"nodejs","description":"nodejs에서 express를 사용해 static folder를 지정해보자.","image":{"childImageSharp":{"fixed":{"src":"/static/44cfb2066586ecbff6cdad01355978f8/2244e/nodejs.jpg"}}},"lang":"ko","released_at":"2021-01-30 13:00","series":"none","tags":["nodejs","express","express.static","public","static files","static folder"],"title":"[Node.js] express static folder 지정하기","translation":null,"updated_at":null},"fields":{"slug":"/Nodejs-express-static-folder-지정하기/"}},"allMarkdownRemark":{"nodes":[{"frontmatter":{"lang":"ko","title":"[Docker] docker-compose (node.js, mysql) 실행 순서 동기화"},"fields":{"slug":"/docker-compose-nodejs-mysql-실행-순서-동기화/"}},{"frontmatter":{"lang":"ko","title":"[JavaScript] Callback 지옥 벗어나기"},"fields":{"slug":"/JavaScript-Callback-지옥-벗어나기/"}},{"frontmatter":{"lang":"ko","title":"[Docker] Jenkins in Docker(Ubuntu18.04)"},"fields":{"slug":"/Jenkins-in-Docker-Ubuntu1804/"}},{"frontmatter":{"lang":"ko","title":"[Go] 구조체를 Class처럼 사용하기"},"fields":{"slug":"/Go언어에서-구조체를-Class처럼-사용하기/"}},{"frontmatter":{"lang":"ko","title":"[Raspberry pi] OpenCV4 설치하기"},"fields":{"slug":"/Raspberry-pi에-OpenCV4-설치하기/"}},{"frontmatter":{"lang":"ko","title":"[Python] 간단한 Anaconda 가상 환경 관리하기"},"fields":{"slug":"/Python-간단한-Anaconda-가상-환경-관리하기/"}},{"frontmatter":{"lang":"ko","title":"[Python] TCP image socket 구현하기(Server, Client)"},"fields":{"slug":"/Python-TCP-image-socket-구현하기-Server-Client/"}},{"frontmatter":{"lang":"ko","title":"[Node.js] express 사용하기"},"fields":{"slug":"/Nodejs-express-사용하기/"}},{"frontmatter":{"lang":"ko","title":"[Node.js] express router 사용하기"},"fields":{"slug":"/Nodejs-express-router-사용하기/"}},{"frontmatter":{"lang":"ko","title":"[Raspberry pi] 부팅 시 프로그램 자동 실행하기"},"fields":{"slug":"/Raspberry-pi-부팅시-프로그램-자동-실행하기/"}},{"frontmatter":{"lang":"ko","title":"[Node.js] moment 사용하기"},"fields":{"slug":"/Nodejs-moment-사용하기/"}},{"frontmatter":{"lang":"ko","title":"[Docker] Ubuntu:18.04에서 Docker 설치하기"},"fields":{"slug":"/Ubuntu-1804에서-Docker-설치하기/"}},{"frontmatter":{"lang":"ko","title":"[NGINX] Ubuntu:18.04에서 letsencrypt HTTPS 환경 구축하기"},"fields":{"slug":"/Ubuntu-1804에서-letsencrypt-HTTPS-환경구축/"}},{"frontmatter":{"lang":"ko","title":"[Node.js] nodemailer 사용하기"},"fields":{"slug":"/Nodejs-nodemailer-사용하기/"}},{"frontmatter":{"lang":"ko","title":"[Node.js] mysql을 async/await로 처리하기"},"fields":{"slug":"/Nodejs-mysql을-async-awiat로-처리하기/"}},{"frontmatter":{"lang":"ko","title":"[Node.js] express cors 사용하기"},"fields":{"slug":"/Nodejs-express-cors-사용하기/"}},{"frontmatter":{"lang":"ko","title":"[Node.js] express static folder 지정하기"},"fields":{"slug":"/Nodejs-express-static-folder-지정하기/"}},{"frontmatter":{"lang":"ko","title":"[JavaScript] Date 객체 사용하기"},"fields":{"slug":"/JavaScript-Date-객체-사용하기/"}},{"frontmatter":{"lang":"ko","title":"[Docker] ReactJS Dockerizing하기"},"fields":{"slug":"/React-Dockerizing하기/"}},{"frontmatter":{"lang":"ko","title":"[React Native] 배경 이미지 크기 자동으로 맞추기"},"fields":{"slug":"/ReactNative-배경-이미지-크기-자동으로-맞추기/"}},{"frontmatter":{"lang":"ko","title":"[React Native] 커스텀 로딩 애니메이션 스크린 구현하기"},"fields":{"slug":"/ReactNative-커스텀-로딩-애니메이션-스크린-구현하기/"}},{"frontmatter":{"lang":"ko","title":"[Node.js] Socket.io 간단한 채팅 구현하기"},"fields":{"slug":"/Nodejs-socketio-간단한-채팅-구현하기/"}},{"frontmatter":{"lang":"ko","title":"[Python] Ubuntu:18.04 에서 jupyter notebook 사용하기"},"fields":{"slug":"/Python-Ubuntu1804에서-jupyter-notebook-사용하기/"}},{"frontmatter":{"lang":"ko","title":"[Network] HTTP 상태(응답) 코드 정리하기"},"fields":{"slug":"/HTTP-상태코드-정리하기/"}},{"frontmatter":{"lang":"ko","title":"[Network] SOAP 정리하기"},"fields":{"slug":"/SOAP-정리하기/"}},{"frontmatter":{"lang":"ko","title":"[Node.js] slack 연동하기(알림봇 구현)"},"fields":{"slug":"/Nodejs-slack-연동하기-알림봇구현/"}},{"frontmatter":{"lang":"ko","title":"[React Native] Dimensions.get('window')와 Dimensions.get('screen')의 차이점"},"fields":{"slug":"/ReactNative-Dimensions-get-window와-Dimentsions-get-screen의-차이점/"}},{"frontmatter":{"lang":"ko","title":"[React Native] Bottom tab bar 특정 화면에서 안 보이게 설정하기"},"fields":{"slug":"/ReactNative-Bottom-tab-bar-특정-화면에서-안-보이게-설정하기/"}},{"frontmatter":{"lang":"ko","title":"[React Native] 특정 화면에서 화면 고정하기"},"fields":{"slug":"/ReactNative-특정-화면에서-화면-고정하기/"}},{"frontmatter":{"lang":"ko","title":"[Node.js] PBKDF2 비밀번호 암호화하기"},"fields":{"slug":"/Nodejs-PBKDF2-비밀번호-암호화하기/"}},{"frontmatter":{"lang":"ko","title":"[Network] HTTP란 무엇인가"},"fields":{"slug":"/HTTP란-무엇인가/"}},{"frontmatter":{"lang":"ko","title":"[Network] URI와 URL의 차이점"},"fields":{"slug":"/URI와-URL의-차이점/"}},{"frontmatter":{"lang":"ko","title":"[Gatsby] document is not defined build error 해결 방법"},"fields":{"slug":"/Gatsby-build-error-document-is-not-defined-해결방법/"}},{"frontmatter":{"lang":"en","title":"[Gatsby] Troubleshooting document is not defined build error"},"fields":{"slug":"/Troubleshooting-Gatsby-build-error-document-is-not-defined/"}},{"frontmatter":{"lang":"ko","title":"[Typescript] mongoose methods, statics 사용하기"},"fields":{"slug":"/Typescript-mongodb-method-statics-사용하기/"}},{"frontmatter":{"lang":"en","title":"[Typescript] mongoose methods, statics"},"fields":{"slug":"/Typescript-mongoose-methods-statics/"}},{"frontmatter":{"lang":"en","title":"[Network] Differences between URI and URL"},"fields":{"slug":"/Difference-between-URI-and-URL/"}},{"frontmatter":{"lang":"en","title":"[Docker] Synchronize docker-compose (node.js, mysql) execution order"},"fields":{"slug":"/Synchronize-docker-compose-nodejs-mysql-execution-order/"}},{"frontmatter":{"lang":"en","title":"[JavaScript] Get out of Callback hell"},"fields":{"slug":"/JavaScript-Get-out-of-Callback-hell/"}},{"frontmatter":{"lang":"en","title":"[Docker] Jenkins in Docker(Ubuntu18.04)"},"fields":{"slug":"/jenkins-in-docker-ubuntu/"}},{"frontmatter":{"lang":"en","title":"[Go] Using Struct as Class"},"fields":{"slug":"/Using-struct-as-class-in-golang/"}},{"frontmatter":{"lang":"en","title":"Install Opencv 4 on Raspberry Pi 4"},"fields":{"slug":"/Install-Opencv-4-on-Raspberry-Pi-4/"}},{"frontmatter":{"lang":"en","title":"[Python] Manage simple Anaconda virtual environments기"},"fields":{"slug":"/Python-Manage-simple-Anaconda-virtual-environments/"}},{"frontmatter":{"lang":"en","title":"[Python] Implementing TCP image socket(Server, Client)"},"fields":{"slug":"/Python-Implementing TCP image socket-Server-Client/"}},{"frontmatter":{"lang":"en","title":"[Node.js] Use express"},"fields":{"slug":"/Nodejs-use-expressjs/"}},{"frontmatter":{"lang":"ko","title":"스타트업 코딩 페스티벌 2021 1차, 2차 후기"},"fields":{"slug":"/scope-2021/"}},{"frontmatter":{"lang":"ko","title":"[React Native] 다른 앱(play store, instagram 등) 열기"},"fields":{"slug":"/ReactNative-link-other-app/"}},{"frontmatter":{"lang":"ko","title":"[React Native] Firebase Analytics(@react-native-firebase/analytics) 적용하기"},"fields":{"slug":"/ReactNative-Firebase-Analytics-Setting/"}},{"frontmatter":{"lang":"ko","title":"[React Native] Facebook SDK(react-native-fbsdk) 적용하기"},"fields":{"slug":"/ReactNative-facebook-sdk-setting/"}},{"frontmatter":{"lang":"ko","title":"[React Native] ld: symbol(s) not found for architecture x86_64 해결방법"},"fields":{"slug":"/ReactNative-ld-symbols-not-found-error/"}},{"frontmatter":{"lang":"ko","title":"[Android] Debug 버전으로는 실행되는 데 Release Crash 나는 경우"},"fields":{"slug":"/Android-release-error/"}},{"frontmatter":{"lang":"ko","title":"[React Native] CodePush를 이용한 앱 업데이트"},"fields":{"slug":"/ReactNative-codepush/"}},{"frontmatter":{"lang":"en","title":"[React Native] Troubleshooting ld: symbol(s) not found for architecture x86_64"},"fields":{"slug":"/ReactNative-ld-symbols-not-found-error-en/"}},{"frontmatter":{"lang":"en","title":"[Android] Runs with Debug version, but fails with Release version"},"fields":{"slug":"/Android-release-error-en/"}},{"frontmatter":{"lang":"ko","title":"[React Native] Kakao Link를 사용해서 Deep link를 구현해보자."},"fields":{"slug":"/ReactNative-kakao-deep-link/"}},{"frontmatter":{"lang":"ko","title":"[React Native] @react-native-firebase 적용하기 (pod install 에러 해결)"},"fields":{"slug":"/ReactNative-Firebase-2023-05-25/"}},{"frontmatter":{"lang":"en","title":"[React Native] Install @react-native-firebase (solve pod install issue)"},"fields":{"slug":"/ReactNative-Firebase-2023-05-25-en/"}},{"frontmatter":{"lang":"en","title":"[React Native] Solving realm one-to-many relationship issue"},"fields":{"slug":"/reactnative-realm-one-to-many-relationship-2023-05-26-en/"}},{"frontmatter":{"lang":"ko","title":"[React Native] realm one-to-many relationship 적용하기"},"fields":{"slug":"/reactnative-realm-one-to-many-relationship-2023-05-26/"}}]}},"pageContext":{"slug":"/Nodejs-express-static-folder-지정하기/","series":"none"}},"staticQueryHashes":["2083168511","3061319093","3557473807","356676075"],"slicesMap":{}}