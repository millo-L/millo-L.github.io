{"componentChunkName":"component---src-components-post-post-template-tsx","path":"/WebRTC-구현하기-1-N-P2P/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"1-서론\" style=\"position:relative;\"><a href=\"#1-%EC%84%9C%EB%A1%A0\" aria-label=\"1 서론 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 서론</h2>\n<p>지난 시간에는 <a href=\"https://millo-l.github.io/WebRTC-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-1-1-P2P/\">WebRTC를 이용한 1:1 P2P 통신</a>에 대해서 포스팅했다. 이번 포스팅은 저번 포스팅에서 설명한 개념은 안다고 가정하고 작성할 예정이기 때문에 혹시나 이 글을 먼저 본다면 이전 글을 다 읽고 오기를 추천한다. 1:N 연결이라고 해도 이전에 구현했던 1:1연결과 같은 P2P 연결(Signaling 서버 형식)을 구현할 것이기 때문에 크게 다른 점은 없다. 동적으로 연결되고 종료되는 일련의 과정을 설명하는 데 집중하도록 하겠다.</p>\n<h2 id=\"2-구현-방식\" style=\"position:relative;\"><a href=\"#2-%EA%B5%AC%ED%98%84-%EB%B0%A9%EC%8B%9D\" aria-label=\"2 구현 방식 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 구현 방식</h2>\n<h3 id=\"2-1-11-연결과의-공통점\" style=\"position:relative;\"><a href=\"#2-1-11-%EC%97%B0%EA%B2%B0%EA%B3%BC%EC%9D%98-%EA%B3%B5%ED%86%B5%EC%A0%90\" aria-label=\"2 1 11 연결과의 공통점 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2-1. 1:1 연결과의 공통점</h3>\n<p>화상 회의를 진행하는 상대방이 한 명에서 여러 명으로 변하긴 하지만 <strong>P2P(peer to peer)라는 점에서는 동일</strong>하다. 1:1 연결과 동일하게 Signaling 서버를 구성해서 상대방과의 통신을 연결한 후 부터는 서버가 관여하지 않고 Peer 간 통신만 이루어질 것이다.</p>\n<h3 id=\"2-2-11-연결과의-차이점\" style=\"position:relative;\"><a href=\"#2-2-11-%EC%97%B0%EA%B2%B0%EA%B3%BC%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90\" aria-label=\"2 2 11 연결과의 차이점 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2-2. 1:1 연결과의 차이점</h3>\n<p>1:N 연결은 저번 시간에 했던 1:1 연결과는 다르게 <strong>RTCPeerConnection을 화상 회의에 참여하는 수만큼</strong> 가지고 있어야 한다. 따라서 과부하가 매우 심하므로 4, 5명 정도와 테스트를 진행하는 것을 권장한다. 이 과부하에 대한 설명도 <a href=\"https://millo-l.github.io/WebRTC-%EA%B5%AC%ED%98%84-%EB%B0%A9%EC%8B%9D(Mesh-SFU-MCU)/\">지난 포스트</a>를 참고하길 바란다.</p>\n<h2 id=\"3-실제-코드\" style=\"position:relative;\"><a href=\"#3-%EC%8B%A4%EC%A0%9C-%EC%BD%94%EB%93%9C\" aria-label=\"3 실제 코드 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 실제 코드</h2>\n<h3 id=\"3-1-signaling-servernodejs\" style=\"position:relative;\"><a href=\"#3-1-signaling-servernodejs\" aria-label=\"3 1 signaling servernodejs permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3-1. Signaling Server(Node.js)</h3>\n<h4>주의할 점: socket.io version=2.3.0을 사용하셔야합니다.</h4>\n<h4>1. socket 이벤트</h4>\n<ul>\n<li>connection\n<ul>\n<li>지난 포스트와 동일</li>\n</ul>\n</li>\n<li>join_room\n<ul>\n<li>지난 포스트와 동일</li>\n</ul>\n</li>\n<li>offer\n<ul>\n<li>data\n<ul>\n<li>offerSendID: offer를 보내는 user의 socket id</li>\n<li>offerSendEmail: offer를 보내는 user의 email</li>\n<li>sdp: offer를 보내는 user의 RTCSessionDescription</li>\n<li>offerReceiveID: offer를 받을 user의 socket id</li>\n</ul>\n</li>\n<li>role\n<ul>\n<li>offer를 받아야하는 receiver에게 offer를 보내는 sender의 socket id, email, sdp를 보낸다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>answer\n<ul>\n<li>data\n<ul>\n<li>answerSendID: answer를 보내는 user의 socket id</li>\n<li>sdp: answer를 보내는 user의 RTCSessionDescription</li>\n<li>answerReceiveID: answer를 받을 user의 socket id</li>\n</ul>\n</li>\n<li>role\n<ul>\n<li>answer를 받아야하는 receiver에게 answer를 보내는 sender의 socket id, email, sdp를 보낸다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>candidate\n<ul>\n<li>data\n<ul>\n<li>candidateSendID: candidate를 보내는 user의 socket id</li>\n<li>candidate: sender의 RTCIceCandidate</li>\n<li>candidateReceiveID: candidate를 받는 user의 socket id</li>\n</ul>\n</li>\n<li>role\n<ul>\n<li>candidate를 받아야하는 receiver에게 sender의 socket id, candidate를 보낸다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>disconnection\n<ul>\n<li>지난 포스트와 동일</li>\n</ul>\n</li>\n</ul>\n<h4>1:1 연결에서는 상대방이 한 명 밖에 없기 때문에 offer, answer, candidate를 주고 받는 이벤트에서 socket id를 함께 보낼 필요가 없었다. 하지만 1:N 연결에서는 같은 방에 여러 명이 존재하기 때문에 어떤 user에게 데이터를 전달할지는 중요한 부분이다.</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">let</span> users <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> socketToRoom <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> maximum <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">MAXIMUM</span> <span class=\"token operator\">||</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n\nio<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"connection\"</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">socket</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    socket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"join_room\"</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">.</span>room<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">const</span> length <span class=\"token operator\">=</span> users<span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">.</span>room<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">===</span> maximum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                socket<span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"room_full\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            users<span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">.</span>room<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> socket<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">email</span><span class=\"token operator\">:</span> data<span class=\"token punctuation\">.</span>email <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            users<span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">.</span>room<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> socket<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">email</span><span class=\"token operator\">:</span> data<span class=\"token punctuation\">.</span>email <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        socketToRoom<span class=\"token punctuation\">[</span>socket<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>room<span class=\"token punctuation\">;</span>\n\n        socket<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>room<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">[</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>socketToRoom<span class=\"token punctuation\">[</span>socket<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">]: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>socket<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> enter</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">const</span> usersInThisRoom <span class=\"token operator\">=</span> users<span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">.</span>room<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>\n            <span class=\"token parameter\">user</span> <span class=\"token operator\">=></span> user<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> socket<span class=\"token punctuation\">.</span>id\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>usersInThisRoom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        io<span class=\"token punctuation\">.</span>sockets<span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"all_users\"</span><span class=\"token punctuation\">,</span> usersInThisRoom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    socket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"offer\"</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        socket<span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>offerReceiveID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getOffer\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">sdp</span><span class=\"token operator\">:</span> data<span class=\"token punctuation\">.</span>sdp<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">offerSendID</span><span class=\"token operator\">:</span> data<span class=\"token punctuation\">.</span>offerSendID<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">offerSendEmail</span><span class=\"token operator\">:</span> data<span class=\"token punctuation\">.</span>offerSendEmail<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    socket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"answer\"</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        socket<span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>answerReceiveID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getAnswer\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">sdp</span><span class=\"token operator\">:</span> data<span class=\"token punctuation\">.</span>sdp<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">answerSendID</span><span class=\"token operator\">:</span> data<span class=\"token punctuation\">.</span>answerSendID<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    socket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"candidate\"</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        socket<span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>candidateReceiveID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getCandidate\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">candidate</span><span class=\"token operator\">:</span> data<span class=\"token punctuation\">.</span>candidate<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">candidateSendID</span><span class=\"token operator\">:</span> data<span class=\"token punctuation\">.</span>candidateSendID<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    socket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"disconnect\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">[</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>socketToRoom<span class=\"token punctuation\">[</span>socket<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">]: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>socket<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> exit</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> roomID <span class=\"token operator\">=</span> socketToRoom<span class=\"token punctuation\">[</span>socket<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> room <span class=\"token operator\">=</span> users<span class=\"token punctuation\">[</span>roomID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>room<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            room <span class=\"token operator\">=</span> room<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span> <span class=\"token operator\">=></span> user<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> socket<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            users<span class=\"token punctuation\">[</span>roomID<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> room<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>room<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">delete</span> users<span class=\"token punctuation\">[</span>roomID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        socket<span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>roomID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_exit\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> socket<span class=\"token punctuation\">.</span>id <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"3-2-clientreactjs-typescript\" style=\"position:relative;\"><a href=\"#3-2-clientreactjs-typescript\" aria-label=\"3 2 clientreactjs typescript permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3-2. Client(ReactJS, Typescript)</h3>\n<h4>주의할 점: socket.io-client version=2.3.0, @types/socket.io-client version=1.4.34을 사용하셔야 합니다.</h4>\n<h4>1. Client에서 사용할 변수들</h4>\n<ul>\n<li>socket: 지난 포스트와 동일</li>\n<li>users: 상대방의 데이터(socket id, email, MediaStream) 배열</li>\n<li>localVideoRef: 지난 포스트와 동일</li>\n<li>pcs: 상대방의 RTCPeerConnection 저장할 Dictionary 변수 (pcs[socket.id] = RTCPeerConnection 형태로 저장)</li>\n<li>pc_config: 지난 포스트와 동일</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ts line-numbers\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>socket<span class=\"token punctuation\">,</span> setSocket<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">useState</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>SocketIOClient<span class=\"token punctuation\">.</span>Socket<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>users<span class=\"token punctuation\">,</span> setUsers<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">useState</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span>IWebRTCUser<span class=\"token operator\">>></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> localVideoRef <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">useRef</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>HTMLVideoElement<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> pcs<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>socketId<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> RTCPeerConnection <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> pc_config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    iceServers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token comment\">// {</span>\n        <span class=\"token comment\">//   urls: 'stun:[STUN_IP]:[PORT]',</span>\n        <span class=\"token comment\">//   'credentials': '[YOR CREDENTIALS]',</span>\n        <span class=\"token comment\">//   'username': '[USERNAME]'</span>\n        <span class=\"token comment\">// },</span>\n        <span class=\"token punctuation\">{</span>\n            urls<span class=\"token operator\">:</span> <span class=\"token string\">\"stun:stun.l.google.com:19302\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4>2. Socket 수신 이벤트</h4>\n<ul>\n<li>all_users\n<ul>\n<li>자신을 제외한 같은 방의 모든 user 목록을 받아온다.</li>\n<li>user들마다 createPeerConnection 함수를 호출해서 각각의 RTCPeerConnection을 생성한다.</li>\n<li>해당 user를 위해 생성한 RTCPeerConneciton을 통해 createOffer 함수를 호출하고 해당 user에게만 offer signal을 보낸다.</li>\n</ul>\n</li>\n<li>getOffer\n<ul>\n<li>offer를 보낸 user와의 통신을 위해 createPeerConnection 함수를 호출해서 RTCPeerConnection을 생성한다.</li>\n<li>해당 user를 위해 생성한 RTCPeerConnection의 remoteDescription를 해당 user에게서 전달 받은 sdp로 설정한다.</li>\n<li>createAnswer 함수를 호출하고 해당 user에게 answer signal을 보낸다.</li>\n</ul>\n</li>\n<li>getAnswer\n<ul>\n<li>answer을 보낸 user를 위해 생성해놓은 RTCPeerConnection의 remoteDescription를 answer을 보낸 user의 sdp로 설정한다.</li>\n</ul>\n</li>\n<li>getCandidate\n<ul>\n<li>candidate를 보낸 user를 위해 생성해놓은 RTCPeerConnection에 받은 RTCIceCandidate를 추가한다.</li>\n</ul>\n</li>\n<li>user_exit\n<ul>\n<li>pcs Dictionary에서 해당 user의 RTCPeerConnection을 삭제한다.</li>\n<li>users에서 해당 user의 데이터를 삭제한다.</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ts line-numbers\"><code class=\"language-ts\"><span class=\"token keyword\">let</span> newSocket <span class=\"token operator\">=</span> io<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:8080\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> localStream<span class=\"token operator\">:</span> MediaStream<span class=\"token punctuation\">;</span>\n\nnewSocket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"all_users\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>allUsers<span class=\"token operator\">:</span> <span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> email<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> len <span class=\"token operator\">=</span> allUsers<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">createPeerConnection</span><span class=\"token punctuation\">(</span>\n            allUsers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n            allUsers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">,</span>\n            newSocket<span class=\"token punctuation\">,</span>\n            localStream\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> pc<span class=\"token operator\">:</span> RTCPeerConnection <span class=\"token operator\">=</span> pcs<span class=\"token punctuation\">[</span>allUsers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            pc<span class=\"token punctuation\">.</span><span class=\"token function\">createOffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                offerToReceiveAudio<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n                offerToReceiveVideo<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>sdp <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"create offer success\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    pc<span class=\"token punctuation\">.</span><span class=\"token function\">setLocalDescription</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">RTCSessionDescription</span><span class=\"token punctuation\">(</span>sdp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    newSocket<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"offer\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                        sdp<span class=\"token operator\">:</span> sdp<span class=\"token punctuation\">,</span>\n                        offerSendID<span class=\"token operator\">:</span> newSocket<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n                        offerSendEmail<span class=\"token operator\">:</span> <span class=\"token string\">\"offerSendSample@sample.com\"</span><span class=\"token punctuation\">,</span>\n                        offerReceiveID<span class=\"token operator\">:</span> allUsers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>error <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nnewSocket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"getOffer\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span>data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        sdp<span class=\"token operator\">:</span> RTCSessionDescription<span class=\"token punctuation\">;</span>\n        offerSendID<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n        offerSendEmail<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"get offer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">createPeerConnection</span><span class=\"token punctuation\">(</span>\n            data<span class=\"token punctuation\">.</span>offerSendID<span class=\"token punctuation\">,</span>\n            data<span class=\"token punctuation\">.</span>offerSendEmail<span class=\"token punctuation\">,</span>\n            newSocket<span class=\"token punctuation\">,</span>\n            localStream\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> pc<span class=\"token operator\">:</span> RTCPeerConnection <span class=\"token operator\">=</span> pcs<span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">.</span>offerSendID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            pc<span class=\"token punctuation\">.</span><span class=\"token function\">setRemoteDescription</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">RTCSessionDescription</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>sdp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>\n                <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"answer set remote description success\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    pc<span class=\"token punctuation\">.</span><span class=\"token function\">createAnswer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                        offerToReceiveVideo<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n                        offerToReceiveAudio<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>sdp <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"create answer success\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            pc<span class=\"token punctuation\">.</span><span class=\"token function\">setLocalDescription</span><span class=\"token punctuation\">(</span>\n                                <span class=\"token keyword\">new</span> <span class=\"token class-name\">RTCSessionDescription</span><span class=\"token punctuation\">(</span>sdp<span class=\"token punctuation\">)</span>\n                            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            newSocket<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"answer\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                                sdp<span class=\"token operator\">:</span> sdp<span class=\"token punctuation\">,</span>\n                                answerSendID<span class=\"token operator\">:</span> newSocket<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n                                answerReceiveID<span class=\"token operator\">:</span> data<span class=\"token punctuation\">.</span>offerSendID<span class=\"token punctuation\">,</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>error <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nnewSocket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"getAnswer\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span>data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> sdp<span class=\"token operator\">:</span> RTCSessionDescription<span class=\"token punctuation\">;</span> answerSendID<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"get answer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> pc<span class=\"token operator\">:</span> RTCPeerConnection <span class=\"token operator\">=</span> pcs<span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">.</span>answerSendID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            pc<span class=\"token punctuation\">.</span><span class=\"token function\">setRemoteDescription</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">RTCSessionDescription</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>sdp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">//console.log(sdp);</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nnewSocket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"getCandidate\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span>data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> candidate<span class=\"token operator\">:</span> RTCIceCandidateInit<span class=\"token punctuation\">;</span> candidateSendID<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"get candidate\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> pc<span class=\"token operator\">:</span> RTCPeerConnection <span class=\"token operator\">=</span> pcs<span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">.</span>candidateSendID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            pc<span class=\"token punctuation\">.</span><span class=\"token function\">addIceCandidate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">RTCIceCandidate</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>candidate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"candidate add success\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nnewSocket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_exit\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    pcs<span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">delete</span> pcs<span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setUsers</span><span class=\"token punctuation\">(</span>oldUsers <span class=\"token operator\">=></span> oldUsers<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>user <span class=\"token operator\">=></span> user<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> data<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">setSocket</span><span class=\"token punctuation\">(</span>newSocket<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4>3. MediaStream 설정</h4>\n<ul>\n<li>navigator.mediaDevices.getUserMedia() 함수를 호출해서 자신의 MediaStream을 얻고 localVideoRef에 등록한다.</li>\n<li>방에 참가했다고 Signaling Server에 알린다. (이후에 all_users 이벤트로 답이 온다.)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ts line-numbers\"><code class=\"language-ts\">navigator<span class=\"token punctuation\">.</span>mediaDevices\n    <span class=\"token punctuation\">.</span><span class=\"token function\">getUserMedia</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        audio<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        video<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            width<span class=\"token operator\">:</span> <span class=\"token number\">240</span><span class=\"token punctuation\">,</span>\n            height<span class=\"token operator\">:</span> <span class=\"token number\">240</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>stream <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>localVideoRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">)</span> localVideoRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>srcObject <span class=\"token operator\">=</span> stream<span class=\"token punctuation\">;</span>\n\n        localStream <span class=\"token operator\">=</span> stream<span class=\"token punctuation\">;</span>\n\n        newSocket<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"join_room\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            room<span class=\"token operator\">:</span> <span class=\"token string\">\"1234\"</span><span class=\"token punctuation\">,</span>\n            email<span class=\"token operator\">:</span> <span class=\"token string\">\"sample@naver.com\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>error <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">getUserMedia error: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>error<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4>4. 상대방을 위한 RTCPeerConnection 생성</h4>\n<ul>\n<li>특정 user를 위한 PeerConnection 생성하고 localStream을 RTCPeerConnection에 등록한다.</li>\n<li>pcs 변수에 socket.id-RTCPeerConnection의 key-value 형태로 저장</li>\n<li>onicecandidate\n<ul>\n<li>offer 또는 answer signal을 생성한 후부터 본인의 icecadidate 정보 이벤트가 발생한다.</li>\n<li>offer 또는 answer를 보냈던 상대방에게 본인의 icecandidate 정보를 Signaling Server를 통해 보낸다.</li>\n</ul>\n</li>\n<li>oniceconnectionstatechange\n<ul>\n<li>ICE connection 상태가 변경됐을 때의 log</li>\n</ul>\n</li>\n<li>ontrack\n<ul>\n<li>상대방의 RTCSessionDescription을 본인의 RTCPeerConnection에서의 remoteSessionDescription으로 지정하면 상대방의 track 데이터에 대한 이벤트가 발생한다.</li>\n<li>상대방의 user 데이터에 stream을 등록한다.</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ts line-numbers\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> createPeerConnection <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n    socketID<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n    email<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n    newSocket<span class=\"token operator\">:</span> SocketIOClient<span class=\"token punctuation\">.</span>Socket<span class=\"token punctuation\">,</span>\n    localStream<span class=\"token operator\">:</span> MediaStream\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> RTCPeerConnection <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> pc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RTCPeerConnection</span><span class=\"token punctuation\">(</span>pc_config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// add pc to peerConnections object</span>\n    pcs <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>pcs<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>socketID<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> pc <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    pc<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onicecandidate</span> <span class=\"token operator\">=</span> e <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>candidate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"onicecandidate\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            newSocket<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"candidate\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                candidate<span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>candidate<span class=\"token punctuation\">,</span>\n                candidateSendID<span class=\"token operator\">:</span> newSocket<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n                candidateReceiveID<span class=\"token operator\">:</span> socketID<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    pc<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">oniceconnectionstatechange</span> <span class=\"token operator\">=</span> e <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    pc<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">ontrack</span> <span class=\"token operator\">=</span> e <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ontrack success\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">setUsers</span><span class=\"token punctuation\">(</span>oldUsers <span class=\"token operator\">=></span> oldUsers<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>user <span class=\"token operator\">=></span> user<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> socketID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">setUsers</span><span class=\"token punctuation\">(</span>oldUsers <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n            <span class=\"token operator\">...</span>oldUsers<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">{</span>\n                id<span class=\"token operator\">:</span> socketID<span class=\"token punctuation\">,</span>\n                email<span class=\"token operator\">:</span> email<span class=\"token punctuation\">,</span>\n                stream<span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>streams<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>localStream<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"localstream add\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        localStream<span class=\"token punctuation\">.</span><span class=\"token function\">getTracks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>track <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            pc<span class=\"token punctuation\">.</span><span class=\"token function\">addTrack</span><span class=\"token punctuation\">(</span>track<span class=\"token punctuation\">,</span> localStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"no local stream\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// return pc</span>\n    <span class=\"token keyword\">return</span> pc<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4>5. 본인과 상대방의 video 렌더링</h4>\n<ul>\n<li>IWebRTCUser: users 저장에 사용했던 인터페이스</li>\n<li>Props: Video 태그에 사용되는 props</li>\n<li>Video: 상대방의 video를 출력할 컴포넌트</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-tsx line-numbers\"><code class=\"language-tsx\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">IWebRTCUser</span> <span class=\"token punctuation\">{</span>\n    id<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    email<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    stream<span class=\"token operator\">:</span> MediaStream<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Props</span> <span class=\"token punctuation\">{</span>\n    email<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    stream<span class=\"token operator\">:</span> MediaStream<span class=\"token punctuation\">;</span>\n    muted<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Video</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> email<span class=\"token punctuation\">,</span> stream<span class=\"token punctuation\">,</span> muted <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> Props<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">useRef</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>HTMLVideoElement<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isMuted<span class=\"token punctuation\">,</span> setIsMuted<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">useState</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">boolean</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ref<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">)</span> ref<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>srcObject <span class=\"token operator\">=</span> stream<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>muted<span class=\"token punctuation\">)</span> <span class=\"token function\">setIsMuted</span><span class=\"token punctuation\">(</span>muted<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Container</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">VideoContainer</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>ref<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">muted</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>isMuted<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">autoPlay</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">VideoContainer</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserLabel</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>email<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">UserLabel</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Container</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>video</span>\n            <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n                width<span class=\"token operator\">:</span> <span class=\"token number\">240</span><span class=\"token punctuation\">,</span>\n                height<span class=\"token operator\">:</span> <span class=\"token number\">240</span><span class=\"token punctuation\">,</span>\n                margin<span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n                backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">\"black\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n            <span class=\"token attr-name\">muted</span>\n            <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>localVideoRef<span class=\"token punctuation\">}</span></span>\n            <span class=\"token attr-name\">autoPlay</span>\n        <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>video</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>users<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Video</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">email</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">stream</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"4-느낀-점\" style=\"position:relative;\"><a href=\"#4-%EB%8A%90%EB%82%80-%EC%A0%90\" aria-label=\"4 느낀 점 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 느낀 점</h2>\n<p>1:1 구현 포스팅은 크리스마스에 했는 데, 1:N은 12월 31일 올해의 마지막 날에 하게 됐다. 흠... 코로나가 얼른 끝나버렸으면 좋겠다. 1:1 구현을 하고 나서 WebRTC P2P에 대한 이해를 하고 나니 구현에 큰 어려움은 없었다. 다만 setUsers useState를 이용하는 데 실수를 해서 몇 시간을 뭐가 잘못됐는 지 헤매다가 결국 발견하고 허탈함을 느꼈다. 하지만 구현이 완료되고 나니 그런 허탈함보다 훨씬 큰 만족감이 왔다. 역시 나는 개발자랑 잘 맞는 것 같다. Nginx, 무료 도메인과 letsencrypt를 사용한 https 통신을 구현하고 주변 지인들과 테스트를 해본 결과 로컬이 아니어도 무리 없이 잘 진행됐다. 다만 이미 알고있었다시피 5명 정도가 되니까 클라이언트에서 무리가 가는 게 느껴졌다. 원래 구현하고 포스팅하고자 했던 내용은 여기까지이다. 계획을 마무리하니 뿌듯함이 느껴진다. 다음은 어떤 포스팅을 해볼까 고민중이다. 일단은 클라이언트 과부하에 대한 SFU 서버도 구현해볼 예정이다. 만약 구현이 완료되면 포스팅을 더 해보도록 하겠다. 어쩌다보니 WebRTC 개발자가 된 것 같은 기분이... 하지만 이 포스트가 많은 사람들에게 도움이 된다면 안 할 이유가 없을 것 같다.</p>\n<h2 id=\"github\" style=\"position:relative;\"><a href=\"#github\" aria-label=\"github permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[GitHub]</h2>\n<ul>\n<li><a href=\"https://github.com/millo-L/Typescript-ReactJS-WebRTC-1-N-P2P\">https://github.com/millo-L/Typescript-ReactJS-WebRTC-1-N-P2P</a></li>\n</ul>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[참고]</h2>\n<ul>\n<li><a href=\"https://millo-l.github.io/WebRTC-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-1-1-P2P/\">https://millo-l.github.io/WebRTC-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-1-1-P2P/</a></li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#1-%EC%84%9C%EB%A1%A0\">1. 서론</a></p>\n</li>\n<li>\n<p><a href=\"#2-%EA%B5%AC%ED%98%84-%EB%B0%A9%EC%8B%9D\">2. 구현 방식</a></p>\n<ul>\n<li><a href=\"#2-1-11-%EC%97%B0%EA%B2%B0%EA%B3%BC%EC%9D%98-%EA%B3%B5%ED%86%B5%EC%A0%90\">2-1. 1:1 연결과의 공통점</a></li>\n<li><a href=\"#2-2-11-%EC%97%B0%EA%B2%B0%EA%B3%BC%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90\">2-2. 1:1 연결과의 차이점</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#3-%EC%8B%A4%EC%A0%9C-%EC%BD%94%EB%93%9C\">3. 실제 코드</a></p>\n<ul>\n<li><a href=\"#3-1-signaling-servernodejs\">3-1. Signaling Server(Node.js)</a></li>\n<li><a href=\"#3-2-clientreactjs-typescript\">3-2. Client(ReactJS, Typescript)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#4-%EB%8A%90%EB%82%80-%EC%A0%90\">4. 느낀 점</a></p>\n</li>\n<li>\n<p><a href=\"#github\">[GitHub]</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0\">[참고]</a></p>\n</li>\n</ul>","frontmatter":{"author":"millo","category":"webrtc","description":"WebRTC의 이론을 기반으로 1:N P2P 실시간 영상 송수신을 구현해보자.","image":{"childImageSharp":{"fixed":{"src":"/static/5d1a4dc7a92facc014378e28932bee9a/497c6/webrtc.png"}}},"lang":"ko","released_at":"2020-12-31 17:00","series":"WebRTC 이론부터 실전까지","tags":["WebRTC","P2P","Mesh","Signaling Server","nodejs","reactjs","typescript"],"title":"WebRTC 구현하기(1:N P2P)","translation":"/Implementing-WebRTC-using-ReactJS-and-Typescript-1-N-P2P/","updated_at":null},"fields":{"slug":"/WebRTC-구현하기-1-N-P2P/"}},"allMarkdownRemark":{"nodes":[{"frontmatter":{"lang":"ko","title":"WebRTC 이론 정리하기"},"fields":{"slug":"/WebRTC-이론-정리하기/"}},{"frontmatter":{"lang":"ko","title":"WebRTC 구현 방식(Mesh/P2P, SFU, MCU)"},"fields":{"slug":"/WebRTC-구현-방식-Mesh-SFU-MCU/"}},{"frontmatter":{"lang":"ko","title":"WebRTC 구현하기(1:1 P2P)"},"fields":{"slug":"/WebRTC-구현하기-1-1-P2P/"}},{"frontmatter":{"lang":"ko","title":"WebRTC 구현하기(1:N P2P)"},"fields":{"slug":"/WebRTC-구현하기-1-N-P2P/"}},{"frontmatter":{"lang":"ko","title":"WebRTC 구현하기(1:N SFU)"},"fields":{"slug":"/WebRTC-구현하기-1-N-SFU/"}},{"frontmatter":{"lang":"ko","title":"WebRTC 성능 비교(P2P vs SFU)"},"fields":{"slug":"/WebRTC-성능비교-P2P-vs-SFU/"}}]}},"pageContext":{"id":"5c144a20-f2ae-5ed2-b378-32dc7cc3df56","series":"WebRTC 이론부터 실전까지","lang":"ko","translation":"/Implementing-WebRTC-using-ReactJS-and-Typescript-1-N-P2P/"}},"staticQueryHashes":["2083168511","3061319093","3557473807","356676075"],"slicesMap":{}}