{"componentChunkName":"component---src-components-post-post-template-tsx","path":"/WebRTC-Performance-Comparison-P2P-vs-SFU/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"1-introduction\" style=\"position:relative;\"><a href=\"#1-introduction\" aria-label=\"1 introduction permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Introduction</h2>\n<p>With the last posting, we finished implementing the 1:N video conferencing WebRTC of P2P(Mesh) and SFU methods. The last part of the implementation was always a performance test, so I did a simple performance test. Please understand that the independent space between the server and the client would have been good for the test, but it was impossible under the circumstances.</p>\n<h2 id=\"2-performance-test\" style=\"position:relative;\"><a href=\"#2-performance-test\" aria-label=\"2 performance test permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Performance Test</h2>\n<h3 id=\"2-1-devices\" style=\"position:relative;\"><a href=\"#2-1-devices\" aria-label=\"2 1 devices permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2-1. Devices</h3>\n<table>\n<thead>\n<tr>\n<th align=\"center\">device</th>\n<th align=\"center\">description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">CPU</td>\n<td align=\"center\">AMD Ryzen 5 3600 6-Core Processor 3.59GHz</td>\n</tr>\n<tr>\n<td align=\"center\">RAM</td>\n<td align=\"center\">32GB</td>\n</tr>\n<tr>\n<td align=\"center\">GPU</td>\n<td align=\"center\">NVIDIA GeForce RTX 2060 SUPER</td>\n</tr>\n<tr>\n<td align=\"center\">OS</td>\n<td align=\"center\">Windows 10 Pro</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"2-2-settings\" style=\"position:relative;\"><a href=\"#2-2-settings\" aria-label=\"2 2 settings permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2-2. Settings</h3>\n<ul>\n<li><strong>All clients and servers ran on one device.</strong></li>\n<li>The 1:N method described above is based on general video conferencing.</li>\n</ul>\n<h3 id=\"2-3-client-side-performancechrome-browser-cpu-usage\" style=\"position:relative;\"><a href=\"#2-3-client-side-performancechrome-browser-cpu-usage\" aria-label=\"2 3 client side performancechrome browser cpu usage permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2-3. Client Side Performance(Chrome browser CPU usage)</h3>\n<ul>\n<li>The CPU share was based on Chrome browser because all clients ran on one device.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">the number of users</th>\n<th align=\"center\">P2P/Mesh(Signaling Server)</th>\n<th align=\"center\">SFU(Media Server)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">2</td>\n<td align=\"center\">4%</td>\n<td align=\"center\">5%</td>\n</tr>\n<tr>\n<td align=\"center\">3</td>\n<td align=\"center\">10%</td>\n<td align=\"center\">8%</td>\n</tr>\n<tr>\n<td align=\"center\">4</td>\n<td align=\"center\">22%</td>\n<td align=\"center\">9.5%</td>\n</tr>\n<tr>\n<td align=\"center\">5</td>\n<td align=\"center\">34%</td>\n<td align=\"center\">18%</td>\n</tr>\n<tr>\n<td align=\"center\">6</td>\n<td align=\"center\">47%</td>\n<td align=\"center\">25%</td>\n</tr>\n<tr>\n<td align=\"center\">7</td>\n<td align=\"center\">64%</td>\n<td align=\"center\">30%</td>\n</tr>\n<tr>\n<td align=\"center\">8</td>\n<td align=\"center\">80%</td>\n<td align=\"center\">30%</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"2-4-server-side-performancecpu-usage\" style=\"position:relative;\"><a href=\"#2-4-server-side-performancecpu-usage\" aria-label=\"2 4 server side performancecpu usage permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2-4. Server Side Performance(CPU usage)</h3>\n<ul>\n<li>Since server was implemented as node.js, the CPU share was based on the Node.js process.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">the number of users</th>\n<th align=\"center\">P2P/Mesh(Signaling Server)</th>\n<th align=\"center\">SFU(Media Server)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">2</td>\n<td align=\"center\">0.1%</td>\n<td align=\"center\">2%</td>\n</tr>\n<tr>\n<td align=\"center\">3</td>\n<td align=\"center\">0.1%</td>\n<td align=\"center\">13%</td>\n</tr>\n<tr>\n<td align=\"center\">4</td>\n<td align=\"center\">0.1%</td>\n<td align=\"center\">24%</td>\n</tr>\n<tr>\n<td align=\"center\">5</td>\n<td align=\"center\">0.1%</td>\n<td align=\"center\">32%</td>\n</tr>\n<tr>\n<td align=\"center\">6</td>\n<td align=\"center\">0.1%</td>\n<td align=\"center\">41%</td>\n</tr>\n<tr>\n<td align=\"center\">7</td>\n<td align=\"center\">0.1%</td>\n<td align=\"center\">48%</td>\n</tr>\n<tr>\n<td align=\"center\">8</td>\n<td align=\"center\">0.1%</td>\n<td align=\"center\">50%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"3-results\" style=\"position:relative;\"><a href=\"#3-results\" aria-label=\"3 results permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Results</h2>\n<h3 id=\"3-1-sfu-servermedia-server\" style=\"position:relative;\"><a href=\"#3-1-sfu-servermedia-server\" aria-label=\"3 1 sfu servermedia server permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3-1. SFU Server(Media Server)</h3>\n<ul>\n<li>Real-time performance in several videos has decreased dramatically since the number of clients reached six.</li>\n<li>When there were more than seven clients, some images were stopped for a few seconds.</li>\n<li>Server Side had a very high CPU share compared to Signaling Server.</li>\n<li>Client Side had a CPU share of about half compared to Signaling Server, which clearly showed a reduced load on the Client side.</li>\n</ul>\n<h3 id=\"3-2-signaling-server-p2pmesh\" style=\"position:relative;\"><a href=\"#3-2-signaling-server-p2pmesh\" aria-label=\"3 2 signaling server p2pmesh permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3-2. Signaling Server (P2P/Mesh)</h3>\n<ul>\n<li>As the client increased, delay and real-timeness decreased slightly in the images, but the images did not stop.</li>\n<li>Server Side's CPU share remained at 0.1% regardless of the increase in the client.</li>\n<li>Client Side's CPU share increased significantly as the client increased.</li>\n</ul>\n<h2 id=\"github\" style=\"position:relative;\"><a href=\"#github\" aria-label=\"github permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[GitHub]</h2>\n<ul>\n<li><a href=\"https://github.com/millo-L/Typescript-ReactJS-WebRTC-1-N-P2P\">1:N P2P WebRTC</a></li>\n<li><a href=\"https://github.com/millo-L/Typescript-ReactJS-WebRTC-1-N-SFU\">1:N SFU WebRTC</a></li>\n</ul>\n<h2 id=\"references\" style=\"position:relative;\"><a href=\"#references\" aria-label=\"references permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[References]</h2>\n<ul>\n<li><a href=\"https://millo-l.github.io/Implementing-WebRTC-using-ReactJS-and-Typescript(1-N-P2P)/\">1:N P2P WebRTC</a></li>\n<li><a href=\"https://millo-l.github.io/Implementing-WebRTC-using-ReactJS-and-Typescript(1-N-SFU)/\">1:N SFU WebRTC</a></li>\n<li><a href=\"https://millo-l.github.io/WebRTC-implementation-method(Mesh-SFU-MCU)/\">WebRTC implementation method(Mesh, SFU, MCU)</a></li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#1-introduction\">1. Introduction</a></p>\n</li>\n<li>\n<p><a href=\"#2-performance-test\">2. Performance Test</a></p>\n<ul>\n<li><a href=\"#2-1-devices\">2-1. Devices</a></li>\n<li><a href=\"#2-2-settings\">2-2. Settings</a></li>\n<li><a href=\"#2-3-client-side-performancechrome-browser-cpu-usage\">2-3. Client Side Performance(Chrome browser CPU usage)</a></li>\n<li><a href=\"#2-4-server-side-performancecpu-usage\">2-4. Server Side Performance(CPU usage)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#3-results\">3. Results</a></p>\n<ul>\n<li><a href=\"#3-1-sfu-servermedia-server\">3-1. SFU Server(Media Server)</a></li>\n<li><a href=\"#3-2-signaling-server-p2pmesh\">3-2. Signaling Server (P2P/Mesh)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#github\">[GitHub]</a></p>\n</li>\n<li>\n<p><a href=\"#references\">[References]</a></p>\n</li>\n</ul>","frontmatter":{"author":"millo","category":"webrtc","description":"Let's compare 1:NP2P vs SFU performance based on WebRTC's theory.","image":{"childImageSharp":{"fixed":{"src":"/static/5d1a4dc7a92facc014378e28932bee9a/497c6/webrtc.png"}}},"lang":"en","released_at":"2021-03-05 15:30","series":"WebRTC theory to practice","tags":["WebRTC","SFU","Mesh","P2P","Media Server","Signaling Server"],"title":"WebRTC Performance Comparison (P2P vs SFU)","translation":"/WebRTC-성능비교-P2P-vs-SFU/","updated_at":null},"fields":{"slug":"/WebRTC-Performance-Comparison-P2P-vs-SFU/"}},"allMarkdownRemark":{"nodes":[{"frontmatter":{"lang":"en","title":"About WebRTC"},"fields":{"slug":"/About-WebRTC/"}},{"frontmatter":{"lang":"en","title":"WebRTC implementation method(Mesh, SFU, MCU)"},"fields":{"slug":"/WebRTC-implementation-method-Mesh-SFU-MCU/"}},{"frontmatter":{"lang":"en","title":"Implementing WebRTC using ReactJS and Typescript (1:1 P2P)"},"fields":{"slug":"/Implementing-WebRTC-using-ReactJS-and-Typescript-1-1-P2P/"}},{"frontmatter":{"lang":"en","title":"Implementing WebRTC using ReactJS and Typescript (1:N P2P)"},"fields":{"slug":"/Implementing-WebRTC-using-ReactJS-and-Typescript-1-N-P2P/"}},{"frontmatter":{"lang":"en","title":"Implementing WebRTC using ReactJS and Typescript (1:N SFU)"},"fields":{"slug":"/Implementing-WebRTC-using-ReactJS-and-Typescript-1-N-SFU/"}},{"frontmatter":{"lang":"en","title":"WebRTC Performance Comparison (P2P vs SFU)"},"fields":{"slug":"/WebRTC-Performance-Comparison-P2P-vs-SFU/"}}]}},"pageContext":{"slug":"/WebRTC-Performance-Comparison-P2P-vs-SFU/","series":"WebRTC theory to practice"}},"staticQueryHashes":["2083168511","3061319093","3557473807","356676075"],"slicesMap":{}}