{"componentChunkName":"component---src-components-post-post-template-tsx","path":"/ReactNative-Firebase-2023-05-25-en/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"1-introduction\" style=\"position:relative;\"><a href=\"#1-introduction\" aria-label=\"1 introduction permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Introduction</h2>\n<p>I write this article to summarize how I solved the issue that occurred while setting react-native-firebase to the latest version.</p>\n<h2 id=\"2-installation\" style=\"position:relative;\"><a href=\"#2-installation\" aria-label=\"2 installation permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Installation</h2>\n<p>You can proceed with the installation method as shown on <a href=\"https://rnfirebase.io/\">the official site</a>.</p>\n<h3 id=\"-wait-version-info\" style=\"position:relative;\"><a href=\"#-wait-version-info\" aria-label=\" wait version info permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[👋 Wait] Version Info</h3>\n<blockquote>\n<p>react-native 0.71.8 <br />\n@react-native-firebase/app 17.5.0 <br /></p>\n</blockquote>\n<h2 id=\"3-solution\" style=\"position:relative;\"><a href=\"#3-solution\" aria-label=\"3 solution permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Solution</h2>\n<p>According to <a href=\"https://rnfirebase.io/\">the official site</a>, beginning with firebase-ios-sdk v9+ (react-native-firebase v15+) you must tell CocoaPods to use frameworks.\nStrangely, however, errors continue to occur even if you do what the official site tells you to do.</p>\n<p>The solution is to add the following code to the <code class=\"language-text\">ios/Podfile</code> file.</p>\n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-diff line-numbers\"><code class=\"language-diff\">## Podfile\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span> \n</span>## ...\n\ntarget '{your project name}' do\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span> config = use_native_modules!\n</span>\n<span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span>  ## firebase\n<span class=\"token prefix inserted\">+</span>  use_frameworks! :linkage => :static\n<span class=\"token prefix inserted\">+</span>  $RNFirebaseAsStaticFramework = true\n</span>\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span> ## Flags change depending on the env values.\n<span class=\"token prefix unchanged\"> </span> flags = get_default_flags()\n</span>\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span> use_react_native!(\n<span class=\"token prefix unchanged\"> </span>   :path => config[:reactNativePath],\n<span class=\"token prefix unchanged\"> </span>   ## Hermes is now enabled by default. Disable by setting this flag to false.\n<span class=\"token prefix unchanged\"> </span>   ## Upcoming versions of React Native may rely on get_default_flags(), but\n<span class=\"token prefix unchanged\"> </span>   ## we make it explicit here to aid in the React Native upgrade process.\n<span class=\"token prefix unchanged\"> </span>   :hermes_enabled => flags[:hermes_enabled],\n<span class=\"token prefix unchanged\"> </span>   :fabric_enabled => flags[:fabric_enabled],\n<span class=\"token prefix unchanged\"> </span>   ## Enables Flipper.\n<span class=\"token prefix unchanged\"> </span>   #\n<span class=\"token prefix unchanged\"> </span>   ## Note that if you have use_frameworks! enabled, Flipper will not work and\n<span class=\"token prefix unchanged\"> </span>   ## you should disable the next line.\n</span><span class=\"token deleted-sign deleted\"><span class=\"token prefix deleted\">-</span>    :flipper_configuration => flipper_config,\n</span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span>    :flipper_configuration => FlipperConfiguration.disabled, ## firebase\n</span><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>   ## An absolute path to your application rosot.\n<span class=\"token prefix unchanged\"> </span>   :app_path => \"#{Pod::Config.instance.installation_root}/..\"\n<span class=\"token prefix unchanged\"> </span> )\n</span>\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span> target '{your project name}Tests' do\n<span class=\"token prefix unchanged\"> </span>   inherit! :complete\n<span class=\"token prefix unchanged\"> </span>   ## Pods for testing\n<span class=\"token prefix unchanged\"> </span> end\n</span>\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span> post_install do |installer|\n<span class=\"token prefix unchanged\"> </span>   react_native_post_install(\n<span class=\"token prefix unchanged\"> </span>     installer,\n<span class=\"token prefix unchanged\"> </span>     ## Set `mac_catalyst_enabled` to `true` in order to apply patches\n<span class=\"token prefix unchanged\"> </span>     ## necessary for Mac Catalyst builds\n<span class=\"token prefix unchanged\"> </span>     :mac_catalyst_enabled => false\n<span class=\"token prefix unchanged\"> </span>   )\n<span class=\"token prefix unchanged\"> </span>   __apply_Xcode_12_5_M1_post_install_workaround(installer)\n</span>\n<span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span>    ## for Firebase (all below)\n<span class=\"token prefix inserted\">+</span>    installer.pods_project.targets.each do |target|\n<span class=\"token prefix inserted\">+</span>      target.build_configurations.each do |config|\n<span class=\"token prefix inserted\">+</span>        config.build_settings[\"GCC_WARN_INHIBIT_ALL_WARNINGS\"] = \"YES\"\n<span class=\"token prefix inserted\">+</span>      end\n<span class=\"token prefix inserted\">+</span>    end\n</span>\n<span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span>    installer.pods_project.targets.each do |target|\n<span class=\"token prefix inserted\">+</span>      target.build_configurations.each do |config|\n<span class=\"token prefix inserted\">+</span>        config.build_settings[\"CC\"] = \"clang\"\n<span class=\"token prefix inserted\">+</span>        config.build_settings[\"LD\"] = \"clang\"\n<span class=\"token prefix inserted\">+</span>        config.build_settings[\"CXX\"] = \"clang++\"\n<span class=\"token prefix inserted\">+</span>        config.build_settings[\"LDPLUSPLUS\"] = \"clang++\"\n<span class=\"token prefix inserted\">+</span>      end\n<span class=\"token prefix inserted\">+</span>    end\n</span>\n<span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span>    installer.aggregate_targets.each do |aggregate_target|\n<span class=\"token prefix inserted\">+</span>      aggregate_target.user_project.native_targets.each do |target|\n<span class=\"token prefix inserted\">+</span>        target.build_configurations.each do |config|\n<span class=\"token prefix inserted\">+</span>          config.build_settings['ONLY_ACTIVE_ARCH'] = 'YES'\n<span class=\"token prefix inserted\">+</span>          config.build_settings['EXCLUDED_ARCHS'] = 'i386'\n<span class=\"token prefix inserted\">+</span>        end\n<span class=\"token prefix inserted\">+</span>      end\n<span class=\"token prefix inserted\">+</span>      aggregate_target.user_project.save\n<span class=\"token prefix inserted\">+</span>    end\n</span>\n<span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span>    installer.pods_project.targets.each do |target|\n<span class=\"token prefix inserted\">+</span>      if (target.name.eql?('FBReactNativeSpec'))\n<span class=\"token prefix inserted\">+</span>        target.build_phases.each do |build_phase|\n<span class=\"token prefix inserted\">+</span>          if (build_phase.respond_to?(:name) &amp;&amp; build_phase.name.eql?('[CP-User] Generate Specs'))\n<span class=\"token prefix inserted\">+</span>            target.build_phases.move(build_phase, 0)\n<span class=\"token prefix inserted\">+</span>          end\n<span class=\"token prefix inserted\">+</span>        end\n<span class=\"token prefix inserted\">+</span>      end\n<span class=\"token prefix inserted\">+</span>    end\n</span>\n<span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span>    installer.pods_project.targets.each do |target|\n<span class=\"token prefix inserted\">+</span>      target.build_configurations.each do |config|\n<span class=\"token prefix inserted\">+</span>        config.build_settings[\"ENABLE_BITCODE\"] = \"NO\"\n<span class=\"token prefix inserted\">+</span>      end\n<span class=\"token prefix inserted\">+</span>    end\n</span><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span> end\n</span>end\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#1-introduction\">1. Introduction</a></p>\n</li>\n<li>\n<p><a href=\"#2-installation\">2. Installation</a></p>\n<ul>\n<li><a href=\"#-wait-version-info\">[👋 Wait] Version Info</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#3-solution\">3. Solution</a></p>\n</li>\n</ul>","frontmatter":{"author":"millo","category":"reactnative","description":"Solving react-native-firebase pod install issue.","image":{"childImageSharp":{"fixed":{"src":"/static/41ace13b6768be6622e6257e9bb0a52f/497c6/reactnative.png"}}},"lang":"en","released_at":"2023-05-25 15:30","series":"none","tags":["ReactNative","Firebase","@react-native-firebase"],"title":"[React Native] Install @react-native-firebase (solve pod install issue)","translation":"/ReactNative-Firebase-2023-05-25/","updated_at":null},"fields":{"slug":"/ReactNative-Firebase-2023-05-25-en/"}},"allMarkdownRemark":{"nodes":[{"frontmatter":{"lang":"ko","title":"[Docker] docker-compose (node.js, mysql) 실행 순서 동기화"},"fields":{"slug":"/docker-compose-nodejs-mysql-실행-순서-동기화/"}},{"frontmatter":{"lang":"ko","title":"[JavaScript] Callback 지옥 벗어나기"},"fields":{"slug":"/JavaScript-Callback-지옥-벗어나기/"}},{"frontmatter":{"lang":"ko","title":"[Docker] Jenkins in Docker(Ubuntu18.04)"},"fields":{"slug":"/Jenkins-in-Docker-Ubuntu1804/"}},{"frontmatter":{"lang":"ko","title":"[Go] 구조체를 Class처럼 사용하기"},"fields":{"slug":"/Go언어에서-구조체를-Class처럼-사용하기/"}},{"frontmatter":{"lang":"ko","title":"[Raspberry pi] OpenCV4 설치하기"},"fields":{"slug":"/Raspberry-pi에-OpenCV4-설치하기/"}},{"frontmatter":{"lang":"ko","title":"[Python] 간단한 Anaconda 가상 환경 관리하기"},"fields":{"slug":"/Python-간단한-Anaconda-가상-환경-관리하기/"}},{"frontmatter":{"lang":"ko","title":"[Python] TCP image socket 구현하기(Server, Client)"},"fields":{"slug":"/Python-TCP-image-socket-구현하기-Server-Client/"}},{"frontmatter":{"lang":"ko","title":"[Node.js] express 사용하기"},"fields":{"slug":"/Nodejs-express-사용하기/"}},{"frontmatter":{"lang":"ko","title":"[Node.js] express router 사용하기"},"fields":{"slug":"/Nodejs-express-router-사용하기/"}},{"frontmatter":{"lang":"ko","title":"[Raspberry pi] 부팅 시 프로그램 자동 실행하기"},"fields":{"slug":"/Raspberry-pi-부팅시-프로그램-자동-실행하기/"}},{"frontmatter":{"lang":"ko","title":"[Node.js] moment 사용하기"},"fields":{"slug":"/Nodejs-moment-사용하기/"}},{"frontmatter":{"lang":"ko","title":"[Docker] Ubuntu:18.04에서 Docker 설치하기"},"fields":{"slug":"/Ubuntu-1804에서-Docker-설치하기/"}},{"frontmatter":{"lang":"ko","title":"[NGINX] Ubuntu:18.04에서 letsencrypt HTTPS 환경 구축하기"},"fields":{"slug":"/Ubuntu-1804에서-letsencrypt-HTTPS-환경구축/"}},{"frontmatter":{"lang":"ko","title":"[Node.js] nodemailer 사용하기"},"fields":{"slug":"/Nodejs-nodemailer-사용하기/"}},{"frontmatter":{"lang":"ko","title":"[Node.js] mysql을 async/await로 처리하기"},"fields":{"slug":"/Nodejs-mysql을-async-awiat로-처리하기/"}},{"frontmatter":{"lang":"ko","title":"[Node.js] express cors 사용하기"},"fields":{"slug":"/Nodejs-express-cors-사용하기/"}},{"frontmatter":{"lang":"ko","title":"[Node.js] express static folder 지정하기"},"fields":{"slug":"/Nodejs-express-static-folder-지정하기/"}},{"frontmatter":{"lang":"ko","title":"[JavaScript] Date 객체 사용하기"},"fields":{"slug":"/JavaScript-Date-객체-사용하기/"}},{"frontmatter":{"lang":"ko","title":"[Docker] ReactJS Dockerizing하기"},"fields":{"slug":"/React-Dockerizing하기/"}},{"frontmatter":{"lang":"ko","title":"[React Native] 배경 이미지 크기 자동으로 맞추기"},"fields":{"slug":"/ReactNative-배경-이미지-크기-자동으로-맞추기/"}},{"frontmatter":{"lang":"ko","title":"[React Native] 커스텀 로딩 애니메이션 스크린 구현하기"},"fields":{"slug":"/ReactNative-커스텀-로딩-애니메이션-스크린-구현하기/"}},{"frontmatter":{"lang":"ko","title":"[Node.js] Socket.io 간단한 채팅 구현하기"},"fields":{"slug":"/Nodejs-socketio-간단한-채팅-구현하기/"}},{"frontmatter":{"lang":"ko","title":"[Python] Ubuntu:18.04 에서 jupyter notebook 사용하기"},"fields":{"slug":"/Python-Ubuntu1804에서-jupyter-notebook-사용하기/"}},{"frontmatter":{"lang":"ko","title":"[Network] HTTP 상태(응답) 코드 정리하기"},"fields":{"slug":"/HTTP-상태코드-정리하기/"}},{"frontmatter":{"lang":"ko","title":"[Network] SOAP 정리하기"},"fields":{"slug":"/SOAP-정리하기/"}},{"frontmatter":{"lang":"ko","title":"[Node.js] slack 연동하기(알림봇 구현)"},"fields":{"slug":"/Nodejs-slack-연동하기-알림봇구현/"}},{"frontmatter":{"lang":"ko","title":"[React Native] Dimensions.get('window')와 Dimensions.get('screen')의 차이점"},"fields":{"slug":"/ReactNative-Dimensions-get-window와-Dimentsions-get-screen의-차이점/"}},{"frontmatter":{"lang":"ko","title":"[React Native] Bottom tab bar 특정 화면에서 안 보이게 설정하기"},"fields":{"slug":"/ReactNative-Bottom-tab-bar-특정-화면에서-안-보이게-설정하기/"}},{"frontmatter":{"lang":"ko","title":"[React Native] 특정 화면에서 화면 고정하기"},"fields":{"slug":"/ReactNative-특정-화면에서-화면-고정하기/"}},{"frontmatter":{"lang":"ko","title":"[Node.js] PBKDF2 비밀번호 암호화하기"},"fields":{"slug":"/Nodejs-PBKDF2-비밀번호-암호화하기/"}},{"frontmatter":{"lang":"ko","title":"[Network] HTTP란 무엇인가"},"fields":{"slug":"/HTTP란-무엇인가/"}},{"frontmatter":{"lang":"ko","title":"[Network] URI와 URL의 차이점"},"fields":{"slug":"/URI와-URL의-차이점/"}},{"frontmatter":{"lang":"ko","title":"[Gatsby] document is not defined build error 해결 방법"},"fields":{"slug":"/Gatsby-build-error-document-is-not-defined-해결방법/"}},{"frontmatter":{"lang":"en","title":"[Gatsby] Troubleshooting document is not defined build error"},"fields":{"slug":"/Troubleshooting-Gatsby-build-error-document-is-not-defined/"}},{"frontmatter":{"lang":"ko","title":"[Typescript] mongoose methods, statics 사용하기"},"fields":{"slug":"/Typescript-mongodb-method-statics-사용하기/"}},{"frontmatter":{"lang":"en","title":"[Typescript] mongoose methods, statics"},"fields":{"slug":"/Typescript-mongoose-methods-statics/"}},{"frontmatter":{"lang":"en","title":"[Network] Differences between URI and URL"},"fields":{"slug":"/Difference-between-URI-and-URL/"}},{"frontmatter":{"lang":"en","title":"[Docker] Synchronize docker-compose (node.js, mysql) execution order"},"fields":{"slug":"/Synchronize-docker-compose-nodejs-mysql-execution-order/"}},{"frontmatter":{"lang":"en","title":"[JavaScript] Get out of Callback hell"},"fields":{"slug":"/JavaScript-Get-out-of-Callback-hell/"}},{"frontmatter":{"lang":"en","title":"[Docker] Jenkins in Docker(Ubuntu18.04)"},"fields":{"slug":"/jenkins-in-docker-ubuntu/"}},{"frontmatter":{"lang":"en","title":"[Go] Using Struct as Class"},"fields":{"slug":"/Using-struct-as-class-in-golang/"}},{"frontmatter":{"lang":"en","title":"Install Opencv 4 on Raspberry Pi 4"},"fields":{"slug":"/Install-Opencv-4-on-Raspberry-Pi-4/"}},{"frontmatter":{"lang":"en","title":"[Python] Manage simple Anaconda virtual environments기"},"fields":{"slug":"/Python-Manage-simple-Anaconda-virtual-environments/"}},{"frontmatter":{"lang":"en","title":"[Python] Implementing TCP image socket(Server, Client)"},"fields":{"slug":"/Python-Implementing TCP image socket-Server-Client/"}},{"frontmatter":{"lang":"en","title":"[Node.js] Use express"},"fields":{"slug":"/Nodejs-use-expressjs/"}},{"frontmatter":{"lang":"ko","title":"스타트업 코딩 페스티벌 2021 1차, 2차 후기"},"fields":{"slug":"/scope-2021/"}},{"frontmatter":{"lang":"ko","title":"[React Native] 다른 앱(play store, instagram 등) 열기"},"fields":{"slug":"/ReactNative-link-other-app/"}},{"frontmatter":{"lang":"ko","title":"[React Native] Firebase Analytics(@react-native-firebase/analytics) 적용하기"},"fields":{"slug":"/ReactNative-Firebase-Analytics-Setting/"}},{"frontmatter":{"lang":"ko","title":"[React Native] Facebook SDK(react-native-fbsdk) 적용하기"},"fields":{"slug":"/ReactNative-facebook-sdk-setting/"}},{"frontmatter":{"lang":"ko","title":"[React Native] ld: symbol(s) not found for architecture x86_64 해결방법"},"fields":{"slug":"/ReactNative-ld-symbols-not-found-error/"}},{"frontmatter":{"lang":"ko","title":"[Android] Debug 버전으로는 실행되는 데 Release Crash 나는 경우"},"fields":{"slug":"/Android-release-error/"}},{"frontmatter":{"lang":"ko","title":"[React Native] CodePush를 이용한 앱 업데이트"},"fields":{"slug":"/ReactNative-codepush/"}},{"frontmatter":{"lang":"en","title":"[React Native] Troubleshooting ld: symbol(s) not found for architecture x86_64"},"fields":{"slug":"/ReactNative-ld-symbols-not-found-error-en/"}},{"frontmatter":{"lang":"en","title":"[Android] Runs with Debug version, but fails with Release version"},"fields":{"slug":"/Android-release-error-en/"}},{"frontmatter":{"lang":"ko","title":"[React Native] Kakao Link를 사용해서 Deep link를 구현해보자."},"fields":{"slug":"/ReactNative-kakao-deep-link/"}},{"frontmatter":{"lang":"ko","title":"[React Native] @react-native-firebase 적용하기 (pod install 에러 해결)"},"fields":{"slug":"/ReactNative-Firebase-2023-05-25/"}},{"frontmatter":{"lang":"en","title":"[React Native] Install @react-native-firebase (solve pod install issue)"},"fields":{"slug":"/ReactNative-Firebase-2023-05-25-en/"}},{"frontmatter":{"lang":"en","title":"[React Native] Solving realm one-to-many relationship issue"},"fields":{"slug":"/reactnative-realm-one-to-many-relationship-2023-05-26-en/"}},{"frontmatter":{"lang":"ko","title":"[React Native] realm one-to-many relationship 적용하기"},"fields":{"slug":"/reactnative-realm-one-to-many-relationship-2023-05-26/"}}]}},"pageContext":{"slug":"/ReactNative-Firebase-2023-05-25-en/","series":"none"}},"staticQueryHashes":["2083168511","3061319093","3557473807","356676075"],"slicesMap":{}}