{"version":3,"file":"component---src-pages-en-index-tsx-49c2d8286a64ae84e0d1.js","mappings":"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","sources":["webpack://millo-s-tech-blog/./src/components/SEO.tsx","webpack://millo-s-tech-blog/./src/components/post/PostCard.tsx","webpack://millo-s-tech-blog/./src/components/post/PostCardGrid.tsx","webpack://millo-s-tech-blog/./src/components/post/PostList.tsx","webpack://millo-s-tech-blog/./src/libs/list/reshape.ts","webpack://millo-s-tech-blog/./src/pages/en/index.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\ninterface Props {\n\ttitle?: string;\n\tdescription?: string;\n\tpathname?: string;\n\tcreated_at?: string;\n\tupdated_at?: string;\n\timage?: string;\n\tchildren?: any;\n}\n\ntype QueryType = {\n\tsite: {\n\t\tsiteMetadata: {\n\t\t\tauthor: string;\n\t\t\tdescription: string;\n\t\t\tsiteUrl: string;\n\t\t\ttitle: string;\n\t\t};\n\t};\n};\n\nexport default function SEO({\n\ttitle,\n\tdescription,\n\tpathname,\n\tcreated_at,\n\tupdated_at,\n\timage,\n\tchildren,\n}: Props) {\n\tconst { site } = useStaticQuery<QueryType>(graphql`\n\t\t{\n\t\t\tsite {\n\t\t\t\tsiteMetadata {\n\t\t\t\t\tauthor\n\t\t\t\t\tdescription\n\t\t\t\t\tsiteUrl\n\t\t\t\t\ttitle\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`);\n\n\tconst seo = {\n\t\tauthor: site.siteMetadata.author,\n\t\ttitle: title ? `${title} | ${site.siteMetadata.title}` : site.siteMetadata.title,\n\t\tdescription: description || site.siteMetadata.description,\n\t\timage: `${site.siteMetadata.siteUrl}${image || \"/icon.png\"}`,\n\t\turl: `${site.siteMetadata.siteUrl}${pathname || \"\"}`,\n\t};\n\n\tuseEffect(() => {\n\t\tconsole.log(`siteUrl: ${site.siteMetadata.siteUrl}`);\n\t}, [site.siteMetadata.siteUrl]);\n\n\treturn (\n\t\t<>\n\t\t\t<title>{seo.title}</title>\n\t\t\t<meta name=\"description\" content={seo.description} />\n\t\t\t<meta name=\"twitter:url\" content={seo.url} />\n\t\t\t<meta name=\"twitter:title\" content={seo.title} />\n\t\t\t<meta name=\"twitter:url\" content={seo.url} />\n\t\t\t<meta name=\"twitter:description\" content={seo.description} />\n\t\t\t<meta name=\"twitter:card\" content=\"summary\" />\n\t\t\t<meta property=\"twitter:image\" content={seo.image} />\n\t\t\t<meta property=\"og:type\" content=\"website\" />\n\t\t\t<meta property=\"og:title\" content={seo.title} />\n\t\t\t<meta property=\"og:description\" content={seo.description} />\n\t\t\t<meta property=\"og:site_name\" content={seo.title} />\n\t\t\t<meta property=\"og:image\" content={seo.image} />\n\t\t\t<meta name=\"robots\" content=\"index,follow\" />\n\t\t\t<link rel=\"apple-touch-icon\" href=\"/favicon.ico\" />\n\t\t\t{created_at !== undefined && (\n\t\t\t\t<script type=\"application/ld+json\">\n\t\t\t\t\t{JSON.stringify({\n\t\t\t\t\t\t\"@context\": \"http://schema.org\",\n\t\t\t\t\t\t\"@type\": \"BlogPosting\",\n\t\t\t\t\t\tauthor: {\n\t\t\t\t\t\t\t\"@type\": \"Person\",\n\t\t\t\t\t\t\tname: seo.author,\n\t\t\t\t\t\t\tlogo: null,\n\t\t\t\t\t\t},\n\t\t\t\t\t\turl: seo.url,\n\t\t\t\t\t\theadline: seo.title,\n\t\t\t\t\t\tdescription: seo.description,\n\t\t\t\t\t\tdatePublished: created_at,\n\t\t\t\t\t\tdateModified: updated_at || created_at,\n\t\t\t\t\t\timage: seo.image,\n\t\t\t\t\t})}\n\t\t\t\t</script>\n\t\t\t)}\n\t\t\t<meta\n\t\t\t\tname=\"google-site-verification\"\n\t\t\t\tcontent=\"3RV-iVIsB1icAg20Pkdf-2uSR7XMnOYS2FxfhQ3YCD8\"\n\t\t\t/>\n\t\t\t<meta\n\t\t\t\tname=\"naver-site-verification\"\n\t\t\t\tcontent=\"3be60e4cdc653a5f4c68e0da86c7f8414891c370\"\n\t\t\t/>\n\t\t\t<script\n\t\t\t\tasync\n\t\t\t\tsrc=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3926462216067158\"\n\t\t\t\tcrossOrigin=\"anonymous\"\n\t\t\t/>\n\t\t\t{children}\n\t\t</>\n\t);\n}\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport styled, { css } from \"styled-components\";\nimport { mediaQuery } from \"../../libs/styles/media\";\nimport palette from \"../../libs/styles/palette\";\nimport { ellipsis, formatDate } from \"../../libs/styles/utils\";\nimport { PostType } from \"../../types/Common\";\n\nconst Container = styled(Link)`\n\twidth: 20rem;\n\tbackground: white;\n\tborder-radius: 4px;\n\tbox-shadow: 0 4px 16px 0 rgba(0, 0, 0, 0.04);\n\ttransition:\n\t\t0.25s box-shadow ease-in,\n\t\t0.25s transform ease-in;\n\tmargin: 1rem;\n\toverflow: hidden;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmax-height: 23rem;\n\t${mediaQuery(1919)} {\n\t\twidth: calc(33% - 1.8125rem);\n\t}\n\t${mediaQuery(1440)} {\n\t\twidth: calc(33% - 1.9rem);\n\t}\n\t${mediaQuery(1056)} {\n\t\twidth: calc(50% - 2rem);\n\t}\n\t${mediaQuery(767)} {\n\t\tmargin: 0;\n\t\twidth: 100%;\n\t\t& + & {\n\t\t\tmargin-top: 1rem;\n\t\t}\n\t}\n\t&:hover {\n\t\ttransform: translateY(-8px);\n\t\tbox-shadow: 0 12px 20px 0 rgba(0, 0, 0, 0.08);\n\t\t${mediaQuery(1024)} {\n\t\t\ttransform: none;\n\t\t}\n\t}\n\n\timg {\n\t\tmax-height: 195px;\n\t}\n`;\n\nconst ContentContainer = styled.div<{ $clamp: boolean }>`\n\tpadding: 1rem;\n\tdisplay: flex;\n\tflex: 1;\n\tflex-direction: column;\n\tbackground-color: white;\n\tz-index: 3;\n\th4 {\n\t\tfont-size: 1rem;\n\t\tmargin: 0;\n\t\tmargin-bottom: 0.25rem;\n\t\tline-height: 1.5;\n\t\tword-break: break-word;\n\t\t${ellipsis}\n\t\tcolor: ${palette.gray[9]};\n\t\t${mediaQuery(767)} {\n\t\t\twhite-space: initial;\n\t\t}\n\t}\n\t.description-wrapper {\n\t\tflex: 1;\n\t}\n\tp {\n\t\tmargin: 0;\n\t\tword-break: break-word;\n\t\toverflow-wrap: break-word;\n\t\tfont-size: 0.875rem;\n\t\tline-height: 1.5;\n\t\t${(props) =>\n\t\t\tprops.$clamp &&\n\t\t\tcss`\n\t\t\t\theight: 3.9375rem;\n\t\t\t\tdisplay: -webkit-box;\n\t\t\t\t-webkit-line-clamp: 3;\n\t\t\t\t-webkit-box-orient: vertical;\n\t\t\t\toverflow: hidden;\n\t\t\t\ttext-overflow: ellipsis;\n\t\t\t`}\n\n\t\tcolor: ${palette.gray[7]};\n\t\tmargin-bottom: 1.5rem;\n\t}\n\t.sub-info {\n\t\tfont-size: 0.75rem;\n\t\tline-height: 1.5;\n\t\tcolor: ${palette.gray[6]};\n\t}\n`;\n\ninterface Props {\n\tpost: PostType;\n}\n\nexport default function PostCard({ post }: Props) {\n\treturn (\n\t\t<Container to={`${post.path}`}>\n\t\t\t{post.image && <GatsbyImage image={post.image} alt={post.title} />}\n\t\t\t<ContentContainer $clamp={post.image === null}>\n\t\t\t\t<h4>{post.title}</h4>\n\t\t\t\t<div className=\"description-wrapper\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{post.description.replace(/&#x3A;/g, \":\")}\n\t\t\t\t\t\t{post.description.length === 150 && \"...\"}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"sub-info\">\n\t\t\t\t\t<span>{formatDate(post.released_at, post.lang)}</span>\n\t\t\t\t\t{post.updated_at && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{post.lang === \"ko\" ? \"수정: \" : \"Last edited at\"}{\" \"}\n\t\t\t\t\t\t\t\t{formatDate(post.updated_at, post.lang)}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</ContentContainer>\n\t\t</Container>\n\t);\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { mediaQuery } from \"../../libs/styles/media\";\nimport { PostType } from \"../../types/Common\";\nimport PostCard from \"./PostCard\";\n\nconst Container = styled.div`\n\tdisplay: flex;\n\tflex: 1;\n\tflex-wrap: wrap;\n\tmargin: 0 -1rem -1rem;\n\n\t${mediaQuery(767)} {\n\t\tmargin: 0.25rem;\n\t}\n`;\n\ninterface Props {\n\tposts: PostType[];\n}\n\nexport default function PostCardGrid({ posts }: Props) {\n\treturn (\n\t\t<Container>\n\t\t\t{posts.map((post) => (\n\t\t\t\t<PostCard key={post.path} post={post} />\n\t\t\t))}\n\t\t</Container>\n\t);\n}\n","import React, { useMemo } from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { reshapePost } from \"../../libs/list/reshape\";\nimport { PostListAllMarkdownRemark } from \"../../types/Common\";\nimport PostCardGrid from \"./PostCardGrid\";\n\ninterface Props {\n\tlang: string;\n\tcategory: string | null;\n}\n\ntype QueryType = {\n\tallMarkdownRemark: PostListAllMarkdownRemark | null;\n};\n\nexport default function PostList({ lang, category }: Props) {\n\tconst { allMarkdownRemark } = useStaticQuery<QueryType>(graphql`\n\t\t{\n\t\t\tallMarkdownRemark(\n\t\t\t\tfilter: { frontmatter: { is_private: { eq: false } } }\n\t\t\t\tsort: { frontmatter: { released_at: DESC } }\n\t\t\t) {\n\t\t\t\tnodes {\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tdescription\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\treleased_at\n\t\t\t\t\t\tupdated_at\n\t\t\t\t\t\tlang\n\t\t\t\t\t\tcategory\n\t\t\t\t\t\timage {\n\t\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\t\tgatsbyImageData(width: 320, quality: 100)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfields {\n\t\t\t\t\t\tslug\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`);\n\tconst posts = useMemo(\n\t\t() =>\n\t\t\treshapePost(allMarkdownRemark)\n\t\t\t\t.filter((post) => post.lang === lang)\n\t\t\t\t.filter((post) => (category ? post.category === category : true)),\n\t\t[allMarkdownRemark, category, lang],\n\t);\n\n\tif (!allMarkdownRemark) return null;\n\treturn <PostCardGrid posts={posts} />;\n}\n","import {\n\tPostListAllMarkdownRemark,\n\tPostType,\n\tSeriesListAllMarkdownRemark,\n\tSeriesType,\n} from \"../../types/Common\";\n\nexport const reshapePost = (allMarkdownRemark: PostListAllMarkdownRemark): PostType[] => {\n\tif (!allMarkdownRemark) return [];\n\n\treturn allMarkdownRemark.nodes.map((node) => ({\n\t\tpath: node.fields.slug,\n\t\ttitle: node.frontmatter.title,\n\t\tdescription: node.frontmatter.description,\n\t\treleased_at: node.frontmatter.released_at,\n\t\tupdated_at: node.frontmatter.updated_at || undefined,\n\t\timage: node.frontmatter.image\n\t\t\t? node.frontmatter.image.childImageSharp.gatsbyImageData\n\t\t\t: null,\n\t\tlang: node.frontmatter.lang,\n\t\tcategory: node.frontmatter.category,\n\t}));\n};\n\nexport const reshapeSeries = (allMarkdownRemark: SeriesListAllMarkdownRemark): SeriesType[] => {\n\tif (!allMarkdownRemark) return [];\n\n\treturn allMarkdownRemark.group.map((each) => ({\n\t\tpath: `/series/${each.fieldValue.replace(/ /gi, \"-\")}`,\n\t\ttitle: each.fieldValue,\n\t\timage: each.nodes[0].frontmatter.image\n\t\t\t? each.nodes[0].frontmatter.image.childImageSharp.gatsbyImageData\n\t\t\t: null,\n\t\treleased_at: each.nodes[0].frontmatter.released_at,\n\t\tupdated_at: each.nodes[0].frontmatter.updated_at || undefined,\n\t\tlang: each.nodes[0].frontmatter.lang,\n\t\ttotalCount: each.totalCount,\n\t}));\n};\n","import React, { useMemo } from \"react\";\nimport { PageProps } from \"gatsby\";\nimport SEO from \"../../components/SEO\";\nimport PostList from \"../../components/post/PostList\";\n\nexport default function HomePage({ location }: PageProps) {\n\tconst params = useMemo(() => new URLSearchParams(location.search), [location.search]);\n\tconst category = useMemo(() => params.get(\"category\"), [params]);\n\n\treturn <PostList lang=\"en\" category={category} />;\n}\n\nexport function Head() {\n\treturn <SEO title=\"Home\" />;\n}\n"],"names":["SEO","_ref","title","description","pathname","created_at","updated_at","image","children","site","useStaticQuery","seo","author","siteMetadata","siteUrl","url","useEffect","console","log","React","name","content","property","rel","href","undefined","type","JSON","stringify","logo","headline","datePublished","dateModified","async","src","crossOrigin","Container","styled","Link","withConfig","displayName","componentId","mediaQuery","ContentContainer","div","ellipsis","palette","gray","props","$clamp","css","PostCard","post","to","path","GatsbyImage","alt","className","replace","length","formatDate","released_at","lang","PostCardGrid","posts","map","key","PostList","category","allMarkdownRemark","useMemo","reshapePost","filter","nodes","node","fields","slug","frontmatter","childImageSharp","gatsbyImageData","reshapeSeries","group","each","fieldValue","totalCount","HomePage","location","params","URLSearchParams","search","get","Head"],"sourceRoot":""}