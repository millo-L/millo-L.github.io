{"version":3,"sources":["webpack:///./src/components/base/Footer.tsx","webpack:///./src/components/series/SeriesPost.tsx","webpack:///./src/components/series/SeriesPostList.tsx","webpack:///./src/components/series/SeriesPostListPage.tsx","webpack:///./src/pages/series.tsx"],"names":["FooterWrapper","Styled","div","palette","gray","Footer","className","Wrapper","mediaQuery","media","custom","Content","ellipsis","StyledLink","Link","SeriesPost","post","index","to","path","title","image","RatioImage","widthRatio","heightRatio","fluid","description","replace","length","formatDate","released_at","updated_at","memo","indigo","SeriesPostList","posts","series","console","log","map","key","SeriesPostListPage","order","location","useLocation","param","search","queryString","parse","name","data","useCallback","useStaticQuery","getSeriesPosts","allMarkdownRemark","reshapePost","Series","MainTemplate","Header","MainResponsive"],"mappings":"4FAAA,6DAKMA,EAAgBC,IAAOC,IAAV,4EAAGD,CAAH,6TAESE,IAAQC,KAAK,IAmC1BC,IATA,WACX,OACI,kBAACL,EAAD,KACI,mDACA,kBAAC,IAAD,CAAcM,UAAU,oB,2NC3B9BC,EAAUN,IAAOC,IAAV,sEAAGD,CAAH,wZAaHO,YAAW,MAQXC,IAAMC,OAAO,MAMSP,IAAQC,KAAK,IAKvCO,EAAUV,IAAOC,IAAV,sEAAGD,CAAH,4YAWHW,IACOT,IAAQC,KAAK,GACpBI,YAAW,KAaJL,IAAQC,KAAK,GAMbD,IAAQC,KAAK,IAKxBS,EAAaZ,YAAOa,KAAV,yEAAGb,CAAH,uDAWVc,EAAa,SAAC,GAAgC,IAA9BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,MACxB,OACI,kBAACV,EAAD,KACI,kBAACM,EAAD,CAAYK,GAAE,GAAKF,EAAKG,MACpB,4BAAKF,EAAQ,EAAb,KAAkBD,EAAKI,QAE1BJ,EAAKK,OACF,kBAACR,EAAD,CAAYK,GAAE,GAAKF,EAAKG,MACpB,kBAACG,EAAA,EAAD,CACIC,WAAY,EACZC,YAAa,EACbC,MAAOT,EAAKK,SAIxB,kBAACV,EAAD,KACI,kBAACE,EAAD,CAAYK,GAAE,GAAKF,EAAKG,MACpB,yBAAKb,UAAU,uBACX,2BACKU,EAAKU,YAAYC,QAAQ,UAAW,KACR,MAA5BX,EAAKU,YAAYE,QAAkB,SAIhD,kBAACf,EAAD,CAAYK,GAAE,GAAKF,EAAKG,MACpB,yBAAKb,UAAU,YACX,8BAAOuB,YAAWb,EAAKc,cACtBd,EAAKe,YACF,oCACI,6BACA,8BAAOF,YAAWb,EAAKe,YAAvB,cAUjBC,iBAAKjB,GC3HdR,EAAUN,IAAOC,IAAV,8EAAGD,CAAH,6VAQPO,YAAW,MAGXA,YAAW,MAGXA,YAAW,KAMkBL,IAAQC,KAAK,GAElCK,IAAMC,OAAO,MAMNP,IAAQ8B,OAAO,GACG9B,IAAQ8B,OAAO,GACxCxB,IAAMC,OAAO,MAEgBP,IAAQ8B,OAAO,IAWpDC,EAAiB,SAAC,GAA2C,IAAzCC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,OAE7B,OADAC,QAAQC,IAAIH,GAER,kBAAC,EAAD,KACI,yBAAK7B,UAAU,iBACX,mCACA,4BAAK8B,IAERD,EAAMI,KAAI,SAACvB,EAAMC,GAAP,OACP,kBAAC,EAAD,CAAYD,KAAMA,EAAMC,MAAOA,EAAOuB,IAAKvB,SAM5Ce,iBAAKE,GCtDdO,EAAqB,SAAC,GAAuC,EAArCC,MAAqC,IACzDC,EAAWC,wBACXC,EAAQF,EAASG,QAAUC,IAAYC,MAAML,EAASG,QAC5D,IAAKD,EAAMI,KAAM,OAAO,8BACxB,IAAIA,EAAgBJ,EAAMI,KAAgBtB,QAAQ,MAAO,KAsCnDuB,EApCiBC,uBAAY,WAE/B,GAAa,qBAATF,EACA,OAAOG,YAAe,gBA+B3B,CAACH,GAEcI,GAElB,IAAKH,EAAKI,kBAAmB,OAAO,8BA5C2B,IA6CvDA,EAAsBJ,EAAtBI,kBAER,OAAO,kBAAC,EAAD,CAAgBnB,MAAOoB,YAAYD,GAAoBlB,OAAQa,KAI3DjB,iBAAKS,G,YCtCLe,UAfA,WACX,IAAMb,EAAWC,wBACFD,EAASG,QAAUC,IAAYC,MAAML,EAASG,QAE7D,OACI,kBAACW,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACI,kBAAC,EAAD,CAAoBjB,MAAM,QAC1B,kBAACrC,EAAA,EAAD","file":"component---src-pages-series-tsx-6f533c7006779d3120e3.js","sourcesContent":["import React from 'react';\r\nimport Styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport ProfileIcons from '../common/ProfileIcons';\r\n\r\nconst FooterWrapper = Styled.div`\r\n    display: flex;\r\n    border-top: 1px solid ${palette.gray[5]};\r\n    margin-top: 5rem;\r\n    width: 100%;\r\n    height: 8rem;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n\r\n    span {\r\n        font-size: 1.5rem;\r\n    }\r\n\r\n    .icon-wrapper {\r\n        width: 9rem;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        flex-direction: row;\r\n        margin-top: 1rem;\r\n        svg {\r\n            width: 30%;\r\n            height: 1.5rem;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <FooterWrapper>\r\n            <span>millo's tech blog</span>\r\n            <ProfileIcons className=\"icon-wrapper\" />\r\n        </FooterWrapper>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { memo } from 'react';\r\nimport Styled, { css } from 'styled-components';\r\nimport Img from 'gatsby-image';\r\nimport media, { mediaQuery } from '../../lib/styles/media';\r\nimport { PartialPostType } from '../post/PostCard';\r\nimport { ellipsis, formatDate } from '../../lib/styles/utils';\r\nimport palette from '../../lib/styles/palette';\r\nimport RatioImage from '../common/RatioImage';\r\nimport { Link } from 'gatsby';\r\n\r\nconst Wrapper = Styled.div`\r\n    width: 100%;\r\n    background: white;\r\n    border-radius: 4px;\r\n    box-shadow: 0 4px 16px 0 rgba(0, 0, 0, 0.04);\r\n    transition: 0.25s box-shadow ease-in, 0.25s transform ease-in;\r\n    margin-top: 2rem;\r\n    overflow: hidden;\r\n    display: flex;\r\n    flex-direction: column;\r\n    &:hover {\r\n        transform: translateY(-8px);\r\n        box-shadow: 0 12px 20px 0 rgba(0, 0, 0, 0.08);\r\n        ${mediaQuery(1024)} {\r\n            transform: none;\r\n        }\r\n    }\r\n\r\n    h2 {\r\n        margin-left: 1rem;\r\n        margin-top: 1.5rem;\r\n        ${media.custom(1056)} {\r\n            font-size: 1.3rem;\r\n        }\r\n    }\r\n\r\n    img {\r\n        border-top: 1px solid ${palette.gray[2]};\r\n    }\r\n\r\n`\r\n\r\nconst Content = Styled.div`\r\n    padding: 1rem;\r\n    display: flex;\r\n    flex: 1;\r\n    flex-direction: column;\r\n    h4 {\r\n        font-size: 1rem;\r\n        margin: 0;\r\n        margin-bottom: 0.25rem;\r\n        line-height: 1.5;\r\n        word-break: break-word;\r\n        ${ellipsis}\r\n        color: ${palette.gray[9]};\r\n        ${mediaQuery(767)} {\r\n            white-space: initial;\r\n        }\r\n    }\r\n    .description-wrapper {\r\n        flex: 1;\r\n    }\r\n    p {\r\n        margin: 0;\r\n        word-break: break-word;\r\n        overflow-wrap: break-word;\r\n        font-size: 0.875rem;\r\n        line-height: 1.5;\r\n        color: ${palette.gray[7]};\r\n        margin-bottom: 1.5rem;\r\n    }\r\n    .sub-info {\r\n        font-size: 0.75rem;\r\n        line-height: 1.5;\r\n        color: ${palette.gray[6]};\r\n    }\r\n\r\n`\r\n\r\nconst StyledLink = Styled(Link)`\r\n    display: block;\r\n    color: inherit;\r\n    text-decoration: none;\r\n`\r\n\r\ninterface SeriesPost {\r\n    post: PartialPostType;\r\n    index: number;\r\n}\r\n\r\nconst SeriesPost = ({ post, index }: SeriesPost) => {\r\n    return (\r\n        <Wrapper>\r\n            <StyledLink to={`${post.path}`}>\r\n                <h2>{index + 1}. {post.title}</h2>\r\n            </StyledLink>\r\n            {post.image && (\r\n                <StyledLink to={`${post.path}`}>\r\n                    <RatioImage\r\n                        widthRatio={2}\r\n                        heightRatio={1}\r\n                        fluid={post.image}\r\n                    />\r\n                </StyledLink>\r\n            )}\r\n            <Content>\r\n                <StyledLink to={`${post.path}`}>\r\n                    <div className=\"description-wrapper\">\r\n                        <p>\r\n                            {post.description.replace(/&#x3A;/g, \":\")}\r\n                            {post.description.length === 150 && \"...\"}\r\n                        </p>\r\n                    </div>\r\n                </StyledLink>\r\n                <StyledLink to={`${post.path}`}>\r\n                    <div className=\"sub-info\">\r\n                        <span>{formatDate(post.released_at)}</span>\r\n                        {post.updated_at && (\r\n                            <>\r\n                                <br />\r\n                                <span>{formatDate(post.updated_at)} 수정됨</span>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </StyledLink>\r\n            </Content>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default memo(SeriesPost);","import React, { memo } from 'react';\r\nimport Styled from 'styled-components';\r\nimport media, { mediaQuery } from '../../lib/styles/media';\r\nimport palette from '../../lib/styles/palette';\r\nimport { PartialPostType } from '../post/PostCard';\r\nimport SeriesPost from './SeriesPost';\r\n\r\nconst Wrapper = Styled.div`\r\n    display: flex;\r\n    margin: -1rem;\r\n    width: 40%;\r\n    flex-wrap: wrap;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    margin-top: 3rem;\r\n    ${mediaQuery(1440)} {\r\n        width: 50%;\r\n    }\r\n    ${mediaQuery(1056)} {\r\n        width: 100%;\r\n    }\r\n    ${mediaQuery(767)} {\r\n        margin: 0;\r\n    }\r\n\r\n    .series-header {\r\n        width: 100%;\r\n        border-bottom: 1px solid ${palette.gray[3]};\r\n        h1 {\r\n            ${media.custom(1056)} {\r\n                font-size: 1.4rem;\r\n            }\r\n        }\r\n        h3 {\r\n            width: 3.4rem;\r\n            color: ${palette.indigo[7]};\r\n            border-bottom: 4px solid ${palette.indigo[7]};\r\n            ${media.custom(1056)} {\r\n                font-size: 1rem;\r\n                border-bottom: 3px solid ${palette.indigo[7]};\r\n                width: 2.9rem;\r\n            }\r\n        }\r\n    }\r\n`\r\ninterface SeriesPostListProps {\r\n    posts: Array<PartialPostType>;\r\n    series: string;\r\n}\r\n\r\nconst SeriesPostList = ({ posts, series }: SeriesPostListProps) => {\r\n    console.log(posts);\r\n    return (\r\n        <Wrapper>\r\n            <div className=\"series-header\">\r\n                <h3>시리즈</h3>\r\n                <h1>{series}</h1>\r\n            </div>\r\n            {posts.map((post, index) => (\r\n                <SeriesPost post={post} index={index} key={index} />\r\n            ))}\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default memo(SeriesPostList);","import { graphql, useStaticQuery } from 'gatsby';\r\nimport React, { memo, useCallback } from 'react';\r\nimport queryString from 'query-string';\r\nimport { useLocation } from '@reach/router';\r\nimport { reshapePost } from '../../lib/posts/reshape';\r\nimport SeriesPostList from './SeriesPostList';\r\n\r\ninterface SeriesPostListPageProps {\r\n    order: 'ASC' | 'DESC';\r\n}\r\n\r\nconst SeriesPostListPage = ({ order }: SeriesPostListPageProps) => {\r\n    const location = useLocation();\r\n    const param = location.search && queryString.parse(location.search);\r\n    if (!param.name) return <div></div>;\r\n    let name: string = (param.name as string).replace(/-/gi, ' ');\r\n\r\n    const getSeriesPosts = useCallback(() => {\r\n\r\n        if (name === 'WebRTC 이론부터 실전까지')\r\n            return useStaticQuery(graphql`\r\n                {\r\n                    allMarkdownRemark(\r\n                        filter: {\r\n                            frontmatter: { series: { eq: \"WebRTC 이론부터 실전까지\" } }\r\n                        }\r\n                    ) {\r\n                        edges {\r\n                            node {\r\n                                id\r\n                                frontmatter {\r\n                                    path\r\n                                    released_at\r\n                                    updated_at\r\n                                    title\r\n                                    description\r\n                                    image {\r\n                                        childImageSharp {\r\n                                            fluid {\r\n                                                ...GatsbyImageSharpFluid\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    lang\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            `)\r\n\r\n    }, [name]);\r\n\r\n    const data: any = getSeriesPosts();\r\n\r\n    if (!data.allMarkdownRemark) return <div></div>;\r\n    const { allMarkdownRemark } = data;\r\n\r\n    return <SeriesPostList posts={reshapePost(allMarkdownRemark)} series={name} />;\r\n\r\n}\r\n\r\nexport default memo(SeriesPostListPage);","import React from 'react';\r\nimport queryString from 'query-string';\r\nimport { useLocation } from '@reach/router';\r\nimport MainTemplate from '../components/main/MainTemplate';\r\nimport MainResponsive from '../components/main/MainResponsive';\r\nimport Header from '../components/base/Header';\r\nimport SeriesPostListPage from '../components/series/SeriesPostListPage';\r\nimport Footer from '../components/base/Footer';\r\n\r\nconst Series = () => {\r\n    const location = useLocation();\r\n    const series = location.search && queryString.parse(location.search);\r\n\r\n    return (\r\n        <MainTemplate>\r\n            <Header />\r\n            <MainResponsive>\r\n                <SeriesPostListPage order='ASC' />\r\n                <Footer />\r\n            </MainResponsive>\r\n        </MainTemplate>\r\n    );\r\n}\r\n\r\nexport default Series;\r\n"],"sourceRoot":""}