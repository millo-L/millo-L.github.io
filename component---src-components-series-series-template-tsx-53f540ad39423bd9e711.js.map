{"version":3,"file":"component---src-components-series-series-template-tsx-53f540ad39423bd9e711.js","mappings":"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","sources":["webpack://millo-s-tech-blog/./src/components/SEO.tsx","webpack://millo-s-tech-blog/./src/components/base/Footer.tsx","webpack://millo-s-tech-blog/./src/components/series/SeriesPost.tsx","webpack://millo-s-tech-blog/./src/components/series/SeriesPostList.tsx","webpack://millo-s-tech-blog/./src/components/series/SeriesTemplate.tsx","webpack://millo-s-tech-blog/./src/libs/list/reshape.ts"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\n\r\ninterface Props {\r\n\ttitle?: string;\r\n\tdescription?: string;\r\n\tpathname?: string;\r\n\tcreated_at?: string;\r\n\tupdated_at?: string;\r\n\timage?: string;\r\n\tchildren?: any;\r\n}\r\n\r\ntype QueryType = {\r\n\tsite: {\r\n\t\tsiteMetadata: {\r\n\t\t\tauthor: string;\r\n\t\t\tdescription: string;\r\n\t\t\tsiteUrl: string;\r\n\t\t\ttitle: string;\r\n\t\t};\r\n\t};\r\n};\r\n\r\nexport default function SEO({\r\n\ttitle,\r\n\tdescription,\r\n\tpathname,\r\n\tcreated_at,\r\n\tupdated_at,\r\n\timage,\r\n\tchildren,\r\n}: Props) {\r\n\tconst { site } = useStaticQuery<QueryType>(graphql`\r\n\t\t{\r\n\t\t\tsite {\r\n\t\t\t\tsiteMetadata {\r\n\t\t\t\t\tauthor\r\n\t\t\t\t\tdescription\r\n\t\t\t\t\tsiteUrl\r\n\t\t\t\t\ttitle\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t`);\r\n\r\n\tconst seo = {\r\n\t\tauthor: site.siteMetadata.author,\r\n\t\ttitle: title ? `${title} | ${site.siteMetadata.title}` : site.siteMetadata.title,\r\n\t\tdescription: description || site.siteMetadata.description,\r\n\t\timage: `${site.siteMetadata.siteUrl}${image || \"/icon.png\"}`,\r\n\t\turl: `${site.siteMetadata.siteUrl}${pathname || \"\"}`,\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(`siteUrl: ${site.siteMetadata.siteUrl}`);\r\n\t}, [site.siteMetadata.siteUrl]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<title>{seo.title}</title>\r\n\t\t\t<meta name=\"description\" content={seo.description} />\r\n\t\t\t<meta name=\"twitter:url\" content={seo.url} />\r\n\t\t\t<meta name=\"twitter:title\" content={seo.title} />\r\n\t\t\t<meta name=\"twitter:url\" content={seo.url} />\r\n\t\t\t<meta name=\"twitter:description\" content={seo.description} />\r\n\t\t\t<meta name=\"twitter:card\" content=\"summary\" />\r\n\t\t\t<meta property=\"twitter:image\" content={seo.image} />\r\n\t\t\t<meta property=\"og:type\" content=\"website\" />\r\n\t\t\t<meta property=\"og:title\" content={seo.title} />\r\n\t\t\t<meta property=\"og:description\" content={seo.description} />\r\n\t\t\t<meta property=\"og:site_name\" content={seo.title} />\r\n\t\t\t<meta property=\"og:image\" content={seo.image} />\r\n\t\t\t<meta name=\"robots\" content=\"index,follow\" />\r\n\t\t\t<link rel=\"apple-touch-icon\" href=\"/favicon.ico\" />\r\n\t\t\t{created_at !== undefined && (\r\n\t\t\t\t<script type=\"application/ld+json\">\r\n\t\t\t\t\t{JSON.stringify({\r\n\t\t\t\t\t\t\"@context\": \"http://schema.org\",\r\n\t\t\t\t\t\t\"@type\": \"BlogPosting\",\r\n\t\t\t\t\t\tauthor: {\r\n\t\t\t\t\t\t\t\"@type\": \"Person\",\r\n\t\t\t\t\t\t\tname: seo.author,\r\n\t\t\t\t\t\t\tlogo: null,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\turl: seo.url,\r\n\t\t\t\t\t\theadline: seo.title,\r\n\t\t\t\t\t\tdescription: seo.description,\r\n\t\t\t\t\t\tdatePublished: created_at,\r\n\t\t\t\t\t\tdateModified: updated_at || created_at,\r\n\t\t\t\t\t\timage: seo.image,\r\n\t\t\t\t\t})}\r\n\t\t\t\t</script>\r\n\t\t\t)}\r\n\t\t\t<meta\r\n\t\t\t\tname=\"google-site-verification\"\r\n\t\t\t\tcontent=\"3RV-iVIsB1icAg20Pkdf-2uSR7XMnOYS2FxfhQ3YCD8\"\r\n\t\t\t/>\r\n\t\t\t<meta\r\n\t\t\t\tname=\"naver-site-verification\"\r\n\t\t\t\tcontent=\"3be60e4cdc653a5f4c68e0da86c7f8414891c370\"\r\n\t\t\t/>\r\n\t\t\t<script\r\n\t\t\t\tasync\r\n\t\t\t\tsrc=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3926462216067158\"\r\n\t\t\t\tcrossOrigin=\"anonymous\"\r\n\t\t\t/>\r\n\t\t\t{children}\r\n\t\t</>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport Styled from \"styled-components\";\r\nimport palette from \"../../libs/styles/palette\";\r\nimport ProfileIcons from \"../common/ProfileIcons\";\r\n\r\nconst FooterWrapper = Styled.div`\r\n    display: flex;\r\n    border-top: 1px solid ${palette.gray[5]};\r\n    margin-top: 5rem;\r\n    width: 100%;\r\n    height: 8rem;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n\r\n    span {\r\n        font-size: 1.5rem;\r\n    }\r\n\r\n    .icon-wrapper {\r\n        width: 9rem;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        flex-direction: row;\r\n        margin-top: 1rem;\r\n        svg {\r\n            width: 30%;\r\n            height: 1.5rem;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n`;\r\n\r\nconst TEXT = \"millo's tech blog\";\r\n\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<FooterWrapper>\r\n\t\t\t<span>{TEXT}</span>\r\n\t\t\t<ProfileIcons className=\"icon-wrapper\" />\r\n\t\t</FooterWrapper>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport { GatsbyImage } from \"gatsby-plugin-image\";\r\nimport styled from \"styled-components\";\r\nimport media, { mediaQuery } from \"../../libs/styles/media\";\r\nimport palette from \"../../libs/styles/palette\";\r\nimport { ellipsis, formatDate } from \"../../libs/styles/utils\";\r\nimport { PostType } from \"../../types/Common\";\r\n\r\nconst Container = styled(Link)`\r\n\twidth: 100%;\r\n\tbackground: white;\r\n\tborder-radius: 4px;\r\n\tbox-shadow: 0 4px 16px 0 rgba(0, 0, 0, 0.04);\r\n\ttransition:\r\n\t\t0.25s box-shadow ease-in,\r\n\t\t0.25s transform ease-in;\r\n\tmargin-top: 2rem;\r\n\toverflow: hidden;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\t&:hover {\r\n\t\ttransform: translateY(-8px);\r\n\t\tbox-shadow: 0 12px 20px 0 rgba(0, 0, 0, 0.08);\r\n\t\t${mediaQuery(1024)} {\r\n\t\t\ttransform: none;\r\n\t\t}\r\n\t}\r\n\r\n\th2 {\r\n\t\tmargin: 1rem;\r\n\t\t${media.custom(1056)} {\r\n\t\t\tfont-size: 1.3rem;\r\n\t\t}\r\n\t}\r\n\r\n\timg {\r\n\t\tborder-top: 1px solid ${palette.gray[2]};\r\n\t\twidth: 100%;\r\n\t}\r\n`;\r\n\r\nconst Content = styled.div`\r\n\tpadding: 1rem;\r\n\tdisplay: flex;\r\n\tflex: 1;\r\n\tflex-direction: column;\r\n\th4 {\r\n\t\tfont-size: 1rem;\r\n\t\tmargin: 0;\r\n\t\tmargin-bottom: 0.25rem;\r\n\t\tline-height: 1.5;\r\n\t\tword-break: break-word;\r\n\t\t${ellipsis}\r\n\t\tcolor: ${palette.gray[9]};\r\n\t\t${mediaQuery(767)} {\r\n\t\t\twhite-space: initial;\r\n\t\t}\r\n\t}\r\n\t.description-wrapper {\r\n\t\tflex: 1;\r\n\t}\r\n\tp {\r\n\t\tmargin: 0;\r\n\t\tword-break: break-word;\r\n\t\toverflow-wrap: break-word;\r\n\t\tfont-size: 0.875rem;\r\n\t\tline-height: 1.5;\r\n\t\tcolor: ${palette.gray[7]};\r\n\t\tmargin-bottom: 1.5rem;\r\n\t}\r\n\t.sub-info {\r\n\t\tfont-size: 0.75rem;\r\n\t\tline-height: 1.5;\r\n\t\tcolor: ${palette.gray[6]};\r\n\t}\r\n`;\r\n\r\ninterface Props {\r\n\tpost: PostType;\r\n\tindex: number;\r\n}\r\n\r\nexport default function SeriesPost({ post, index }: Props) {\r\n\treturn (\r\n\t\t<Container to={post.path}>\r\n\t\t\t<h2>\r\n\t\t\t\t{index + 1}. {post.title}\r\n\t\t\t</h2>\r\n\t\t\t{post.image && (\r\n\t\t\t\t<GatsbyImage className=\"thumbnail\" image={post.image} alt={post.title} />\r\n\t\t\t)}\r\n\t\t\t<Content>\r\n\t\t\t\t<div className=\"description-wrapper\">\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t{post.description.replace(/&#x3A;/g, \":\")}\r\n\t\t\t\t\t\t{post.description.length === 150 && \"...\"}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"sub-info\">\r\n\t\t\t\t\t<span>{formatDate(post.released_at, post.lang)}</span>\r\n\t\t\t\t\t{post.updated_at && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t{post.lang === \"ko\" ? \"수정: \" : \"Last edited at \"}\r\n\t\t\t\t\t\t\t\t{formatDate(post.updated_at, post.lang)}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</Content>\r\n\t\t</Container>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport Styled from \"styled-components\";\r\nimport media, { mediaQuery } from \"../../libs/styles/media\";\r\nimport palette from \"../../libs/styles/palette\";\r\nimport { PostType } from \"../../types/Common\";\r\nimport SeriesPost from \"./SeriesPost\";\r\n\r\nconst Wrapper = Styled.div`\r\n    display: flex;\r\n    margin: -1rem;\r\n    width: 40%;\r\n    flex-wrap: wrap;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    margin-top: 3rem;\r\n    ${mediaQuery(1440)} {\r\n        width: 50%;\r\n    }\r\n    ${mediaQuery(1056)} {\r\n        width: 100%;\r\n    }\r\n    ${mediaQuery(767)} {\r\n        margin: 0;\r\n    }\r\n\r\n    .series-header {\r\n        width: 100%;\r\n        border-bottom: 1px solid ${palette.gray[3]};\r\n        h1 {\r\n            ${media.custom(1056)} {\r\n                font-size: 1.4rem;\r\n            }\r\n        }\r\n        h3 {\r\n            width: 3.4rem;\r\n            color: ${palette.indigo[7]};\r\n            border-bottom: 4px solid ${palette.indigo[7]};\r\n            ${media.custom(1056)} {\r\n                font-size: 1rem;\r\n                border-bottom: 3px solid ${palette.indigo[7]};\r\n                width: 3rem;\r\n            }\r\n        }\r\n    }\r\n`;\r\ninterface Props {\r\n\tposts: PostType[];\r\n\tseries: string;\r\n\tlang: string;\r\n}\r\n\r\nexport default function SeriesPostList({ posts, series, lang }: Props) {\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<div className=\"series-header\">\r\n\t\t\t\t<h3>{lang === \"ko\" ? \"시리즈\" : \"Series\"}</h3>\r\n\t\t\t\t<h1>{series}</h1>\r\n\t\t\t</div>\r\n\t\t\t{posts.map((post, index) => (\r\n\t\t\t\t<SeriesPost post={post} index={index} key={post.title} />\r\n\t\t\t))}\r\n\t\t</Wrapper>\r\n\t);\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { HeadProps, PageProps, graphql } from \"gatsby\";\r\nimport { IGatsbyImageData } from \"gatsby-plugin-image\";\r\nimport { reshapePost } from \"../../libs/list/reshape\";\r\nimport { LanguageType } from \"../../types/Common\";\r\nimport SEO from \"../SEO\";\r\nimport Footer from \"../base/Footer\";\r\nimport Header from \"../base/Header\";\r\nimport MainResponsive from \"../main/MainResponsive\";\r\nimport SeriesPostList from \"./SeriesPostList\";\r\n\r\ntype QueryType = {\r\n\tallMarkdownRemark: {\r\n\t\tnodes: {\r\n\t\t\tfrontmatter: {\r\n\t\t\t\ttitle: string;\r\n\t\t\t\treleased_at: string;\r\n\t\t\t\tupdated_at?: string;\r\n\t\t\t\tdescription: string;\r\n\t\t\t\timage: {\r\n\t\t\t\t\tchildImageSharp: {\r\n\t\t\t\t\t\tgatsbyImageData: IGatsbyImageData;\r\n\t\t\t\t\t\tfixed: {\r\n\t\t\t\t\t\t\tsrc: string;\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\t\t\t\tlang: LanguageType;\r\n\t\t\t\ttranslation_series: string;\r\n\t\t\t\tseries: string;\r\n\t\t\t\tcategory: string;\r\n\t\t\t};\r\n\t\t\tfields: {\r\n\t\t\t\tslug: string;\r\n\t\t\t};\r\n\t\t}[];\r\n\t};\r\n};\r\n\r\nexport default function SeriesTemplate({ data }: PageProps<QueryType>) {\r\n\tconst { allMarkdownRemark } = data;\r\n\tconst posts = useMemo(() => reshapePost(allMarkdownRemark), [allMarkdownRemark]);\r\n\r\n\tif (!allMarkdownRemark) return null;\r\n\treturn (\r\n\t\t<MainResponsive>\r\n\t\t\t<Header lang={data.allMarkdownRemark.nodes[0].frontmatter.lang} />\r\n\t\t\t<SeriesPostList\r\n\t\t\t\tposts={posts}\r\n\t\t\t\tseries={allMarkdownRemark.nodes[0].frontmatter.series}\r\n\t\t\t\tlang={allMarkdownRemark.nodes[0].frontmatter.lang}\r\n\t\t\t/>\r\n\t\t\t<Footer />\r\n\t\t</MainResponsive>\r\n\t);\r\n}\r\n\r\nexport function Head({ data }: HeadProps<QueryType>) {\r\n\tif (!data.allMarkdownRemark) return null;\r\n\tconst { series, image, released_at, updated_at } = data.allMarkdownRemark.nodes[0].frontmatter;\r\n\treturn (\r\n\t\t<SEO\r\n\t\t\ttitle={series}\r\n\t\t\tdescription={series}\r\n\t\t\timage={image.childImageSharp.fixed.src}\r\n\t\t\tcreated_at={released_at}\r\n\t\t\tupdated_at={updated_at || undefined}\r\n\t\t\tpathname={`/series/${series.replace(/ /gi, \"-\")}`}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n\tquery ($series: String!) {\r\n\t\tallMarkdownRemark(\r\n\t\t\tfilter: { frontmatter: { series: { eq: $series } } }\r\n\t\t\tsort: { frontmatter: { released_at: ASC } }\r\n\t\t) {\r\n\t\t\tnodes {\r\n\t\t\t\tfrontmatter {\r\n\t\t\t\t\ttitle\r\n\t\t\t\t\treleased_at\r\n\t\t\t\t\tupdated_at\r\n\t\t\t\t\tdescription\r\n\t\t\t\t\timage {\r\n\t\t\t\t\t\tchildImageSharp {\r\n\t\t\t\t\t\t\tgatsbyImageData(width: 1000, quality: 100)\r\n\t\t\t\t\t\t\tfixed {\r\n\t\t\t\t\t\t\t\tsrc\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlang\r\n\t\t\t\t\ttranslation_series\r\n\t\t\t\t\tseries\r\n\t\t\t\t\tcategory\r\n\t\t\t\t}\r\n\t\t\t\tfields {\r\n\t\t\t\t\tslug\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n","import {\r\n\tPostListAllMarkdownRemark,\r\n\tPostType,\r\n\tSeriesListAllMarkdownRemark,\r\n\tSeriesType,\r\n} from \"../../types/Common\";\r\n\r\nexport const reshapePost = (allMarkdownRemark: PostListAllMarkdownRemark): PostType[] => {\r\n\tif (!allMarkdownRemark) return [];\r\n\r\n\treturn allMarkdownRemark.nodes.map((node) => ({\r\n\t\tpath: node.fields.slug,\r\n\t\ttitle: node.frontmatter.title,\r\n\t\tdescription: node.frontmatter.description,\r\n\t\treleased_at: node.frontmatter.released_at,\r\n\t\tupdated_at: node.frontmatter.updated_at || undefined,\r\n\t\timage: node.frontmatter.image\r\n\t\t\t? node.frontmatter.image.childImageSharp.gatsbyImageData\r\n\t\t\t: null,\r\n\t\tlang: node.frontmatter.lang,\r\n\t\tcategory: node.frontmatter.category,\r\n\t}));\r\n};\r\n\r\nexport const reshapeSeries = (allMarkdownRemark: SeriesListAllMarkdownRemark): SeriesType[] => {\r\n\tif (!allMarkdownRemark) return [];\r\n\r\n\treturn allMarkdownRemark.group.map((each) => ({\r\n\t\tpath: `/series/${each.fieldValue.replace(/ /gi, \"-\")}`,\r\n\t\ttitle: each.fieldValue,\r\n\t\timage: each.nodes[0].frontmatter.image\r\n\t\t\t? each.nodes[0].frontmatter.image.childImageSharp.gatsbyImageData\r\n\t\t\t: null,\r\n\t\treleased_at: each.nodes[0].frontmatter.released_at,\r\n\t\tupdated_at: each.nodes[0].frontmatter.updated_at || undefined,\r\n\t\tlang: each.nodes[0].frontmatter.lang,\r\n\t\ttotalCount: each.totalCount,\r\n\t}));\r\n};\r\n"],"names":["SEO","_ref","title","description","pathname","created_at","updated_at","image","children","site","useStaticQuery","seo","author","siteMetadata","siteUrl","url","useEffect","console","log","React","name","content","property","rel","href","undefined","type","JSON","stringify","logo","headline","datePublished","dateModified","async","src","crossOrigin","FooterWrapper","Styled","div","withConfig","displayName","componentId","palette","gray","TEXT","Footer","ProfileIcons","className","Container","styled","Link","mediaQuery","media","custom","Content","ellipsis","SeriesPost","post","index","to","path","GatsbyImage","alt","replace","length","formatDate","released_at","lang","Wrapper","indigo","SeriesPostList","posts","series","map","key","SeriesTemplate","data","allMarkdownRemark","useMemo","reshapePost","MainResponsive","Header","nodes","frontmatter","Head","_ref2","childImageSharp","fixed","node","fields","slug","gatsbyImageData","category","reshapeSeries","group","each","fieldValue","totalCount"],"sourceRoot":""}