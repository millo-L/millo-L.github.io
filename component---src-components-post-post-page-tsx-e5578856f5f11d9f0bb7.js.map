{"version":3,"sources":["webpack:///./src/components/main/MainPageRowTemplate.tsx","webpack:///./src/components/base/Footer.tsx","webpack:///./src/components/post/PostTemplate.tsx","webpack:///./src/components/post/ScrollSpy.tsx","webpack:///./src/components/post/PostToC.tsx","webpack:///./src/components/post/TagList.tsx","webpack:///./src/components/post/PostViewer.tsx","webpack:///./src/components/post/Utterances.tsx","webpack:///./src/components/post/PostPage.tsx"],"names":["Wrapper","Styled","div","MainPageRowTemplate","children","style","memo","FooterWrapper","palette","gray","Footer","className","BackgroundStyle","createGlobalStyle","PostTemplateWrapper","PostTemplate","ScrollSpy","target","refs","sensitivity","this","targets","Array","from","querySelectorAll","window","addEventListener","onScroll","isOnTopOfDoc","deactiveateTarget","forEach","ref","t","findTarget","id","activate","document","documentElement","scrollTop","offsetTop","a","deactivate","filter","decodeURIComponent","attributes","value","replace","el","classList","add","remove","ToCWrapper","media","custom","indigo","PostToC","tableOfContents","useEffect","post","querySelector","headings","h","toc","dangerouslySetInnerHTML","__html","TagItemWrapper","TagItem","tag","onClick","TagListWrapper","TagList","tags","map","index","key","PostViewerWrapper","PostContentWrapper","PostViewer","html","title","released_at","updated_at","category","onClickTag","useCallback","to","categoryMap","src","formatDate","Utterances","React","containerRef","createRef","useLayoutEffect","utterances","createElement","repo","label","theme","crossOrigin","async","Object","entries","setAttribute","current","appendChild","displayName","PostPage","markdownRemark","data","Header","MainResponsive","marginTop","marginBottom","SimpleProfile","type","categoryVisible","frontmatter"],"mappings":"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","file":"component---src-components-post-post-page-tsx-e5578856f5f11d9f0bb7.js","sourcesContent":["import React, { memo } from \"react\"\r\nimport Styled from \"styled-components\"\r\n\r\nconst Wrapper = Styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: row;\r\n    \r\n`\r\n\r\ninterface MainPageRowTemplateProps {\r\n    children: React.ReactNode\r\n    style?: React.CSSProperties;\r\n}\r\n\r\nconst MainPageRowTemplate = ({ children, style }: MainPageRowTemplateProps) => {\r\n    return <Wrapper style={style}>{children}</Wrapper>\r\n}\r\n\r\nexport default memo(MainPageRowTemplate)\r\n","import React from 'react';\r\nimport Styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport ProfileIcons from '../common/ProfileIcons';\r\n\r\nconst FooterWrapper = Styled.div`\r\n    display: flex;\r\n    border-top: 1px solid ${palette.gray[5]};\r\n    margin-top: 5rem;\r\n    width: 100%;\r\n    height: 8rem;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n\r\n    span {\r\n        font-size: 1.5rem;\r\n    }\r\n\r\n    .icon-wrapper {\r\n        width: 9rem;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        flex-direction: row;\r\n        margin-top: 1rem;\r\n        svg {\r\n            width: 30%;\r\n            height: 1.5rem;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <FooterWrapper>\r\n            <span>millo's tech blog</span>\r\n            <ProfileIcons className=\"icon-wrapper\" />\r\n        </FooterWrapper>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Styled, { createGlobalStyle } from 'styled-components';\r\nimport '../css/typography.css';\r\n\r\nconst BackgroundStyle = createGlobalStyle`\r\n    body {\r\n        background-color: white;\r\n        font-family: \"ELAND\", serif;\r\n    }\r\n`;\r\n\r\nconst PostTemplateWrapper = Styled.div`\r\n    font-family: \"ELAND\", serif;\r\n`;\r\n\r\ninterface PostTemplateProps {\r\n    children: React.ReactNode;\r\n}\r\n\r\n\r\nconst PostTemplate = ({ children }: PostTemplateProps) => {\r\n    return (\r\n        <>\r\n            <BackgroundStyle />\r\n            <PostTemplateWrapper>\r\n                {children}\r\n            </PostTemplateWrapper>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PostTemplate;","export default class ScrollSpy {\r\n    public targets: HTMLElement[]\r\n    public refs: HTMLElement[]\r\n    public sensitivity: number\r\n\r\n    constructor(target: HTMLElement, refs: HTMLElement[], sensitivity?: number) {\r\n        this.targets = Array.from(target.querySelectorAll(\"a\"))\r\n        this.refs = refs\r\n        this.sensitivity = sensitivity || -10\r\n\r\n        window.addEventListener(\"scroll\", () => this.onScroll())\r\n    }\r\n\r\n    onScroll() {\r\n        if (!this.isOnTopOfDoc(this.refs[0])) {\r\n            this.deactiveateTarget()\r\n        }\r\n\r\n        this.refs.forEach(ref => {\r\n            if (this.isOnTopOfDoc(ref)) {\r\n                this.deactiveateTarget()\r\n                const t = this.findTarget(ref.id)\r\n                if (t) {\r\n                    this.activate(t)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    isOnTopOfDoc(ref: HTMLElement): boolean {\r\n        return (\r\n            document.documentElement.scrollTop - ref.offsetTop >= this.sensitivity\r\n        )\r\n    }\r\n\r\n    deactiveateTarget() {\r\n        this.targets.forEach(a => this.deactivate(a))\r\n    }\r\n\r\n    findTarget(id: string): HTMLElement | undefined {\r\n        return this.targets.filter(\r\n            a =>\r\n                decodeURIComponent(a.attributes[\"href\"].value.replace(/^#/, \"\")) === id\r\n        )[0]\r\n    }\r\n\r\n    activate(el: HTMLElement) {\r\n        el.classList.add(\"active\")\r\n    }\r\n\r\n    deactivate(el: HTMLElement) {\r\n        el.classList.remove(\"active\")\r\n    }\r\n}","import React, { memo, useEffect } from \"react\"\r\nimport Styled from 'styled-components';\r\nimport media from \"../../lib/styles/media\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport ScrollSpy from \"./ScrollSpy\"\r\n\r\nconst ToCWrapper = Styled.div`\r\n    transition: 0.125s all ease-in;\r\n    width: 20%;\r\n    padding: 0.5rem;\r\n    padding-right: 1rem;\r\n    padding-left: 0;\r\n    order: 1;\r\n    top: 10rem;\r\n    margin-left: 4rem;\r\n    position: sticky;\r\n    height: 30rem;\r\n    overflow-y: auto;\r\n    word-break: break-all;\r\n\r\n    ${media.custom(1440)} {\r\n        display: none;\r\n    }\r\n    ul:first-child {\r\n        padding-left: 1rem;\r\n        border-left: 2px solid ${palette.indigo[4]};\r\n    }\r\n    ul {\r\n        list-style: none;\r\n        margin: 0;\r\n        li {\r\n            \r\n            border: none;\r\n            margin-bottom: 4px;\r\n            p {\r\n                margin: 0;\r\n            }\r\n        }\r\n    }\r\n    a {\r\n        text-decoration: none;\r\n        color: ${palette.gray[4]};\r\n        font-size: 1rem;\r\n        &:hover,\r\n        &:focus {\r\n            color: ${palette.indigo[4]};\r\n        }\r\n        &.active {\r\n            color: ${palette.indigo[9]};\r\n            transform: scale(1.1);\r\n        }\r\n    }\r\n    & + & {\r\n        margin-top: 4px;\r\n    }\r\n\r\n`;\r\n\r\ninterface PostToCProps {\r\n    tableOfContents: string\r\n}\r\n\r\nconst PostToC = ({ tableOfContents }: PostToCProps) => {\r\n    useEffect(() => {\r\n        const post = document.querySelector(\"#content-container\")\r\n        const headings = Array.from(\r\n            post.querySelectorAll(\"h1, h2\")\r\n        ).filter((h: any) => h.id)\r\n        const toc = document.querySelector(\"#toc-container\")\r\n\r\n        new ScrollSpy(toc as HTMLElement, headings as HTMLElement[]);\r\n    }, [])\r\n\r\n    return (\r\n        <ToCWrapper\r\n            id=\"toc-container\"\r\n            dangerouslySetInnerHTML={{ __html: tableOfContents }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default memo(PostToC);","import React, { memo } from 'react';\r\nimport Styled from 'styled-components';\r\nimport media from '../../lib/styles/media';\r\nimport palette from '../../lib/styles/palette';\r\n\r\nconst TagItemWrapper = Styled.div`\r\n    padding: 0.5rem 1rem;\r\n    background-color: ${palette.gray[1]};\r\n    color: ${palette.indigo[8]};\r\n    border-radius: 0.5rem;\r\n    margin-right: 1rem;\r\n    margin-bottom: 0.5rem;\r\n    // cursor: pointer;\r\n    &:hover {\r\n        // background-color: ${palette.gray[2]};\r\n    }\r\n    \r\n    ${media.custom(1056)} {\r\n        font-size: 0.8rem;\r\n    }\r\n`;\r\n\r\ninterface TagItemProps {\r\n    tag: string;\r\n    onClick: (tag: string) => void;\r\n}\r\n\r\nconst TagItem = memo(({ tag, onClick }: TagItemProps) => <TagItemWrapper onClick={() => onClick(tag)}>{tag}</TagItemWrapper>);\r\n\r\nconst TagListWrapper = Styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin-bottom: 4rem;\r\n`;\r\n\r\ninterface TagListWrapper {\r\n    tags: Array<string>;\r\n    onClick: (tag: string) => void;\r\n}\r\n\r\nconst TagList = ({ tags, onClick }: TagListWrapper) => {\r\n    return (\r\n        <TagListWrapper>\r\n            {tags.map((tag, index) => {\r\n                return <TagItem tag={tag} key={index} onClick={onClick} />\r\n            })}\r\n        </TagListWrapper>\r\n    );\r\n};\r\n\r\nexport default memo(TagList);","import { Link } from 'gatsby';\r\nimport React, { useCallback } from 'react';\r\nimport Styled from 'styled-components';\r\nimport { categoryMap } from '../../lib/styles/category';\r\nimport media from '../../lib/styles/media';\r\nimport palette from '../../lib/styles/palette';\r\nimport { formatDate } from '../../lib/styles/utils';\r\nimport TagList from './TagList';\r\n\r\ntype PostType = {\r\n    author: string;\r\n    category: string;\r\n    title: string;\r\n    tags: Array<string>;\r\n    released_at: string;\r\n    updated_at: string;\r\n    html: string;\r\n}\r\nconst PostViewerWrapper = Styled.div`\r\n    width: 60%;\r\n    margin-left: 0;\r\n\r\n    ${media.custom(1440)} {\r\n        width: 80%;\r\n    }\r\n    ${media.custom(1056)} {\r\n        width: 100%;\r\n    }\r\n\r\n    .category {\r\n        text-decoration: none;\r\n        font-size: 1.5rem;\r\n        color: gray;\r\n        margin-bottom: 0;\r\n        &:hover {\r\n            text-decoration: underline;\r\n        }\r\n\r\n        \r\n        ${media.custom(1056)} {\r\n            font-size: 1rem;\r\n        }\r\n    }\r\n\r\n    .title {\r\n        margin-top: 0.5rem;\r\n        font-size: 3rem;\r\n        ${media.custom(1056)} {\r\n            font-size: 2.2rem;\r\n        }\r\n    }\r\n\r\n    .date {\r\n        line-height: 0.8;\r\n        color: gray;\r\n        ${media.custom(1056)} {\r\n            font-size: 0.8rem;\r\n        }\r\n    }\r\n`;\r\n\r\nconst PostContentWrapper = Styled.div`\r\n    width: 100%;\r\n    margin: 0;\r\n    word-break: break-all;\r\n\r\n    a {\r\n        color: ${palette.indigo[6]};\r\n        text-decoration: none;\r\n        &:hover {\r\n            text-decoration: underline;\r\n        }\r\n    }\r\n\r\n    h1 {\r\n        margin-top: 3rem;\r\n        ${media.custom(767)} {\r\n            margin-top: 2rem;\r\n            font-size: 1.8rem;\r\n        }\r\n    }\r\n\r\n    h2 {\r\n        margin-top: 0rem;\r\n    }\r\n\r\n    h3 {\r\n        margin-top: 3rem;\r\n        ${media.custom(767)} {\r\n            margin-top: 2rem;\r\n        }\r\n    }\r\n\r\n    p {\r\n        font-size: 1.2rem;\r\n        line-height: 1.8;\r\n        ${media.custom(767)} {\r\n            font-size: 1.05rem;\r\n            line-height: 1.7;\r\n        }\r\n    }\r\n\r\n    li {\r\n        font-size: 1.2rem;\r\n        line-height: 2;\r\n\r\n        ${media.custom(767)} {\r\n            font-size: 1.05rem;\r\n            line-height: 1.7;\r\n        }\r\n\r\n        h4, p {\r\n            margin: 0;\r\n            font-size: 1.2rem;\r\n            ${media.custom(767)} {\r\n                font-size: 1.05rem;\r\n                line-height: 1.7;\r\n            }\r\n        }\r\n    }\r\n\r\n    pre, code {\r\n        font-size: 1.1rem;\r\n        ${media.custom(767)} {\r\n            font-size: 1rem;\r\n        }\r\n    }\r\n\r\n    img {\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\ninterface PostViewerProps {\r\n    post: PostType;\r\n}\r\n\r\n\r\nconst PostViewer = ({ post }: PostViewerProps) => {\r\n    const { html, title, released_at, updated_at, category, tags } = post;\r\n\r\n    const onClickTag = useCallback((tag: string) => {\r\n\r\n    }, [tags]);\r\n\r\n    return (\r\n        <PostViewerWrapper>\r\n            {category &&\r\n                <Link className=\"category\" to={`/?category=${category}`}>{\r\n                    categoryMap[category]\r\n                        ? <img src={categoryMap[category].src} />\r\n                        : [{ category }]\r\n                }</Link>}\r\n            <h1 className=\"title\">{title}</h1>\r\n            <p className=\"date\" >게시: {formatDate(released_at)}</p>\r\n            {updated_at && <p className=\"date\" >수정: {formatDate(updated_at)}</p>}\r\n            {tags && <TagList tags={tags} onClick={onClickTag} />}\r\n            <PostContentWrapper id=\"content-container\" dangerouslySetInnerHTML={{ __html: html }} />\r\n        </PostViewerWrapper>\r\n    );\r\n}\r\n\r\nexport default PostViewer;","import React, { createRef, useLayoutEffect } from 'react';\r\n\r\nconst src = 'https://utteranc.es/client.js';\r\n\r\ninterface IUtterancesProps {\r\n}\r\n\r\nconst Utterances = React.memo(({ }: IUtterancesProps) => {\r\n    const containerRef = createRef<HTMLDivElement>();\r\n\r\n    useLayoutEffect(() => {\r\n        const utterances = document.createElement('script');\r\n\r\n        const attributes = {\r\n            src,\r\n            repo: 'millo-L/millo-L.github.io',\r\n            'issue-term': 'pathname',\r\n            label: 'comment',\r\n            theme: 'github-light',\r\n            crossOrigin: 'anonymous',\r\n            async: 'true',\r\n        };\r\n\r\n        Object.entries(attributes).forEach(([key, value]) => {\r\n            utterances.setAttribute(key, value);\r\n        });\r\n\r\n        containerRef.current.appendChild(utterances);\r\n    }, []);\r\n\r\n    return <div ref={containerRef} />;\r\n});\r\n\r\nUtterances.displayName = 'Utterances';\r\n\r\nexport default Utterances;","import { graphql } from 'gatsby';\r\nimport React, { memo } from 'react';\r\nimport Footer from '../base/Footer';\r\nimport Header from '../base/Header';\r\nimport SimpleProfile from '../common/SimpleProfile';\r\nimport MainPageRowTemplate from '../main/MainPageRowTemplate';\r\nimport MainResponsive from '../main/MainResponsive';\r\nimport PostTemplate from '../post/PostTemplate';\r\nimport PostToC from '../post/PostToC';\r\nimport PostViewer from '../post/PostViewer';\r\nimport PostComment from './PostComment';\r\nimport Utterances from './Utterances';\r\n\r\ninterface PostPageProps {\r\n  data: any;\r\n}\r\n\r\nconst PostPage = ({ data }: PostPageProps) => {\r\n  const { markdownRemark } = data\r\n\r\n  if (!markdownRemark) return <div></div>;\r\n\r\n  return (\r\n    <PostTemplate>\r\n      <Header />\r\n      <MainResponsive style={{ marginTop: \"2rem\" }} >\r\n        <MainPageRowTemplate style={{ marginBottom: \"5rem\" }}>\r\n          <SimpleProfile style={{ marginTop: \"0.5rem\" }} type='body' categoryVisible={true} />\r\n          <PostViewer post={{ ...markdownRemark.frontmatter, html: markdownRemark.html }} />\r\n          <PostToC tableOfContents={markdownRemark.tableOfContents} />\r\n        </MainPageRowTemplate>\r\n        {/*<PostComment\r\n          title={markdownRemark.frontmatter.title}\r\n          id={markdownRemark.id}\r\n          path={markdownRemark.frontmatter.path}\r\n        />*/}\r\n        <Utterances />\r\n        <Footer />\r\n      </MainResponsive>\r\n    </PostTemplate>\r\n  );\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query($path: String!) {\r\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\r\n      html\r\n      id\r\n      tableOfContents(absolute: false, maxDepth: 2, heading: null)\r\n      frontmatter {\r\n        path\r\n        author\r\n        category\r\n        released_at(formatString: \"YYYY-MM-DD\")\r\n        updated_at(formatString: \"YYYY-MM-DD\")\r\n        tags\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default PostPage;"],"sourceRoot":""}