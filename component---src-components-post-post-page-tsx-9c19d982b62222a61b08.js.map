{"version":3,"sources":["webpack:///./src/components/main/MainPageRowTemplate.tsx","webpack:///./src/components/common/Adsense.tsx","webpack:///./src/components/base/Footer.tsx","webpack:///./src/components/post/PostTemplate.tsx","webpack:///./src/components/post/ScrollSpy.tsx","webpack:///./src/components/post/PostToC.tsx","webpack:///./src/components/post/PostSeriesList.tsx","webpack:///./src/components/post/PrevNextPostItem.tsx","webpack:///./src/components/post/PrevNextPost.tsx","webpack:///./src/components/post/TagList.tsx","webpack:///./src/components/post/PostViewer.tsx","webpack:///./src/components/post/Utterances.tsx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","webpack:///./src/components/post/PostPage.tsx"],"names":["Wrapper","Styled","div","MainPageRowTemplate","children","style","memo","Adsense","adClient","adSlot","adFormat","adLayout","fullWidthResponsive","async","src","className","data-ad-client","data-ad-slot","data-ad-format","data-ad-layout","data-full-width-responsive","FooterWrapper","palette","gray","Footer","BackgroundStyle","createGlobalStyle","PostTemplateWrapper","PostTemplate","ScrollSpy","target","refs","sensitivity","this","targets","Array","from","querySelectorAll","window","addEventListener","onScroll","isOnTopOfDoc","deactiveateTarget","forEach","ref","t","findTarget","id","activate","document","documentElement","scrollTop","offsetTop","a","deactivate","filter","decodeURIComponent","attributes","value","replace","el","classList","add","remove","ToCWrapper","media","custom","indigo","PostToC","tableOfContents","useEffect","post","querySelector","headings","h","toc","dangerouslySetInnerHTML","__html","PostSeriesList","series","seriesList","nowPostTitle","lang","useToggle","seriesListVisible","onToggle","to","map","index","title","key","slug","onClick","bounceLeft","keyframes","bounceRight","Circle","styled","Link","props","right","css","Text","small","ellipsis","PrevNextPostItem","seriesPost","mediaQuery","ItemWrapper","PrevNextPost","len","length","useCallback","i","nowPageIndex","TagItemWrapper","TagItem","tag","TagListWrapper","TagList","tags","PostViewerWrapper","PostContentWrapper","PostViewer","html","released_at","updated_at","category","onClickTag","categoryMap","formatDate","display","textAlign","Utterances","React","obj","TypeError","containerRef","createRef","useLayoutEffect","utterances","createElement","repo","label","theme","crossOrigin","Object","entries","setAttribute","current","appendChild","displayName","PostPage","data","markdownRemark","site","allMarkdownRemark","reshapeSeries","edges","edge","node","frontmatter","fields","push","SEO","description","date","url","siteMetadata","siteUrl","image","childImageSharp","fluid","Header","ko_to","translation","en_to","MainResponsive","marginTop","marginBottom","SimpleProfile","type","categoryVisible","filterByLanguage"],"mappings":"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","file":"component---src-components-post-post-page-tsx-9c19d982b62222a61b08.js","sourcesContent":["import React, { memo } from \"react\"\r\nimport Styled from \"styled-components\"\r\n\r\nconst Wrapper = Styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: row;\r\n    \r\n`\r\n\r\ninterface MainPageRowTemplateProps {\r\n    children: React.ReactNode\r\n    style?: React.CSSProperties;\r\n}\r\n\r\nconst MainPageRowTemplate = ({ children, style }: MainPageRowTemplateProps) => {\r\n    return <Wrapper style={style}>{children}</Wrapper>\r\n}\r\n\r\nexport default memo(MainPageRowTemplate)\r\n","import React from \"react\"\r\nimport { Helmet } from \"react-helmet\"\r\n\r\ninterface AdsenseProps {\r\n    style?: React.CSSProperties\r\n    adClient?: string\r\n    adSlot?: string\r\n    adFormat?: string\r\n    adLayout?: string\r\n    fullWidthResponsive?: string\r\n}\r\n\r\nconst Adsense = ({\r\n    style,\r\n    adClient,\r\n    adSlot,\r\n    adFormat,\r\n    adLayout,\r\n    fullWidthResponsive,\r\n}: AdsenseProps) => {\r\n    return (\r\n        <>\r\n            <script\r\n                async\r\n                src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"\r\n            ></script>\r\n            <ins\r\n                className=\"adsbygoogle\"\r\n                style={style}\r\n                data-ad-client={adClient}\r\n                data-ad-slot={adSlot}\r\n                data-ad-format={adFormat}\r\n                data-ad-layout={adLayout}\r\n                data-full-width-responsive={fullWidthResponsive}\r\n            ></ins>\r\n            <script>(adsbygoogle = window.adsbygoogle || []).push({});</script>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Adsense\r\n","import React from 'react';\r\nimport Styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport ProfileIcons from '../common/ProfileIcons';\r\n\r\nconst FooterWrapper = Styled.div`\r\n    display: flex;\r\n    border-top: 1px solid ${palette.gray[5]};\r\n    margin-top: 5rem;\r\n    width: 100%;\r\n    height: 8rem;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n\r\n    span {\r\n        font-size: 1.5rem;\r\n    }\r\n\r\n    .icon-wrapper {\r\n        width: 9rem;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        flex-direction: row;\r\n        margin-top: 1rem;\r\n        svg {\r\n            width: 30%;\r\n            height: 1.5rem;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <FooterWrapper>\r\n            <span>millo's tech blog</span>\r\n            <ProfileIcons className=\"icon-wrapper\" />\r\n        </FooterWrapper>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Styled, { createGlobalStyle } from 'styled-components';\r\nimport '../css/typography.css';\r\n\r\nconst BackgroundStyle = createGlobalStyle`\r\n    body {\r\n        background-color: white;\r\n        font-family: \"ELAND\", serif;\r\n    }\r\n`;\r\n\r\nconst PostTemplateWrapper = Styled.div`\r\n    font-family: \"ELAND\", serif;\r\n`;\r\n\r\ninterface PostTemplateProps {\r\n    children: React.ReactNode;\r\n}\r\n\r\n\r\nconst PostTemplate = ({ children }: PostTemplateProps) => {\r\n    return (\r\n        <>\r\n            <BackgroundStyle />\r\n            <PostTemplateWrapper>\r\n                {children}\r\n            </PostTemplateWrapper>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PostTemplate;","export default class ScrollSpy {\r\n    public targets: HTMLElement[]\r\n    public refs: HTMLElement[]\r\n    public sensitivity: number\r\n\r\n    constructor(target: HTMLElement, refs: HTMLElement[], sensitivity?: number) {\r\n        this.targets = Array.from(target.querySelectorAll(\"a\"))\r\n        this.refs = refs\r\n        this.sensitivity = sensitivity || -10\r\n\r\n        window.addEventListener(\"scroll\", () => this.onScroll())\r\n    }\r\n\r\n    onScroll() {\r\n        if (!this.isOnTopOfDoc(this.refs[0])) {\r\n            this.deactiveateTarget()\r\n        }\r\n\r\n        this.refs.forEach(ref => {\r\n            if (this.isOnTopOfDoc(ref)) {\r\n                this.deactiveateTarget()\r\n                const t = this.findTarget(ref.id)\r\n                if (t) {\r\n                    this.activate(t)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    isOnTopOfDoc(ref: HTMLElement): boolean {\r\n        return (\r\n            document.documentElement.scrollTop - ref.offsetTop >= this.sensitivity\r\n        )\r\n    }\r\n\r\n    deactiveateTarget() {\r\n        this.targets.forEach(a => this.deactivate(a))\r\n    }\r\n\r\n    findTarget(id: string): HTMLElement | undefined {\r\n        return this.targets.filter(\r\n            a =>\r\n                decodeURIComponent(a.attributes[\"href\"].value.replace(/^#/, \"\")) === id\r\n        )[0]\r\n    }\r\n\r\n    activate(el: HTMLElement) {\r\n        el.classList.add(\"active\")\r\n    }\r\n\r\n    deactivate(el: HTMLElement) {\r\n        el.classList.remove(\"active\")\r\n    }\r\n}","import React, { memo, useEffect } from \"react\"\r\nimport Styled from 'styled-components';\r\nimport media from \"../../lib/styles/media\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport ScrollSpy from \"./ScrollSpy\"\r\n\r\nconst ToCWrapper = Styled.div`\r\n    transition: 0.125s all ease-in;\r\n    width: 20%;\r\n    padding: 0.5rem;\r\n    padding-right: 1rem;\r\n    padding-left: 0;\r\n    order: 1;\r\n    top: 10rem;\r\n    margin-left: 4rem;\r\n    position: sticky;\r\n    height: 40rem;\r\n    overflow-y: auto;\r\n    word-break: break-all;\r\n\r\n    ${media.custom(1440)} {\r\n        display: none;\r\n    }\r\n    ul:first-child {\r\n        padding-left: 1rem;\r\n        border-left: 2px solid ${palette.indigo[4]};\r\n    }\r\n    ul {\r\n        list-style: none;\r\n        margin: 0;\r\n        li {\r\n            \r\n            border: none;\r\n            margin-bottom: 4px;\r\n            p {\r\n                margin: 0;\r\n            }\r\n        }\r\n    }\r\n    a {\r\n        text-decoration: none;\r\n        color: ${palette.gray[4]};\r\n        font-size: 0.9rem;\r\n        &:hover,\r\n        &:focus {\r\n            color: ${palette.indigo[4]};\r\n        }\r\n        &.active {\r\n            color: ${palette.indigo[9]};\r\n            transform: scale(1.1);\r\n        }\r\n    }\r\n    & + & {\r\n        margin-top: 4px;\r\n    }\r\n\r\n`;\r\n\r\ninterface PostToCProps {\r\n    tableOfContents: string\r\n}\r\n\r\nconst PostToC = ({ tableOfContents }: PostToCProps) => {\r\n    useEffect(() => {\r\n        const post = document.querySelector(\"#content-container\")\r\n        const headings = Array.from(\r\n            post.querySelectorAll(\"h1, h2\")\r\n        ).filter((h: any) => h.id)\r\n        const toc = document.querySelector(\"#toc-container\")\r\n\r\n        new ScrollSpy(toc as HTMLElement, headings as HTMLElement[]);\r\n    }, [])\r\n\r\n    return (\r\n        <ToCWrapper\r\n            id=\"toc-container\"\r\n            dangerouslySetInnerHTML={{ __html: tableOfContents }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default memo(PostToC);","import { Link } from 'gatsby';\r\nimport React from 'react';\r\nimport { AiFillCaretDown, AiFillCaretUp, AiOutlineLeft, AiOutlineRight } from 'react-icons/ai';\r\nimport { IoBookmarkSharp } from \"react-icons/io5\";\r\nimport Styled from 'styled-components';\r\nimport useToggle from '../../lib/hooks/useToggle';\r\nimport media from '../../lib/styles/media';\r\nimport palette from '../../lib/styles/palette';\r\n\r\nconst Wrapper = Styled.div`\r\n    position: relative;\r\n    width: 80%;\r\n    background-color: ${palette.gray[0]};\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    padding-top: 1rem;\r\n    padding-bottom: 1rem;\r\n    border-radius: 10px;\r\n    word-break: break-all;\r\n\r\n    ${media.custom(767)} {\r\n        width: 100%;\r\n    }\r\n\r\n    h2 {\r\n        margin-left: 1.5rem;\r\n        margin-right: 1.5rem;\r\n\r\n        ${media.custom(767)} {\r\n            font-size: 1.2rem;\r\n        }\r\n    }\r\n\r\n    a {\r\n        text-decoration: none;\r\n        color: ${palette.gray[8]};\r\n\r\n        &:hover {\r\n            text-decoration: underline;\r\n        }\r\n    }\r\n\r\n    ol {\r\n        padding-left: 3rem;\r\n        padding-right: 1.5rem;\r\n\r\n        ${media.custom(767)} {\r\n            font-size: 0.9rem;\r\n        }\r\n\r\n        .now-post {\r\n            color: ${palette.indigo[5]};\r\n            font-weight: bold;\r\n        }\r\n\r\n        li {\r\n            margin: 0.5rem;\r\n            color: ${palette.gray[6]};\r\n\r\n\r\n        }\r\n    }\r\n\r\n    .bookmark-img {\r\n        position : absolute;\r\n        right: 1.5rem;\r\n        top: -2px;\r\n        width: 2.8rem;\r\n        height: 2.8rem;\r\n        color: ${palette.indigo[5]};\r\n\r\n        ${media.custom(767)} {\r\n            right: 1rem;\r\n            width: 2.2rem;\r\n            height: 2.2rem;\r\n        }\r\n    }\r\n\r\n    .footer {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        margin-top: 3rem;\r\n        margin-right: 1.5rem;\r\n        margin-left: 1.5rem;\r\n\r\n        .visible-btn {\r\n            display: flex;\r\n            cursor: pointer;\r\n            align-items: center;\r\n            color: ${palette.gray[7]};\r\n            span {\r\n                margin-left: 0.3rem;\r\n                font-size: 0.9rem;\r\n            }\r\n        }\r\n\r\n    }\r\n`;\r\n\r\nexport type PartialSeriesType = {\r\n    slug: string;\r\n    title: string;\r\n    lang: string;\r\n}\r\n\r\ninterface PostSeriesListProps {\r\n    series: string;\r\n    seriesList: Array<PartialSeriesType>;\r\n    nowPostTitle: string;\r\n    lang: string;\r\n}\r\n\r\nconst PostSeriesList = ({ series, seriesList, nowPostTitle, lang }: PostSeriesListProps) => {\r\n    const [seriesListVisible, onToggle] = useToggle(true);\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Link to={`/series/${series.replace(/ /gi, '-')}`}><h2>{series}</h2></Link>\r\n            <IoBookmarkSharp className=\"bookmark-img\" />\r\n            {seriesListVisible\r\n                ?\r\n                <ol>\r\n                    {seriesList.map((series, index) => {\r\n                        return nowPostTitle === series.title ? <li key={index}><span className=\"now-post\" >{series.title}</span></li> : <li key={index}><Link to={`${series.slug}`} >{series.title}</Link></li>\r\n                    })}\r\n                </ol>\r\n                :\r\n                <div></div>}\r\n            <div className=\"footer\">\r\n                {seriesListVisible\r\n                    ?\r\n                    <div className=\"visible-btn\" onClick={onToggle}>\r\n                        <AiFillCaretUp /><span>{lang === 'ko' ? '숨기기' : 'Hide'}</span>\r\n                    </div>\r\n                    :\r\n                    <div className=\"visible-btn\" onClick={onToggle}>\r\n                        <AiFillCaretDown /><span>{lang === 'ko' ? '목록 보기' : 'Show list'}</span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default PostSeriesList;","import React from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport { MdArrowBack, MdArrowForward } from 'react-icons/md';\r\nimport { ellipsis } from '../../lib/styles/utils';\r\nimport media from '../../lib/styles/media';\r\nimport { Link } from 'gatsby';\r\nimport { PartialSeriesType } from './PostSeriesList';\r\n\r\nconst bounceLeft = keyframes`\r\n    0% {\r\n        transform: translateX(0px)\r\n    }\r\n    50% {\r\n        transform: translateX(-8px)\r\n    }\r\n    100% {\r\n        transform: translateX(0px)\r\n    }\r\n`;\r\n\r\nconst bounceRight = keyframes`\r\n    0% {\r\n        transform: translateX(0px)\r\n    }\r\n    50% {\r\n        transform: translateX(8px)\r\n    }\r\n    100% {\r\n        transform: translateX(0px)\r\n    }\r\n`;\r\n\r\nconst Circle = styled.div`\r\n    width: 32px;\r\n    height: 32px;\r\n    border-radius: 16px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border: 1px solid ${palette.indigo[5]};\r\n    font-size: 1.5rem;\r\n    color: ${palette.indigo[5]};\r\n    margin-left: 1rem;\r\n    margin-right: 1rem;\r\n`;\r\n\r\nconst Wrapper = styled(Link) <{ right: boolean }>`\r\n    cursor: pointer;\r\n    background: ${palette.gray[0]};\r\n    box-shadow: 0 0 4px 0 rgba(0, 0, 0, 0.06);\r\n    width: 100%;\r\n    height: 4rem;\r\n    display: flex;\r\n    align-items: center;\r\n    text-decoration: none;\r\n    ${props =>\r\n        props.right &&\r\n        css`\r\n        flex-direction: row-reverse;\r\n        `}\r\n    &:hover {\r\n        ${Circle} {\r\n        animation-duration: 0.35s;\r\n        animation-name: ${props => (props.right ? bounceRight : bounceLeft)};\r\n        animation-fill-mode: forwards;\r\n        animation-timing-function: ease-out;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Text = styled.div<{ right: boolean }>`\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: ${props => (props.right ? 'flex-end' : 'flex-start')};\r\n    line-height: 1;\r\n    min-width: 0;\r\n    \r\n    ${props =>\r\n        props.right ?\r\n            css`\r\n                margin-left: 1rem;\r\n            ` :\r\n            css`\r\n                margin-right: 1rem;\r\n            `\r\n    };\r\n    .description {\r\n        font-size: 0.75rem;\r\n        font-weight: bold;\r\n        color: ${palette.gray[7]};\r\n    }\r\n    h3 {\r\n        ${props =>\r\n        props.right ?\r\n            css`\r\n                margin-left: 1rem;\r\n                text-align: right;\r\n            ` :\r\n            css`\r\n                margin-right: 1rem;\r\n            `\r\n    };\r\n        width: 100%;\r\n        font-size: 1.125rem;\r\n        color: ${palette.gray[7]};\r\n        line-height: 1.15;\r\n        margin: 0;\r\n        margin-top: 0.5rem;\r\n        ${media.small} {\r\n            font-size: 1rem;\r\n        }\r\n        ${ellipsis};\r\n    }\r\n`;\r\n\r\ninterface PrevNextPostItemProps {\r\n    right: boolean;\r\n    seriesPost: PartialSeriesType | null;\r\n    lang: string;\r\n}\r\n\r\nconst PrevNextPostItem = ({\r\n    right,\r\n    seriesPost,\r\n    lang\r\n}: PrevNextPostItemProps) => {\r\n    if (!seriesPost) {\r\n        return null;\r\n    }\r\n    const to = `${seriesPost.slug}`;\r\n\r\n    return (\r\n        <Wrapper right={right} to={to}>\r\n            <Circle>\r\n                {right ? <MdArrowForward /> : <MdArrowBack />}\r\n            </Circle>\r\n            <Text right={right}>\r\n                <div className=\"description\">\r\n                    {right ? (lang === 'ko' ? '다음' : 'Next') : (lang === 'ko' ? '이전' : 'Previous')} {lang === 'ko' ? '포스트' : 'Post'}\r\n                </div>\r\n                <h3>{seriesPost.title}</h3>\r\n            </Text>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default PrevNextPostItem;\r\n","import React, { useCallback } from 'react';\r\nimport Styled from 'styled-components';\r\nimport { mediaQuery } from '../../lib/styles/media';\r\nimport { PartialSeriesType } from './PostSeriesList';\r\nimport PrevNextPostItem from './PrevNextPostItem';\r\n\r\nconst Wrapper = Styled.div`\r\n    width: 100%;\r\n    margin-top: 5rem;\r\n    display: flex;\r\n    align-items: space-between;\r\n    justify-content: space-between;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    ${mediaQuery(767)} {\r\n        flex-direction: column-reverse;\r\n    }\r\n`;\r\n\r\nconst ItemWrapper = Styled.div`\r\n    width: 300px;\r\n\r\n    ${mediaQuery(767)} {\r\n        width: 100%;\r\n        & + & {\r\n            margin-bottom: 1.5rem;\r\n        }\r\n    }\r\n`;\r\n\r\n\r\ninterface PrevNextPostProps {\r\n    nowPostTitle: string;\r\n    seriesList: Array<PartialSeriesType>;\r\n    lang: string;\r\n}\r\n\r\nconst PrevNextPost = ({ nowPostTitle, seriesList, lang }: PrevNextPostProps) => {\r\n    const len = seriesList.length;\r\n\r\n    const nowPageIndex = useCallback(() => {\r\n        let len = seriesList.length;\r\n        for (let i = 0; i < len; i++) {\r\n            if (seriesList[i].title === nowPostTitle) return i;\r\n        }\r\n        return 0;\r\n    }, [nowPostTitle, seriesList, len]);\r\n    const index = nowPageIndex();\r\n\r\n    return (\r\n        <Wrapper>\r\n            <ItemWrapper>\r\n                <PrevNextPostItem seriesPost={index > 0 ? seriesList[index - 1] : null} right={false} lang={lang} />\r\n            </ItemWrapper>\r\n            <ItemWrapper>\r\n                <PrevNextPostItem seriesPost={index < len - 1 ? seriesList[index + 1] : null} right={true} lang={lang} />\r\n            </ItemWrapper>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default PrevNextPost;","import React, { memo } from 'react';\r\nimport Styled from 'styled-components';\r\nimport media from '../../lib/styles/media';\r\nimport palette from '../../lib/styles/palette';\r\n\r\nconst TagItemWrapper = Styled.div`\r\n    padding: 0.5rem 1rem;\r\n    background-color: ${palette.gray[1]};\r\n    color: ${palette.indigo[8]};\r\n    border-radius: 0.5rem;\r\n    margin-right: 1rem;\r\n    margin-bottom: 0.5rem;\r\n    // cursor: pointer;\r\n    &:hover {\r\n        // background-color: ${palette.gray[2]};\r\n    }\r\n    \r\n    ${media.custom(1056)} {\r\n        font-size: 0.8rem;\r\n    }\r\n`;\r\n\r\ninterface TagItemProps {\r\n    tag: string;\r\n    onClick: (tag: string) => void;\r\n}\r\n\r\nconst TagItem = memo(({ tag, onClick }: TagItemProps) => <TagItemWrapper onClick={() => onClick(tag)}>{tag}</TagItemWrapper>);\r\n\r\nconst TagListWrapper = Styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin-bottom: 2rem;\r\n`;\r\n\r\ninterface TagListWrapper {\r\n    tags: Array<string>;\r\n    onClick: (tag: string) => void;\r\n}\r\n\r\nconst TagList = ({ tags, onClick }: TagListWrapper) => {\r\n    return (\r\n        <TagListWrapper>\r\n            {tags.map((tag, index) => {\r\n                return <TagItem tag={tag} key={index} onClick={onClick} />\r\n            })}\r\n        </TagListWrapper>\r\n    );\r\n};\r\n\r\nexport default memo(TagList);","import { Link } from \"gatsby\"\r\nimport React, { useCallback } from \"react\"\r\nimport Styled from \"styled-components\"\r\nimport { categoryMap } from \"../../lib/styles/category\"\r\nimport media from \"../../lib/styles/media\"\r\nimport palette from \"../../lib/styles/palette\"\r\nimport { formatDate } from \"../../lib/styles/utils\"\r\nimport Adsense from \"../common/Adsense\"\r\nimport PostSeriesList, { PartialSeriesType } from \"./PostSeriesList\"\r\nimport PrevNextPost from \"./PrevNextPost\"\r\nimport TagList from \"./TagList\"\r\n\r\ntype PostType = {\r\n    author: string\r\n    category: string\r\n    title: string\r\n    tags: Array<string>\r\n    released_at: string\r\n    updated_at: string\r\n    html: string\r\n}\r\nconst PostViewerWrapper = Styled.div`\r\n    width: 60%;\r\n    margin-left: 0;\r\n    max-width: 972px;\r\n\r\n    ${media.custom(1440)} {\r\n        width: 80%;\r\n    }\r\n    ${media.custom(1056)} {\r\n        width: 100%;\r\n    }\r\n\r\n    .category {\r\n        text-decoration: none;\r\n        font-size: 1.5rem;\r\n        color: gray;\r\n        margin-bottom: 0;\r\n        &:hover {\r\n            text-decoration: underline;\r\n        }\r\n\r\n        \r\n        ${media.custom(1056)} {\r\n            font-size: 1rem;\r\n        }\r\n    }\r\n\r\n    .title {\r\n        margin-top: 0.5rem;\r\n        font-size: 3rem;\r\n        ${media.custom(1056)} {\r\n            font-size: 2.2rem;\r\n        }\r\n    }\r\n\r\n    .date {\r\n        line-height: 0.8;\r\n        color: gray;\r\n        ${media.custom(1056)} {\r\n            font-size: 0.8rem;\r\n        }\r\n    }\r\n\r\n    .adsense-block {\r\n        width: 100%;\r\n    }\r\n`\r\n\r\nconst PostContentWrapper = Styled.div`\r\n    width: 100%;\r\n    margin: 0;\r\n    word-break: break-all;\r\n\r\n    a {\r\n        color: ${palette.indigo[6]};\r\n        text-decoration: none;\r\n        &:hover {\r\n            text-decoration: underline;\r\n        }\r\n    }\r\n\r\n    h1 {\r\n        margin-top: 3rem;\r\n        ${media.custom(767)} {\r\n            margin-top: 2rem;\r\n            font-size: 1.8rem;\r\n        }\r\n    }\r\n\r\n    h2 {\r\n        margin-top: 3rem;\r\n        ${media.custom(767)} {\r\n            margin-top: 2rem;\r\n        }\r\n    }\r\n\r\n    h3 {\r\n        margin-top: 2rem;\r\n        ${media.custom(767)} {\r\n            margin-top: 1rem;\r\n        }\r\n    }\r\n\r\n    p {\r\n        font-size: 1.1rem;\r\n        line-height: 1.8;\r\n        ${media.custom(767)} {\r\n            font-size: 0.9rem;\r\n            line-height: 1.7;\r\n        }\r\n    }\r\n\r\n    li {\r\n        font-size: 1.1rem;\r\n        line-height: 2;\r\n\r\n        ${media.custom(767)} {\r\n            font-size: 0.9rem;\r\n            line-height: 1.7;\r\n        }\r\n\r\n        h4, p {\r\n            margin: 0;\r\n            font-size: 1.1rem;\r\n            ${media.custom(767)} {\r\n                font-size: 0.9rem;\r\n                line-height: 1.7;\r\n            }\r\n        }\r\n    }\r\n\r\n    pre, code {\r\n        font-size: 1rem;\r\n        margin-bottom: 2rem;\r\n        ${media.custom(767)} {\r\n            font-size: 0.9rem;\r\n            margin-bottom: 1.5rem;\r\n        }\r\n    }\r\n\r\n    pre {\r\n        border-radius: 3px;\r\n    }\r\n\r\n    img {\r\n        width: 100%;\r\n    }\r\n\r\n    table {\r\n        white-space: normal;\r\n        max-width: 100%;\r\n        border-collapse: collapse;\r\n        text-align: left;\r\n        line-height: 1.5;\r\n        border-top: 1px solid #ccc;\r\n        border-bottom: 1px solid #ccc;\r\n        margin: 20px 0;\r\n    }\r\n    table thead th {\r\n        min-width: 60px;\r\n        max-width: 150px;\r\n        padding: 10px;\r\n        font-weight: bold;\r\n        vertical-align: top;\r\n        color: #fff;\r\n        background: ${palette.indigo[6]};\r\n        margin: 20px 10px;\r\n    }\r\n    table tbody th {\r\n        max-width: 150px;\r\n        padding: 10px;\r\n    }\r\n    table td {\r\n        max-width: 350px;\r\n        padding: 10px;\r\n        vertical-align: top;\r\n    }\r\n    table tr:nth-child(even) {\r\n        background: ${palette.indigo[0]};\r\n    }\r\n    th {\r\n        font-size: 0.9rem;\r\n        ${media.custom(767)} {\r\n            font-size: 0.8rem;\r\n        }\r\n    }\r\n    td {\r\n        font-size: 0.9rem;\r\n        ${media.custom(767)} {\r\n            font-size: 0.8rem;\r\n        }\r\n    }\r\n\r\n    hr {\r\n        margin-top: 3rem;\r\n        margin-bottom: 3rem;\r\n        ${media.custom(767)} {\r\n            margin-top: 2rem;\r\n            margin-bottom: 2rem;\r\n        }\r\n    }\r\n\r\n    blockquote {\r\n        background-color: ${palette.gray[0]};\r\n        width: 100%;\r\n        margin: 0;\r\n        padding-top: 0.5rem;\r\n        padding-bottom: 0.5rem;\r\n        border-left: 4px solid ${palette.indigo[5]};\r\n\r\n        p {\r\n            margin-left: 2rem;\r\n            margin-right: 2rem;\r\n        }\r\n    }\r\n`\r\n\r\ninterface PostViewerProps {\r\n    post: PostType\r\n    series: string\r\n    seriesList: Array<PartialSeriesType>\r\n    lang: string\r\n}\r\n\r\nconst PostViewer = ({ post, series, seriesList, lang }: PostViewerProps) => {\r\n    const { html, title, released_at, updated_at, category, tags } = post\r\n\r\n    const onClickTag = useCallback((tag: string) => {}, [tags])\r\n\r\n    return (\r\n        <PostViewerWrapper>\r\n            {category && (\r\n                <Link\r\n                    className=\"category\"\r\n                    to={\r\n                        lang === \"ko\"\r\n                            ? `/?category=${category}`\r\n                            : `/en?category=${category}`\r\n                    }\r\n                >\r\n                    {categoryMap[category] ? (\r\n                        <img src={categoryMap[category].src} />\r\n                    ) : (\r\n                        `[${category}]`\r\n                    )}\r\n                </Link>\r\n            )}\r\n            <h1 className=\"title\">{title}</h1>\r\n            <p className=\"date\">\r\n                {lang === \"ko\" ? \"게시: \" : \"\"}\r\n                {formatDate(released_at, lang)}\r\n            </p>\r\n            {updated_at && (\r\n                <p className=\"date\">\r\n                    {lang === \"ko\" ? \"수정: \" : \"Last edited at \"}\r\n                    {formatDate(updated_at, lang)}\r\n                </p>\r\n            )}\r\n            {tags && <TagList tags={tags} onClick={onClickTag} />}\r\n            <div className=\"adsense-block\">\r\n                <Adsense\r\n                    style={{ display: \"block\" }}\r\n                    adClient=\"ca-pub-3926462216067158\"\r\n                    adSlot=\"6763105273\"\r\n                    adFormat=\"auto\"\r\n                    fullWidthResponsive=\"true\"\r\n                />\r\n            </div>\r\n            {series !== \"none\" && (\r\n                <PostSeriesList\r\n                    series={series}\r\n                    seriesList={seriesList}\r\n                    nowPostTitle={title}\r\n                    lang={lang}\r\n                />\r\n            )}\r\n            <div className=\"adsense-block\">\r\n                <Adsense\r\n                    style={{ display: \"block\", textAlign: \"center\" }}\r\n                    adClient=\"ca-pub-3926462216067158\"\r\n                    adSlot=\"6864119577\"\r\n                    adFormat=\"fluid\"\r\n                    adLayout=\"in-article\"\r\n                />\r\n            </div>\r\n            <PostContentWrapper\r\n                id=\"content-container\"\r\n                dangerouslySetInnerHTML={{ __html: html }}\r\n            />\r\n            <div className=\"adsense-block\">\r\n                <Adsense\r\n                    style={{ display: \"block\", textAlign: \"center\" }}\r\n                    adClient=\"ca-pub-3926462216067158\"\r\n                    adSlot=\"8800017777\"\r\n                    adFormat=\"fluid\"\r\n                    adLayout=\"in-article\"\r\n                />\r\n            </div>\r\n            <div className=\"adsense-block\">\r\n                <Adsense\r\n                    style={{ display: \"block\" }}\r\n                    adClient=\"ca-pub-3926462216067158\"\r\n                    adSlot=\"6407882052\"\r\n                    adFormat=\"auto\"\r\n                    fullWidthResponsive=\"true\"\r\n                />\r\n            </div>\r\n            <PrevNextPost\r\n                nowPostTitle={title}\r\n                seriesList={seriesList}\r\n                lang={lang}\r\n            />\r\n        </PostViewerWrapper>\r\n    )\r\n}\r\n\r\nexport default PostViewer\r\n","import React, { createRef, useLayoutEffect } from 'react';\r\nimport Styled from 'styled-components';\r\nimport { mediaQuery } from '../../lib/styles/media';\r\n\r\nconst src = 'https://utteranc.es/client.js';\r\n\r\nconst Wrapper = Styled.div`\r\n    width: 60%;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n\r\n    \r\n    ${mediaQuery(1056)} {\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\ninterface IUtterancesProps {\r\n}\r\n\r\nconst Utterances = React.memo(({ }: IUtterancesProps) => {\r\n    const containerRef = createRef<HTMLDivElement>();\r\n\r\n    useLayoutEffect(() => {\r\n        const utterances = document.createElement('script');\r\n\r\n        const attributes = {\r\n            src,\r\n            repo: 'millo-L/millo-L.github.io',\r\n            'issue-term': 'pathname',\r\n            label: 'comment',\r\n            theme: 'github-light',\r\n            crossOrigin: 'anonymous',\r\n            async: 'true',\r\n        };\r\n\r\n        Object.entries(attributes).forEach(([key, value]) => {\r\n            utterances.setAttribute(key, value);\r\n        });\r\n\r\n        containerRef.current.appendChild(utterances);\r\n    }, []);\r\n\r\n    return <Wrapper ref={containerRef} />;\r\n});\r\n\r\nUtterances.displayName = 'Utterances';\r\n\r\nexport default Utterances;","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import { graphql } from \"gatsby\"\r\nimport React, { useCallback } from \"react\"\r\nimport Footer from \"../base/Footer\"\r\nimport Header from \"../base/Header\"\r\nimport SimpleProfile from \"../common/SimpleProfile\"\r\nimport MainPageRowTemplate from \"../main/MainPageRowTemplate\"\r\nimport MainResponsive from \"../main/MainResponsive\"\r\nimport PostTemplate from \"../post/PostTemplate\"\r\nimport PostToC from \"../post/PostToC\"\r\nimport PostViewer from \"../post/PostViewer\"\r\nimport SEO from \"../SEO\"\r\nimport Utterances from \"./Utterances\"\r\nimport \"../css/typography.css\"\r\nimport { createGlobalStyle } from \"styled-components\"\r\nimport { PartialSeriesType } from \"./PostSeriesList\"\r\nimport { filterByLanguage } from \"../../lib/list/reshape\"\r\n\r\ncreateGlobalStyle`\r\n    body {\r\n        font-family: \"ELAND\", serif;\r\n    }\r\n`\r\n\r\ninterface PostPageProps {\r\n    data: any\r\n}\r\n\r\nconst PostPage = ({ data }: PostPageProps) => {\r\n    const { markdownRemark, site, allMarkdownRemark } = data\r\n    if (!(markdownRemark && site && allMarkdownRemark)) return <div></div>\r\n\r\n    const reshapeSeries = useCallback(() => {\r\n        const { edges } = allMarkdownRemark\r\n        let seriesList: Array<PartialSeriesType> = []\r\n\r\n        edges.map(edge => {\r\n            const { node } = edge\r\n            let series: PartialSeriesType = {\r\n                title: node.frontmatter.title,\r\n                lang: node.frontmatter.lang,\r\n                slug: node.fields.slug,\r\n            }\r\n\r\n            seriesList.push(series)\r\n        })\r\n\r\n        return seriesList\r\n    }, [allMarkdownRemark])\r\n\r\n    return (\r\n        <PostTemplate>\r\n            <SEO\r\n                title={markdownRemark.frontmatter.title}\r\n                description={markdownRemark.frontmatter.description}\r\n                date={markdownRemark.frontmatter.released_at}\r\n                url={site.siteMetadata.siteUrl + markdownRemark.fields.slug}\r\n                image={\r\n                    markdownRemark.frontmatter.image.childImageSharp.fluid.src\r\n                }\r\n                lang={markdownRemark.frontmatter.lang}\r\n            />\r\n            <Header\r\n                lang={markdownRemark.frontmatter.lang}\r\n                ko_to={\r\n                    markdownRemark.frontmatter.lang === \"ko\"\r\n                        ? \"#\"\r\n                        : markdownRemark.frontmatter.translation\r\n                }\r\n                en_to={\r\n                    markdownRemark.frontmatter.lang === \"en\"\r\n                        ? \"#\"\r\n                        : markdownRemark.frontmatter.translation\r\n                }\r\n            />\r\n            <MainResponsive style={{ marginTop: \"2rem\" }}>\r\n                <MainPageRowTemplate style={{ marginBottom: \"2rem\" }}>\r\n                    <SimpleProfile\r\n                        style={{ marginTop: \"0.5rem\" }}\r\n                        type=\"body\"\r\n                        categoryVisible={true}\r\n                        lang={markdownRemark.frontmatter.lang}\r\n                    />\r\n                    <PostViewer\r\n                        post={{\r\n                            ...markdownRemark.frontmatter,\r\n                            html: markdownRemark.html,\r\n                        }}\r\n                        series={markdownRemark.frontmatter.series}\r\n                        seriesList={filterByLanguage(\r\n                            reshapeSeries(),\r\n                            markdownRemark.frontmatter.lang\r\n                        )}\r\n                        lang={markdownRemark.frontmatter.lang}\r\n                    />\r\n                    <PostToC tableOfContents={markdownRemark.tableOfContents} />\r\n                </MainPageRowTemplate>\r\n                {/*<PostComment\r\n          title={markdownRemark.frontmatter.title}\r\n          id={markdownRemark.id}\r\n          path={markdownRemark.frontmatter.path}\r\n        />*/}\r\n                <Utterances />\r\n                <Footer />\r\n            </MainResponsive>\r\n        </PostTemplate>\r\n    )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n    query($slug: String!, $series: String!) {\r\n        markdownRemark(fields: { slug: { eq: $slug } }) {\r\n            html\r\n            id\r\n            tableOfContents(absolute: false, maxDepth: 2, heading: null)\r\n            frontmatter {\r\n                author\r\n                description\r\n                category\r\n                released_at(formatString: \"YYYY-MM-DD\")\r\n                updated_at(formatString: \"YYYY-MM-DD\")\r\n                tags\r\n                title\r\n                lang\r\n                series\r\n                translation\r\n                image {\r\n                    childImageSharp {\r\n                        fluid {\r\n                            ...GatsbyImageSharpFluid\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            fields {\r\n                slug\r\n            }\r\n        }\r\n        site {\r\n            siteMetadata {\r\n                siteUrl\r\n            }\r\n        }\r\n        allMarkdownRemark(\r\n            filter: { frontmatter: { series: { eq: $series } } }\r\n            sort: { order: ASC, fields: frontmatter___released_at }\r\n        ) {\r\n            edges {\r\n                node {\r\n                    frontmatter {\r\n                        title\r\n                        lang\r\n                    }\r\n                    fields {\r\n                        slug\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport default PostPage\r\n"],"sourceRoot":""}